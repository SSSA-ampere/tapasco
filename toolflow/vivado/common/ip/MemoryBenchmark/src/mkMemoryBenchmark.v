//
// Generated by Bluespec Compiler (build 38534dc)
//
// On Fri Apr 17 13:40:33 CEST 2020
//
//
// Ports:
// Name                         I/O  size props
// S_AXI_arready                  O     1
// S_AXI_rvalid                   O     1
// S_AXI_rdata                    O    64
// S_AXI_rresp                    O     2
// S_AXI_awready                  O     1
// S_AXI_wready                   O     1
// S_AXI_bvalid                   O     1
// S_AXI_bresp                    O     2
// M_AXI_arvalid                  O     1
// M_AXI_arid                     O     1
// M_AXI_araddr                   O    64
// M_AXI_arlen                    O     8
// M_AXI_arsize                   O     3
// M_AXI_arburst                  O     2
// M_AXI_arlock                   O     1
// M_AXI_arcache                  O     4
// M_AXI_arprot                   O     3
// M_AXI_arqos                    O     4
// M_AXI_arregion                 O     4
// M_AXI_rready                   O     1
// M_AXI_awvalid                  O     1
// M_AXI_awid                     O     1
// M_AXI_awaddr                   O    64
// M_AXI_awlen                    O     8
// M_AXI_awsize                   O     3
// M_AXI_awburst                  O     2
// M_AXI_awlock                   O     1
// M_AXI_awcache                  O     4
// M_AXI_awprot                   O     3
// M_AXI_awqos                    O     4
// M_AXI_awregion                 O     4
// M_AXI_wvalid                   O     1
// M_AXI_wdata                    O   512
// M_AXI_wstrb                    O    64
// M_AXI_wlast                    O     1
// M_AXI_bready                   O     1
// M_AXI_BATCH_arvalid            O     1
// M_AXI_BATCH_arid               O     1
// M_AXI_BATCH_araddr             O    64
// M_AXI_BATCH_arlen              O     8
// M_AXI_BATCH_arsize             O     3
// M_AXI_BATCH_arburst            O     2
// M_AXI_BATCH_arlock             O     1
// M_AXI_BATCH_arcache            O     4
// M_AXI_BATCH_arprot             O     3
// M_AXI_BATCH_arqos              O     4
// M_AXI_BATCH_arregion           O     4
// M_AXI_BATCH_rready             O     1
// M_AXI_BATCH_awvalid            O     1
// M_AXI_BATCH_awid               O     1
// M_AXI_BATCH_awaddr             O    64
// M_AXI_BATCH_awlen              O     8
// M_AXI_BATCH_awsize             O     3
// M_AXI_BATCH_awburst            O     2
// M_AXI_BATCH_awlock             O     1
// M_AXI_BATCH_awcache            O     4
// M_AXI_BATCH_awprot             O     3
// M_AXI_BATCH_awqos              O     4
// M_AXI_BATCH_awregion           O     4
// M_AXI_BATCH_wvalid             O     1
// M_AXI_BATCH_wdata              O   512
// M_AXI_BATCH_wstrb              O    64
// M_AXI_BATCH_wlast              O     1
// M_AXI_BATCH_bready             O     1
// interrupt                      O     1 reg
// CLK                            I     1 clock
// RST_N                          I     1 reset
// S_AXI_arvalid                  I     1
// S_AXI_araddr                   I    12
// S_AXI_arprot                   I     3
// S_AXI_rready                   I     1
// S_AXI_awvalid                  I     1
// S_AXI_awaddr                   I    12
// S_AXI_awprot                   I     3
// S_AXI_wvalid                   I     1
// S_AXI_wdata                    I    64
// S_AXI_wstrb                    I     8
// S_AXI_bready                   I     1
// M_AXI_arready                  I     1
// M_AXI_rvalid                   I     1
// M_AXI_rid                      I     1
// M_AXI_rdata                    I   512
// M_AXI_rresp                    I     2
// M_AXI_rlast                    I     1
// M_AXI_awready                  I     1
// M_AXI_wready                   I     1
// M_AXI_bvalid                   I     1
// M_AXI_bresp                    I     2
// M_AXI_bid                      I     1
// M_AXI_BATCH_arready            I     1
// M_AXI_BATCH_rvalid             I     1
// M_AXI_BATCH_rid                I     1
// M_AXI_BATCH_rdata              I   512
// M_AXI_BATCH_rresp              I     2
// M_AXI_BATCH_rlast              I     1
// M_AXI_BATCH_awready            I     1
// M_AXI_BATCH_wready             I     1
// M_AXI_BATCH_bvalid             I     1
// M_AXI_BATCH_bresp              I     2
// M_AXI_BATCH_bid                I     1
//
// Combinational paths from inputs to outputs:
//   S_AXI_rready -> S_AXI_arready
//
//

`ifdef BSV_ASSIGNMENT_DELAY
`else
  `define BSV_ASSIGNMENT_DELAY
`endif

`ifdef BSV_POSITIVE_RESET
  `define BSV_RESET_VALUE 1'b1
  `define BSV_RESET_EDGE posedge
`else
  `define BSV_RESET_VALUE 1'b0
  `define BSV_RESET_EDGE negedge
`endif

module mkMemoryBenchmark(CLK,
			 RST_N,

			 S_AXI_arready,

			 S_AXI_arvalid,

			 S_AXI_araddr,

			 S_AXI_arprot,

			 S_AXI_rvalid,

			 S_AXI_rready,

			 S_AXI_rdata,

			 S_AXI_rresp,

			 S_AXI_awready,

			 S_AXI_awvalid,

			 S_AXI_awaddr,

			 S_AXI_awprot,

			 S_AXI_wready,

			 S_AXI_wvalid,

			 S_AXI_wdata,

			 S_AXI_wstrb,

			 S_AXI_bvalid,

			 S_AXI_bready,

			 S_AXI_bresp,

			 M_AXI_arvalid,

			 M_AXI_arready,

			 M_AXI_arid,

			 M_AXI_araddr,

			 M_AXI_arlen,

			 M_AXI_arsize,

			 M_AXI_arburst,

			 M_AXI_arlock,

			 M_AXI_arcache,

			 M_AXI_arprot,

			 M_AXI_arqos,

			 M_AXI_arregion,

			 M_AXI_rready,

			 M_AXI_rvalid,

			 M_AXI_rid,
			 M_AXI_rdata,
			 M_AXI_rresp,
			 M_AXI_rlast,

			 M_AXI_awready,

			 M_AXI_awvalid,

			 M_AXI_awid,

			 M_AXI_awaddr,

			 M_AXI_awlen,

			 M_AXI_awsize,

			 M_AXI_awburst,

			 M_AXI_awlock,

			 M_AXI_awcache,

			 M_AXI_awprot,

			 M_AXI_awqos,

			 M_AXI_awregion,

			 M_AXI_wready,

			 M_AXI_wvalid,

			 M_AXI_wdata,

			 M_AXI_wstrb,

			 M_AXI_wlast,

			 M_AXI_bvalid,

			 M_AXI_bready,

			 M_AXI_bresp,
			 M_AXI_bid,

			 M_AXI_BATCH_arvalid,

			 M_AXI_BATCH_arready,

			 M_AXI_BATCH_arid,

			 M_AXI_BATCH_araddr,

			 M_AXI_BATCH_arlen,

			 M_AXI_BATCH_arsize,

			 M_AXI_BATCH_arburst,

			 M_AXI_BATCH_arlock,

			 M_AXI_BATCH_arcache,

			 M_AXI_BATCH_arprot,

			 M_AXI_BATCH_arqos,

			 M_AXI_BATCH_arregion,

			 M_AXI_BATCH_rready,

			 M_AXI_BATCH_rvalid,

			 M_AXI_BATCH_rid,
			 M_AXI_BATCH_rdata,
			 M_AXI_BATCH_rresp,
			 M_AXI_BATCH_rlast,

			 M_AXI_BATCH_awready,

			 M_AXI_BATCH_awvalid,

			 M_AXI_BATCH_awid,

			 M_AXI_BATCH_awaddr,

			 M_AXI_BATCH_awlen,

			 M_AXI_BATCH_awsize,

			 M_AXI_BATCH_awburst,

			 M_AXI_BATCH_awlock,

			 M_AXI_BATCH_awcache,

			 M_AXI_BATCH_awprot,

			 M_AXI_BATCH_awqos,

			 M_AXI_BATCH_awregion,

			 M_AXI_BATCH_wready,

			 M_AXI_BATCH_wvalid,

			 M_AXI_BATCH_wdata,

			 M_AXI_BATCH_wstrb,

			 M_AXI_BATCH_wlast,

			 M_AXI_BATCH_bvalid,

			 M_AXI_BATCH_bready,

			 M_AXI_BATCH_bresp,
			 M_AXI_BATCH_bid,

			 interrupt);
  input  CLK;
  input  RST_N;

  // value method s_rd_arready
  output S_AXI_arready;

  // action method s_rd_parvalid
  input  S_AXI_arvalid;

  // action method s_rd_paraddr
  input  [11 : 0] S_AXI_araddr;

  // action method s_rd_parprot
  input  [2 : 0] S_AXI_arprot;

  // value method s_rd_rvalid
  output S_AXI_rvalid;

  // action method s_rd_prready
  input  S_AXI_rready;

  // value method s_rd_rdata
  output [63 : 0] S_AXI_rdata;

  // value method s_rd_rresp
  output [1 : 0] S_AXI_rresp;

  // value method s_wr_awready
  output S_AXI_awready;

  // action method s_wr_pawvalid
  input  S_AXI_awvalid;

  // action method s_wr_pawaddr
  input  [11 : 0] S_AXI_awaddr;

  // action method s_wr_pawprot
  input  [2 : 0] S_AXI_awprot;

  // value method s_wr_wready
  output S_AXI_wready;

  // action method s_wr_pwvalid
  input  S_AXI_wvalid;

  // action method s_wr_pwdata
  input  [63 : 0] S_AXI_wdata;

  // action method s_wr_pwstrb
  input  [7 : 0] S_AXI_wstrb;

  // value method s_wr_bvalid
  output S_AXI_bvalid;

  // action method s_wr_pbready
  input  S_AXI_bready;

  // value method s_wr_bresp
  output [1 : 0] S_AXI_bresp;

  // value method rd_arvalid
  output M_AXI_arvalid;

  // action method rd_parready
  input  M_AXI_arready;

  // value method rd_arid
  output M_AXI_arid;

  // value method rd_araddr
  output [63 : 0] M_AXI_araddr;

  // value method rd_arlen
  output [7 : 0] M_AXI_arlen;

  // value method rd_arsize
  output [2 : 0] M_AXI_arsize;

  // value method rd_arburst
  output [1 : 0] M_AXI_arburst;

  // value method rd_arlock
  output M_AXI_arlock;

  // value method rd_arcache
  output [3 : 0] M_AXI_arcache;

  // value method rd_arprot
  output [2 : 0] M_AXI_arprot;

  // value method rd_arqos
  output [3 : 0] M_AXI_arqos;

  // value method rd_arregion
  output [3 : 0] M_AXI_arregion;

  // value method rd_aruser

  // value method rd_rready
  output M_AXI_rready;

  // action method rd_prvalid
  input  M_AXI_rvalid;

  // action method rd_prchannel
  input  M_AXI_rid;
  input  [511 : 0] M_AXI_rdata;
  input  [1 : 0] M_AXI_rresp;
  input  M_AXI_rlast;

  // action method wr_pawready
  input  M_AXI_awready;

  // value method wr_awvalid
  output M_AXI_awvalid;

  // value method wr_awid
  output M_AXI_awid;

  // value method wr_awaddr
  output [63 : 0] M_AXI_awaddr;

  // value method wr_awlen
  output [7 : 0] M_AXI_awlen;

  // value method wr_awsize
  output [2 : 0] M_AXI_awsize;

  // value method wr_awburst
  output [1 : 0] M_AXI_awburst;

  // value method wr_awlock
  output M_AXI_awlock;

  // value method wr_awcache
  output [3 : 0] M_AXI_awcache;

  // value method wr_awprot
  output [2 : 0] M_AXI_awprot;

  // value method wr_awqos
  output [3 : 0] M_AXI_awqos;

  // value method wr_awregion
  output [3 : 0] M_AXI_awregion;

  // value method wr_awuser

  // action method wr_pwready
  input  M_AXI_wready;

  // value method wr_wvalid
  output M_AXI_wvalid;

  // value method wr_wdata
  output [511 : 0] M_AXI_wdata;

  // value method wr_wstrb
  output [63 : 0] M_AXI_wstrb;

  // value method wr_wlast
  output M_AXI_wlast;

  // value method wr_wuser

  // action method wr_pbvalid
  input  M_AXI_bvalid;

  // value method wr_bready
  output M_AXI_bready;

  // action method wr_bin
  input  [1 : 0] M_AXI_bresp;
  input  M_AXI_bid;

  // value method rd_batch_arvalid
  output M_AXI_BATCH_arvalid;

  // action method rd_batch_parready
  input  M_AXI_BATCH_arready;

  // value method rd_batch_arid
  output M_AXI_BATCH_arid;

  // value method rd_batch_araddr
  output [63 : 0] M_AXI_BATCH_araddr;

  // value method rd_batch_arlen
  output [7 : 0] M_AXI_BATCH_arlen;

  // value method rd_batch_arsize
  output [2 : 0] M_AXI_BATCH_arsize;

  // value method rd_batch_arburst
  output [1 : 0] M_AXI_BATCH_arburst;

  // value method rd_batch_arlock
  output M_AXI_BATCH_arlock;

  // value method rd_batch_arcache
  output [3 : 0] M_AXI_BATCH_arcache;

  // value method rd_batch_arprot
  output [2 : 0] M_AXI_BATCH_arprot;

  // value method rd_batch_arqos
  output [3 : 0] M_AXI_BATCH_arqos;

  // value method rd_batch_arregion
  output [3 : 0] M_AXI_BATCH_arregion;

  // value method rd_batch_aruser

  // value method rd_batch_rready
  output M_AXI_BATCH_rready;

  // action method rd_batch_prvalid
  input  M_AXI_BATCH_rvalid;

  // action method rd_batch_prchannel
  input  M_AXI_BATCH_rid;
  input  [511 : 0] M_AXI_BATCH_rdata;
  input  [1 : 0] M_AXI_BATCH_rresp;
  input  M_AXI_BATCH_rlast;

  // action method wr_batch_pawready
  input  M_AXI_BATCH_awready;

  // value method wr_batch_awvalid
  output M_AXI_BATCH_awvalid;

  // value method wr_batch_awid
  output M_AXI_BATCH_awid;

  // value method wr_batch_awaddr
  output [63 : 0] M_AXI_BATCH_awaddr;

  // value method wr_batch_awlen
  output [7 : 0] M_AXI_BATCH_awlen;

  // value method wr_batch_awsize
  output [2 : 0] M_AXI_BATCH_awsize;

  // value method wr_batch_awburst
  output [1 : 0] M_AXI_BATCH_awburst;

  // value method wr_batch_awlock
  output M_AXI_BATCH_awlock;

  // value method wr_batch_awcache
  output [3 : 0] M_AXI_BATCH_awcache;

  // value method wr_batch_awprot
  output [2 : 0] M_AXI_BATCH_awprot;

  // value method wr_batch_awqos
  output [3 : 0] M_AXI_BATCH_awqos;

  // value method wr_batch_awregion
  output [3 : 0] M_AXI_BATCH_awregion;

  // value method wr_batch_awuser

  // action method wr_batch_pwready
  input  M_AXI_BATCH_wready;

  // value method wr_batch_wvalid
  output M_AXI_BATCH_wvalid;

  // value method wr_batch_wdata
  output [511 : 0] M_AXI_BATCH_wdata;

  // value method wr_batch_wstrb
  output [63 : 0] M_AXI_BATCH_wstrb;

  // value method wr_batch_wlast
  output M_AXI_BATCH_wlast;

  // value method wr_batch_wuser

  // action method wr_batch_pbvalid
  input  M_AXI_BATCH_bvalid;

  // value method wr_batch_bready
  output M_AXI_BATCH_bready;

  // action method wr_batch_bin
  input  [1 : 0] M_AXI_BATCH_bresp;
  input  M_AXI_BATCH_bid;

  // value method interrupt
  output interrupt;

  // signals for module outputs
  wire [511 : 0] M_AXI_BATCH_wdata, M_AXI_wdata;
  wire [63 : 0] M_AXI_BATCH_araddr,
		M_AXI_BATCH_awaddr,
		M_AXI_BATCH_wstrb,
		M_AXI_araddr,
		M_AXI_awaddr,
		M_AXI_wstrb,
		S_AXI_rdata;
  wire [7 : 0] M_AXI_BATCH_arlen, M_AXI_BATCH_awlen, M_AXI_arlen, M_AXI_awlen;
  wire [3 : 0] M_AXI_BATCH_arcache,
	       M_AXI_BATCH_arqos,
	       M_AXI_BATCH_arregion,
	       M_AXI_BATCH_awcache,
	       M_AXI_BATCH_awqos,
	       M_AXI_BATCH_awregion,
	       M_AXI_arcache,
	       M_AXI_arqos,
	       M_AXI_arregion,
	       M_AXI_awcache,
	       M_AXI_awqos,
	       M_AXI_awregion;
  wire [2 : 0] M_AXI_BATCH_arprot,
	       M_AXI_BATCH_arsize,
	       M_AXI_BATCH_awprot,
	       M_AXI_BATCH_awsize,
	       M_AXI_arprot,
	       M_AXI_arsize,
	       M_AXI_awprot,
	       M_AXI_awsize;
  wire [1 : 0] M_AXI_BATCH_arburst,
	       M_AXI_BATCH_awburst,
	       M_AXI_arburst,
	       M_AXI_awburst,
	       S_AXI_bresp,
	       S_AXI_rresp;
  wire M_AXI_BATCH_arid,
       M_AXI_BATCH_arlock,
       M_AXI_BATCH_arvalid,
       M_AXI_BATCH_awid,
       M_AXI_BATCH_awlock,
       M_AXI_BATCH_awvalid,
       M_AXI_BATCH_bready,
       M_AXI_BATCH_rready,
       M_AXI_BATCH_wlast,
       M_AXI_BATCH_wvalid,
       M_AXI_arid,
       M_AXI_arlock,
       M_AXI_arvalid,
       M_AXI_awid,
       M_AXI_awlock,
       M_AXI_awvalid,
       M_AXI_bready,
       M_AXI_rready,
       M_AXI_wlast,
       M_AXI_wvalid,
       S_AXI_arready,
       S_AXI_awready,
       S_AXI_bvalid,
       S_AXI_rvalid,
       S_AXI_wready,
       interrupt;

  // inlined wires
  reg [94 : 0] rdMaster_in_rv$port1__write_1;
  reg [66 : 0] s_config_readSlave_out_rv$port1__write_1;
  reg [3 : 0] rdMaster_batch_master_rd_warcache$wget,
	      rdMaster_warcache$wget,
	      wrMaster_batch_master_wr_wawcache$wget,
	      wrMaster_wawcache$wget;
  wire [577 : 0] wrMaster_in_data_rv$port1__read,
		 wrMaster_in_data_rv$port1__write_1,
		 wrMaster_in_data_rv$port2__read;
  wire [576 : 0] wrMaster_batch_master_wr_in_data_wDataIn$wget,
		 wrMaster_batch_master_wr_in_data_wDataOut$wget;
  wire [516 : 0] rdMaster_out_1_rv$port1__read,
		 rdMaster_out_1_rv$port1__write_1,
		 rdMaster_out_1_rv$port2__read;
  wire [515 : 0] rdMaster_batch_master_rd_out_1_wDataIn$wget,
		 rdMaster_batch_master_rd_out_1_wDataOut$wget,
		 rdMaster_rinpkg$wget;
  wire [511 : 0] rdMaster_batch_outgoingBuffer_wDataOut$wget;
  wire [94 : 0] rdMaster_in_rv$port1__read,
		rdMaster_in_rv$port2__read,
		wrMaster_in_addr_rv$port1__read,
		wrMaster_in_addr_rv$port1__write_1,
		wrMaster_in_addr_rv$port2__read;
  wire [93 : 0] rdMaster_batch_master_rd_in_wDataIn$wget,
		rdMaster_batch_master_rd_in_wDataOut$wget,
		wrMaster_batch_master_wr_in_addr_wDataIn$wget,
		wrMaster_batch_master_wr_in_addr_wDataOut$wget;
  wire [87 : 0] s_config_writeSlave_in_rv$port1__read,
		s_config_writeSlave_in_rv$port1__write_1,
		s_config_writeSlave_in_rv$port2__read;
  wire [72 : 0] s_config_writeSlave_dataIn_rv$port0__write_1,
		s_config_writeSlave_dataIn_rv$port1__read,
		s_config_writeSlave_dataIn_rv$port2__read;
  wire [66 : 0] s_config_readSlave_out_rv$port1__read,
		s_config_readSlave_out_rv$port2__read;
  wire [15 : 0] s_config_readSlave_in_rv$port1__read,
		s_config_readSlave_in_rv$port1__write_1,
		s_config_readSlave_in_rv$port2__read,
		s_config_writeSlave_addrIn_rv$port0__write_1,
		s_config_writeSlave_addrIn_rv$port1__read,
		s_config_writeSlave_addrIn_rv$port2__read;
  wire [11 : 0] rdMaster_batch_outstanding_beats$port0__write_1,
		rdMaster_batch_outstanding_beats$port1__write_1,
		rdMaster_batch_outstanding_beats$port2__read,
		wrMaster_batch_outstanding_beats$port0__write_1,
		wrMaster_batch_outstanding_beats$port1__write_1,
		wrMaster_batch_outstanding_beats$port2__read;
  wire [5 : 0] wrMaster_batch_outstanding_writes$port0__write_1,
	       wrMaster_batch_outstanding_writes$port1__write_1,
	       wrMaster_batch_outstanding_writes$port2__read,
	       wrMaster_batch_outstanding_writes_out$port0__write_1,
	       wrMaster_batch_outstanding_writes_out$port1__write_1,
	       wrMaster_batch_outstanding_writes_out$port2__read;
  wire [3 : 0] wrMaster_out_rv$port1__read,
	       wrMaster_out_rv$port1__write_1,
	       wrMaster_out_rv$port2__read;
  wire [2 : 0] s_config_writeSlave_out_rv$port1__read,
	       s_config_writeSlave_out_rv$port2__read,
	       wrMaster_batch_master_wr_out_wDataIn$wget,
	       wrMaster_rinpkg$wget;
  wire interruptR_1$whas,
       rdMaster_batch_master_rd_in_pwDequeue$whas,
       rdMaster_batch_master_rd_in_pwEnqueue$whas,
       rdMaster_batch_master_rd_out_1_pwEnqueue$whas,
       rdMaster_batch_outgoingBuffer_pwDequeue$whas,
       rdMaster_batch_outstanding_beats$EN_port0__write,
       rdMaster_batch_outstanding_beats$EN_port1__write,
       rdMaster_in_rv$EN_port0__write,
       rdMaster_in_rv$EN_port1__write,
       rdMaster_out_1_rv$EN_port0__write,
       rdMaster_out_1_rv$EN_port1__write,
       s_config_readIsHandled$whas,
       s_config_readSlave_in_rv$EN_port0__write,
       s_config_readSlave_in_rv$EN_port1__write,
       s_config_readSlave_out_rv$EN_port0__write,
       s_config_readSlave_out_rv$EN_port1__write,
       s_config_writeIsHandled$whas,
       s_config_writeSlave_addrIn_rv$EN_port0__write,
       s_config_writeSlave_addrIn_rv$EN_port1__write,
       s_config_writeSlave_dataIn_rv$EN_port0__write,
       s_config_writeSlave_dataIn_rv$EN_port1__write,
       s_config_writeSlave_in_rv$EN_port0__write,
       s_config_writeSlave_in_rv$EN_port1__write,
       s_config_writeSlave_out_rv$EN_port0__write,
       s_config_writeSlave_out_rv$EN_port1__write,
       wrMaster_batch_incomingBuffer_pwEnqueue$whas,
       wrMaster_batch_master_wr_in_addr_pwDequeue$whas,
       wrMaster_batch_master_wr_in_addr_pwEnqueue$whas,
       wrMaster_batch_master_wr_in_data_pwDequeue$whas,
       wrMaster_batch_master_wr_out_pwDequeue$whas,
       wrMaster_batch_master_wr_out_pwEnqueue$whas,
       wrMaster_batch_outstanding_beats$EN_port0__write,
       wrMaster_batch_outstanding_beats$EN_port1__write,
       wrMaster_batch_outstanding_writes$EN_port0__write,
       wrMaster_batch_outstanding_writes$EN_port1__write,
       wrMaster_batch_outstanding_writes_out$EN_port0__write,
       wrMaster_batch_outstanding_writes_out$EN_port1__write,
       wrMaster_in_addr_rv$EN_port0__write,
       wrMaster_in_addr_rv$EN_port1__write,
       wrMaster_in_data_rv$EN_port0__write,
       wrMaster_in_data_rv$EN_port1__write,
       wrMaster_out_rv$EN_port0__write,
       wrMaster_out_rv$EN_port1__write;

  // register byteLength
  reg [63 : 0] byteLength;
  wire [63 : 0] byteLength$D_IN;
  wire byteLength$EN;

  // register chunks_rd_completed
  reg [63 : 0] chunks_rd_completed;
  wire [63 : 0] chunks_rd_completed$D_IN;
  wire chunks_rd_completed$EN;

  // register chunks_wr_completed
  reg [63 : 0] chunks_wr_completed;
  wire [63 : 0] chunks_wr_completed$D_IN;
  wire chunks_wr_completed$EN;

  // register chunks_wr_sent
  reg [63 : 0] chunks_wr_sent;
  wire [63 : 0] chunks_wr_sent$D_IN;
  wire chunks_wr_sent$EN;

  // register chunks_wr_started
  reg [63 : 0] chunks_wr_started;
  wire [63 : 0] chunks_wr_started$D_IN;
  wire chunks_wr_started$EN;

  // register cycleCount
  reg [63 : 0] cycleCount;
  wire [63 : 0] cycleCount$D_IN;
  wire cycleCount$EN;

  // register cycles
  reg [63 : 0] cycles;
  wire [63 : 0] cycles$D_IN;
  wire cycles$EN;

  // register error
  reg error;
  reg error$D_IN;
  wire error$EN;

  // register first
  reg first;
  wire first$D_IN, first$EN;

  // register idle
  reg idle;
  wire idle$D_IN, idle$EN;

  // register interruptR
  reg interruptR;
  wire interruptR$D_IN, interruptR$EN;

  // register lastCycle
  reg lastCycle;
  wire lastCycle$D_IN, lastCycle$EN;

  // register latency
  reg [63 : 0] latency;
  wire [63 : 0] latency$D_IN;
  wire latency$EN;

  // register operation
  reg [2 : 0] operation;
  wire [2 : 0] operation$D_IN;
  wire operation$EN;

  // register rand_rd_r
  reg [31 : 0] rand_rd_r;
  wire [31 : 0] rand_rd_r$D_IN;
  wire rand_rd_r$EN;

  // register rand_wr_r
  reg [31 : 0] rand_wr_r;
  wire [31 : 0] rand_wr_r$D_IN;
  wire rand_wr_r$EN;

  // register rdMaster_batch_master_rd_in_rCache
  reg [97 : 0] rdMaster_batch_master_rd_in_rCache;
  wire [97 : 0] rdMaster_batch_master_rd_in_rCache$D_IN;
  wire rdMaster_batch_master_rd_in_rCache$EN;

  // register rdMaster_batch_master_rd_in_rRdPtr
  reg [2 : 0] rdMaster_batch_master_rd_in_rRdPtr;
  wire [2 : 0] rdMaster_batch_master_rd_in_rRdPtr$D_IN;
  wire rdMaster_batch_master_rd_in_rRdPtr$EN;

  // register rdMaster_batch_master_rd_in_rWrPtr
  reg [2 : 0] rdMaster_batch_master_rd_in_rWrPtr;
  wire [2 : 0] rdMaster_batch_master_rd_in_rWrPtr$D_IN;
  wire rdMaster_batch_master_rd_in_rWrPtr$EN;

  // register rdMaster_batch_master_rd_isRst_isInReset
  reg rdMaster_batch_master_rd_isRst_isInReset;
  wire rdMaster_batch_master_rd_isRst_isInReset$D_IN,
       rdMaster_batch_master_rd_isRst_isInReset$EN;

  // register rdMaster_batch_master_rd_out_1_rCache
  reg [519 : 0] rdMaster_batch_master_rd_out_1_rCache;
  wire [519 : 0] rdMaster_batch_master_rd_out_1_rCache$D_IN;
  wire rdMaster_batch_master_rd_out_1_rCache$EN;

  // register rdMaster_batch_master_rd_out_1_rRdPtr
  reg [2 : 0] rdMaster_batch_master_rd_out_1_rRdPtr;
  wire [2 : 0] rdMaster_batch_master_rd_out_1_rRdPtr$D_IN;
  wire rdMaster_batch_master_rd_out_1_rRdPtr$EN;

  // register rdMaster_batch_master_rd_out_1_rWrPtr
  reg [2 : 0] rdMaster_batch_master_rd_out_1_rWrPtr;
  wire [2 : 0] rdMaster_batch_master_rd_out_1_rWrPtr$D_IN;
  wire rdMaster_batch_master_rd_out_1_rWrPtr$EN;

  // register rdMaster_batch_outgoingBuffer_rCache
  reg [521 : 0] rdMaster_batch_outgoingBuffer_rCache;
  wire [521 : 0] rdMaster_batch_outgoingBuffer_rCache$D_IN;
  wire rdMaster_batch_outgoingBuffer_rCache$EN;

  // register rdMaster_batch_outgoingBuffer_rRdPtr
  reg [8 : 0] rdMaster_batch_outgoingBuffer_rRdPtr;
  wire [8 : 0] rdMaster_batch_outgoingBuffer_rRdPtr$D_IN;
  wire rdMaster_batch_outgoingBuffer_rRdPtr$EN;

  // register rdMaster_batch_outgoingBuffer_rWrPtr
  reg [8 : 0] rdMaster_batch_outgoingBuffer_rWrPtr;
  wire [8 : 0] rdMaster_batch_outgoingBuffer_rWrPtr$D_IN;
  wire rdMaster_batch_outgoingBuffer_rWrPtr$EN;

  // register rdMaster_batch_outstanding_beats
  reg [11 : 0] rdMaster_batch_outstanding_beats;
  wire [11 : 0] rdMaster_batch_outstanding_beats$D_IN;
  wire rdMaster_batch_outstanding_beats$EN;

  // register rdMaster_batch_task_data_output_reg
  reg [44 : 0] rdMaster_batch_task_data_output_reg;
  wire [44 : 0] rdMaster_batch_task_data_output_reg$D_IN;
  wire rdMaster_batch_task_data_output_reg$EN;

  // register rdMaster_batch_task_data_requests_reg
  reg [112 : 0] rdMaster_batch_task_data_requests_reg;
  wire [112 : 0] rdMaster_batch_task_data_requests_reg$D_IN;
  wire rdMaster_batch_task_data_requests_reg$EN;

  // register rdMaster_in_rv
  reg [94 : 0] rdMaster_in_rv;
  wire [94 : 0] rdMaster_in_rv$D_IN;
  wire rdMaster_in_rv$EN;

  // register rdMaster_isRst_isInReset
  reg rdMaster_isRst_isInReset;
  wire rdMaster_isRst_isInReset$D_IN, rdMaster_isRst_isInReset$EN;

  // register rdMaster_out_1_rv
  reg [516 : 0] rdMaster_out_1_rv;
  wire [516 : 0] rdMaster_out_1_rv$D_IN;
  wire rdMaster_out_1_rv$EN;

  // register remainingBeats
  reg [7 : 0] remainingBeats;
  wire [7 : 0] remainingBeats$D_IN;
  wire remainingBeats$EN;

  // register s_config_readBusy
  reg s_config_readBusy;
  wire s_config_readBusy$D_IN, s_config_readBusy$EN;

  // register s_config_readSlave_in_rv
  reg [15 : 0] s_config_readSlave_in_rv;
  wire [15 : 0] s_config_readSlave_in_rv$D_IN;
  wire s_config_readSlave_in_rv$EN;

  // register s_config_readSlave_isRst_isInReset
  reg s_config_readSlave_isRst_isInReset;
  wire s_config_readSlave_isRst_isInReset$D_IN,
       s_config_readSlave_isRst_isInReset$EN;

  // register s_config_readSlave_out_rv
  reg [66 : 0] s_config_readSlave_out_rv;
  wire [66 : 0] s_config_readSlave_out_rv$D_IN;
  wire s_config_readSlave_out_rv$EN;

  // register s_config_writeBusy
  reg s_config_writeBusy;
  wire s_config_writeBusy$D_IN, s_config_writeBusy$EN;

  // register s_config_writeSlave_addrIn_rv
  reg [15 : 0] s_config_writeSlave_addrIn_rv;
  wire [15 : 0] s_config_writeSlave_addrIn_rv$D_IN;
  wire s_config_writeSlave_addrIn_rv$EN;

  // register s_config_writeSlave_dataIn_rv
  reg [72 : 0] s_config_writeSlave_dataIn_rv;
  wire [72 : 0] s_config_writeSlave_dataIn_rv$D_IN;
  wire s_config_writeSlave_dataIn_rv$EN;

  // register s_config_writeSlave_in_rv
  reg [87 : 0] s_config_writeSlave_in_rv;
  wire [87 : 0] s_config_writeSlave_in_rv$D_IN;
  wire s_config_writeSlave_in_rv$EN;

  // register s_config_writeSlave_isRst_isInReset
  reg s_config_writeSlave_isRst_isInReset;
  wire s_config_writeSlave_isRst_isInReset$D_IN,
       s_config_writeSlave_isRst_isInReset$EN;

  // register s_config_writeSlave_out_rv
  reg [2 : 0] s_config_writeSlave_out_rv;
  wire [2 : 0] s_config_writeSlave_out_rv$D_IN;
  wire s_config_writeSlave_out_rv$EN;

  // register seed_rd
  reg [63 : 0] seed_rd;
  wire [63 : 0] seed_rd$D_IN;
  wire seed_rd$EN;

  // register seed_wr
  reg [63 : 0] seed_wr;
  wire [63 : 0] seed_wr$D_IN;
  wire seed_wr$EN;

  // register start
  reg start;
  wire start$D_IN, start$EN;

  // register status
  reg [63 : 0] status;
  reg [63 : 0] status$D_IN;
  wire status$EN;

  // register wrMaster_batch_beatsThisRequestCntr
  reg [7 : 0] wrMaster_batch_beatsThisRequestCntr;
  wire [7 : 0] wrMaster_batch_beatsThisRequestCntr$D_IN;
  wire wrMaster_batch_beatsThisRequestCntr$EN;

  // register wrMaster_batch_incomingBuffer_rCache
  reg [521 : 0] wrMaster_batch_incomingBuffer_rCache;
  wire [521 : 0] wrMaster_batch_incomingBuffer_rCache$D_IN;
  wire wrMaster_batch_incomingBuffer_rCache$EN;

  // register wrMaster_batch_incomingBuffer_rRdPtr
  reg [8 : 0] wrMaster_batch_incomingBuffer_rRdPtr;
  wire [8 : 0] wrMaster_batch_incomingBuffer_rRdPtr$D_IN;
  wire wrMaster_batch_incomingBuffer_rRdPtr$EN;

  // register wrMaster_batch_incomingBuffer_rWrPtr
  reg [8 : 0] wrMaster_batch_incomingBuffer_rWrPtr;
  wire [8 : 0] wrMaster_batch_incomingBuffer_rWrPtr$D_IN;
  wire wrMaster_batch_incomingBuffer_rWrPtr$EN;

  // register wrMaster_batch_master_wr_in_addr_rCache
  reg [97 : 0] wrMaster_batch_master_wr_in_addr_rCache;
  wire [97 : 0] wrMaster_batch_master_wr_in_addr_rCache$D_IN;
  wire wrMaster_batch_master_wr_in_addr_rCache$EN;

  // register wrMaster_batch_master_wr_in_addr_rRdPtr
  reg [2 : 0] wrMaster_batch_master_wr_in_addr_rRdPtr;
  wire [2 : 0] wrMaster_batch_master_wr_in_addr_rRdPtr$D_IN;
  wire wrMaster_batch_master_wr_in_addr_rRdPtr$EN;

  // register wrMaster_batch_master_wr_in_addr_rWrPtr
  reg [2 : 0] wrMaster_batch_master_wr_in_addr_rWrPtr;
  wire [2 : 0] wrMaster_batch_master_wr_in_addr_rWrPtr$D_IN;
  wire wrMaster_batch_master_wr_in_addr_rWrPtr$EN;

  // register wrMaster_batch_master_wr_in_data_rCache
  reg [580 : 0] wrMaster_batch_master_wr_in_data_rCache;
  wire [580 : 0] wrMaster_batch_master_wr_in_data_rCache$D_IN;
  wire wrMaster_batch_master_wr_in_data_rCache$EN;

  // register wrMaster_batch_master_wr_in_data_rRdPtr
  reg [2 : 0] wrMaster_batch_master_wr_in_data_rRdPtr;
  wire [2 : 0] wrMaster_batch_master_wr_in_data_rRdPtr$D_IN;
  wire wrMaster_batch_master_wr_in_data_rRdPtr$EN;

  // register wrMaster_batch_master_wr_in_data_rWrPtr
  reg [2 : 0] wrMaster_batch_master_wr_in_data_rWrPtr;
  wire [2 : 0] wrMaster_batch_master_wr_in_data_rWrPtr$D_IN;
  wire wrMaster_batch_master_wr_in_data_rWrPtr$EN;

  // register wrMaster_batch_master_wr_isRst_isInReset
  reg wrMaster_batch_master_wr_isRst_isInReset;
  wire wrMaster_batch_master_wr_isRst_isInReset$D_IN,
       wrMaster_batch_master_wr_isRst_isInReset$EN;

  // register wrMaster_batch_master_wr_out_rCache
  reg [6 : 0] wrMaster_batch_master_wr_out_rCache;
  wire [6 : 0] wrMaster_batch_master_wr_out_rCache$D_IN;
  wire wrMaster_batch_master_wr_out_rCache$EN;

  // register wrMaster_batch_master_wr_out_rRdPtr
  reg [2 : 0] wrMaster_batch_master_wr_out_rRdPtr;
  wire [2 : 0] wrMaster_batch_master_wr_out_rRdPtr$D_IN;
  wire wrMaster_batch_master_wr_out_rRdPtr$EN;

  // register wrMaster_batch_master_wr_out_rWrPtr
  reg [2 : 0] wrMaster_batch_master_wr_out_rWrPtr;
  wire [2 : 0] wrMaster_batch_master_wr_out_rWrPtr$D_IN;
  wire wrMaster_batch_master_wr_out_rWrPtr$EN;

  // register wrMaster_batch_outstanding_beats
  reg [11 : 0] wrMaster_batch_outstanding_beats;
  wire [11 : 0] wrMaster_batch_outstanding_beats$D_IN;
  wire wrMaster_batch_outstanding_beats$EN;

  // register wrMaster_batch_outstanding_writes
  reg [5 : 0] wrMaster_batch_outstanding_writes;
  wire [5 : 0] wrMaster_batch_outstanding_writes$D_IN;
  wire wrMaster_batch_outstanding_writes$EN;

  // register wrMaster_batch_outstanding_writes_out
  reg [5 : 0] wrMaster_batch_outstanding_writes_out;
  wire [5 : 0] wrMaster_batch_outstanding_writes_out$D_IN;
  wire wrMaster_batch_outstanding_writes_out$EN;

  // register wrMaster_batch_task_data_output_reg
  reg [44 : 0] wrMaster_batch_task_data_output_reg;
  wire [44 : 0] wrMaster_batch_task_data_output_reg$D_IN;
  wire wrMaster_batch_task_data_output_reg$EN;

  // register wrMaster_batch_task_data_requests_reg
  reg [112 : 0] wrMaster_batch_task_data_requests_reg;
  wire [112 : 0] wrMaster_batch_task_data_requests_reg$D_IN;
  wire wrMaster_batch_task_data_requests_reg$EN;

  // register wrMaster_in_addr_rv
  reg [94 : 0] wrMaster_in_addr_rv;
  wire [94 : 0] wrMaster_in_addr_rv$D_IN;
  wire wrMaster_in_addr_rv$EN;

  // register wrMaster_in_data_rv
  reg [577 : 0] wrMaster_in_data_rv;
  wire [577 : 0] wrMaster_in_data_rv$D_IN;
  wire wrMaster_in_data_rv$EN;

  // register wrMaster_isRst_isInReset
  reg wrMaster_isRst_isInReset;
  wire wrMaster_isRst_isInReset$D_IN, wrMaster_isRst_isInReset$EN;

  // register wrMaster_out_rv
  reg [3 : 0] wrMaster_out_rv;
  wire [3 : 0] wrMaster_out_rv$D_IN;
  wire wrMaster_out_rv$EN;

  // register writeFinished
  reg writeFinished;
  wire writeFinished$D_IN, writeFinished$EN;

  // ports of submodule rdMaster_batch_master_rd_in_memory
  wire [93 : 0] rdMaster_batch_master_rd_in_memory$DIA,
		rdMaster_batch_master_rd_in_memory$DIB,
		rdMaster_batch_master_rd_in_memory$DOB;
  wire [1 : 0] rdMaster_batch_master_rd_in_memory$ADDRA,
	       rdMaster_batch_master_rd_in_memory$ADDRB;
  wire rdMaster_batch_master_rd_in_memory$ENA,
       rdMaster_batch_master_rd_in_memory$ENB,
       rdMaster_batch_master_rd_in_memory$WEA,
       rdMaster_batch_master_rd_in_memory$WEB;

  // ports of submodule rdMaster_batch_master_rd_out
  wire [515 : 0] rdMaster_batch_master_rd_out$D_IN;
  wire rdMaster_batch_master_rd_out$CLR,
       rdMaster_batch_master_rd_out$DEQ,
       rdMaster_batch_master_rd_out$ENQ;

  // ports of submodule rdMaster_batch_master_rd_out_1_memory
  wire [515 : 0] rdMaster_batch_master_rd_out_1_memory$DIA,
		 rdMaster_batch_master_rd_out_1_memory$DIB,
		 rdMaster_batch_master_rd_out_1_memory$DOB;
  wire [1 : 0] rdMaster_batch_master_rd_out_1_memory$ADDRA,
	       rdMaster_batch_master_rd_out_1_memory$ADDRB;
  wire rdMaster_batch_master_rd_out_1_memory$ENA,
       rdMaster_batch_master_rd_out_1_memory$ENB,
       rdMaster_batch_master_rd_out_1_memory$WEA,
       rdMaster_batch_master_rd_out_1_memory$WEB;

  // ports of submodule rdMaster_batch_maxOutstandingFIFO
  wire rdMaster_batch_maxOutstandingFIFO$CLR,
       rdMaster_batch_maxOutstandingFIFO$DEQ,
       rdMaster_batch_maxOutstandingFIFO$D_IN,
       rdMaster_batch_maxOutstandingFIFO$EMPTY_N,
       rdMaster_batch_maxOutstandingFIFO$ENQ,
       rdMaster_batch_maxOutstandingFIFO$FULL_N;

  // ports of submodule rdMaster_batch_outgoingBuffer_memory
  wire [511 : 0] rdMaster_batch_outgoingBuffer_memory$DIA,
		 rdMaster_batch_outgoingBuffer_memory$DIB,
		 rdMaster_batch_outgoingBuffer_memory$DOB;
  wire [7 : 0] rdMaster_batch_outgoingBuffer_memory$ADDRA,
	       rdMaster_batch_outgoingBuffer_memory$ADDRB;
  wire rdMaster_batch_outgoingBuffer_memory$ENA,
       rdMaster_batch_outgoingBuffer_memory$ENB,
       rdMaster_batch_outgoingBuffer_memory$WEA,
       rdMaster_batch_outgoingBuffer_memory$WEB;

  // ports of submodule rdMaster_batch_read_rq_out
  wire [93 : 0] rdMaster_batch_read_rq_out$D_IN,
		rdMaster_batch_read_rq_out$D_OUT;
  wire rdMaster_batch_read_rq_out$CLR,
       rdMaster_batch_read_rq_out$DEQ,
       rdMaster_batch_read_rq_out$EMPTY_N,
       rdMaster_batch_read_rq_out$ENQ,
       rdMaster_batch_read_rq_out$FULL_N;

  // ports of submodule rdMaster_batch_relaxationBuffer
  wire [511 : 0] rdMaster_batch_relaxationBuffer$D_IN;
  wire rdMaster_batch_relaxationBuffer$CLR,
       rdMaster_batch_relaxationBuffer$DEQ,
       rdMaster_batch_relaxationBuffer$EMPTY_N,
       rdMaster_batch_relaxationBuffer$ENQ,
       rdMaster_batch_relaxationBuffer$FULL_N;

  // ports of submodule rdMaster_batch_reqGen_incomingBuffer
  wire [99 : 0] rdMaster_batch_reqGen_incomingBuffer$D_IN,
		rdMaster_batch_reqGen_incomingBuffer$D_OUT;
  wire rdMaster_batch_reqGen_incomingBuffer$CLR,
       rdMaster_batch_reqGen_incomingBuffer$DEQ,
       rdMaster_batch_reqGen_incomingBuffer$EMPTY_N,
       rdMaster_batch_reqGen_incomingBuffer$ENQ,
       rdMaster_batch_reqGen_incomingBuffer$FULL_N;

  // ports of submodule rdMaster_batch_reqGen_intermediateBuffer
  wire [111 : 0] rdMaster_batch_reqGen_intermediateBuffer$D_IN,
		 rdMaster_batch_reqGen_intermediateBuffer$D_OUT;
  wire rdMaster_batch_reqGen_intermediateBuffer$CLR,
       rdMaster_batch_reqGen_intermediateBuffer$DEQ,
       rdMaster_batch_reqGen_intermediateBuffer$EMPTY_N,
       rdMaster_batch_reqGen_intermediateBuffer$ENQ,
       rdMaster_batch_reqGen_intermediateBuffer$FULL_N;

  // ports of submodule rdMaster_batch_reqGen_intermediateBuffer2
  wire [137 : 0] rdMaster_batch_reqGen_intermediateBuffer2$D_IN,
		 rdMaster_batch_reqGen_intermediateBuffer2$D_OUT;
  wire rdMaster_batch_reqGen_intermediateBuffer2$CLR,
       rdMaster_batch_reqGen_intermediateBuffer2$DEQ,
       rdMaster_batch_reqGen_intermediateBuffer2$EMPTY_N,
       rdMaster_batch_reqGen_intermediateBuffer2$ENQ,
       rdMaster_batch_reqGen_intermediateBuffer2$FULL_N;

  // ports of submodule rdMaster_batch_reqGen_intermediateBuffer3
  wire [146 : 0] rdMaster_batch_reqGen_intermediateBuffer3$D_IN,
		 rdMaster_batch_reqGen_intermediateBuffer3$D_OUT;
  wire rdMaster_batch_reqGen_intermediateBuffer3$CLR,
       rdMaster_batch_reqGen_intermediateBuffer3$DEQ,
       rdMaster_batch_reqGen_intermediateBuffer3$EMPTY_N,
       rdMaster_batch_reqGen_intermediateBuffer3$ENQ,
       rdMaster_batch_reqGen_intermediateBuffer3$FULL_N;

  // ports of submodule rdMaster_batch_reqGen_outgoingBuffer
  wire [157 : 0] rdMaster_batch_reqGen_outgoingBuffer$D_IN,
		 rdMaster_batch_reqGen_outgoingBuffer$D_OUT;
  wire rdMaster_batch_reqGen_outgoingBuffer$CLR,
       rdMaster_batch_reqGen_outgoingBuffer$DEQ,
       rdMaster_batch_reqGen_outgoingBuffer$EMPTY_N,
       rdMaster_batch_reqGen_outgoingBuffer$ENQ,
       rdMaster_batch_reqGen_outgoingBuffer$FULL_N;

  // ports of submodule rdMaster_out
  wire [515 : 0] rdMaster_out$D_IN;
  wire rdMaster_out$CLR, rdMaster_out$DEQ, rdMaster_out$ENQ;

  // ports of submodule wrMaster_batch_beatsPerRequestFIFO
  wire [7 : 0] wrMaster_batch_beatsPerRequestFIFO$D_IN,
	       wrMaster_batch_beatsPerRequestFIFO$D_OUT;
  wire wrMaster_batch_beatsPerRequestFIFO$CLR,
       wrMaster_batch_beatsPerRequestFIFO$DEQ,
       wrMaster_batch_beatsPerRequestFIFO$EMPTY_N,
       wrMaster_batch_beatsPerRequestFIFO$ENQ,
       wrMaster_batch_beatsPerRequestFIFO$FULL_N;

  // ports of submodule wrMaster_batch_incomingBuffer_memory
  wire [511 : 0] wrMaster_batch_incomingBuffer_memory$DIA,
		 wrMaster_batch_incomingBuffer_memory$DIB,
		 wrMaster_batch_incomingBuffer_memory$DOB;
  wire [7 : 0] wrMaster_batch_incomingBuffer_memory$ADDRA,
	       wrMaster_batch_incomingBuffer_memory$ADDRB;
  wire wrMaster_batch_incomingBuffer_memory$ENA,
       wrMaster_batch_incomingBuffer_memory$ENB,
       wrMaster_batch_incomingBuffer_memory$WEA,
       wrMaster_batch_incomingBuffer_memory$WEB;

  // ports of submodule wrMaster_batch_master_wr_in_addr_memory
  wire [93 : 0] wrMaster_batch_master_wr_in_addr_memory$DIA,
		wrMaster_batch_master_wr_in_addr_memory$DIB,
		wrMaster_batch_master_wr_in_addr_memory$DOB;
  wire [1 : 0] wrMaster_batch_master_wr_in_addr_memory$ADDRA,
	       wrMaster_batch_master_wr_in_addr_memory$ADDRB;
  wire wrMaster_batch_master_wr_in_addr_memory$ENA,
       wrMaster_batch_master_wr_in_addr_memory$ENB,
       wrMaster_batch_master_wr_in_addr_memory$WEA,
       wrMaster_batch_master_wr_in_addr_memory$WEB;

  // ports of submodule wrMaster_batch_master_wr_in_data_memory
  wire [576 : 0] wrMaster_batch_master_wr_in_data_memory$DIA,
		 wrMaster_batch_master_wr_in_data_memory$DIB,
		 wrMaster_batch_master_wr_in_data_memory$DOB;
  wire [1 : 0] wrMaster_batch_master_wr_in_data_memory$ADDRA,
	       wrMaster_batch_master_wr_in_data_memory$ADDRB;
  wire wrMaster_batch_master_wr_in_data_memory$ENA,
       wrMaster_batch_master_wr_in_data_memory$ENB,
       wrMaster_batch_master_wr_in_data_memory$WEA,
       wrMaster_batch_master_wr_in_data_memory$WEB;

  // ports of submodule wrMaster_batch_master_wr_out_memory
  wire [2 : 0] wrMaster_batch_master_wr_out_memory$DIA,
	       wrMaster_batch_master_wr_out_memory$DIB;
  wire [1 : 0] wrMaster_batch_master_wr_out_memory$ADDRA,
	       wrMaster_batch_master_wr_out_memory$ADDRB;
  wire wrMaster_batch_master_wr_out_memory$ENA,
       wrMaster_batch_master_wr_out_memory$ENB,
       wrMaster_batch_master_wr_out_memory$WEA,
       wrMaster_batch_master_wr_out_memory$WEB;

  // ports of submodule wrMaster_batch_relaxationBuffer
  wire [511 : 0] wrMaster_batch_relaxationBuffer$D_IN,
		 wrMaster_batch_relaxationBuffer$D_OUT;
  wire wrMaster_batch_relaxationBuffer$CLR,
       wrMaster_batch_relaxationBuffer$DEQ,
       wrMaster_batch_relaxationBuffer$EMPTY_N,
       wrMaster_batch_relaxationBuffer$ENQ,
       wrMaster_batch_relaxationBuffer$FULL_N;

  // ports of submodule wrMaster_batch_reqGen_incomingBuffer
  wire [99 : 0] wrMaster_batch_reqGen_incomingBuffer$D_IN,
		wrMaster_batch_reqGen_incomingBuffer$D_OUT;
  wire wrMaster_batch_reqGen_incomingBuffer$CLR,
       wrMaster_batch_reqGen_incomingBuffer$DEQ,
       wrMaster_batch_reqGen_incomingBuffer$EMPTY_N,
       wrMaster_batch_reqGen_incomingBuffer$ENQ,
       wrMaster_batch_reqGen_incomingBuffer$FULL_N;

  // ports of submodule wrMaster_batch_reqGen_intermediateBuffer
  wire [111 : 0] wrMaster_batch_reqGen_intermediateBuffer$D_IN,
		 wrMaster_batch_reqGen_intermediateBuffer$D_OUT;
  wire wrMaster_batch_reqGen_intermediateBuffer$CLR,
       wrMaster_batch_reqGen_intermediateBuffer$DEQ,
       wrMaster_batch_reqGen_intermediateBuffer$EMPTY_N,
       wrMaster_batch_reqGen_intermediateBuffer$ENQ,
       wrMaster_batch_reqGen_intermediateBuffer$FULL_N;

  // ports of submodule wrMaster_batch_reqGen_intermediateBuffer2
  wire [137 : 0] wrMaster_batch_reqGen_intermediateBuffer2$D_IN,
		 wrMaster_batch_reqGen_intermediateBuffer2$D_OUT;
  wire wrMaster_batch_reqGen_intermediateBuffer2$CLR,
       wrMaster_batch_reqGen_intermediateBuffer2$DEQ,
       wrMaster_batch_reqGen_intermediateBuffer2$EMPTY_N,
       wrMaster_batch_reqGen_intermediateBuffer2$ENQ,
       wrMaster_batch_reqGen_intermediateBuffer2$FULL_N;

  // ports of submodule wrMaster_batch_reqGen_intermediateBuffer3
  wire [146 : 0] wrMaster_batch_reqGen_intermediateBuffer3$D_IN,
		 wrMaster_batch_reqGen_intermediateBuffer3$D_OUT;
  wire wrMaster_batch_reqGen_intermediateBuffer3$CLR,
       wrMaster_batch_reqGen_intermediateBuffer3$DEQ,
       wrMaster_batch_reqGen_intermediateBuffer3$EMPTY_N,
       wrMaster_batch_reqGen_intermediateBuffer3$ENQ,
       wrMaster_batch_reqGen_intermediateBuffer3$FULL_N;

  // ports of submodule wrMaster_batch_reqGen_outgoingBuffer
  wire [157 : 0] wrMaster_batch_reqGen_outgoingBuffer$D_IN,
		 wrMaster_batch_reqGen_outgoingBuffer$D_OUT;
  wire wrMaster_batch_reqGen_outgoingBuffer$CLR,
       wrMaster_batch_reqGen_outgoingBuffer$DEQ,
       wrMaster_batch_reqGen_outgoingBuffer$EMPTY_N,
       wrMaster_batch_reqGen_outgoingBuffer$ENQ,
       wrMaster_batch_reqGen_outgoingBuffer$FULL_N;

  // ports of submodule wrMaster_batch_write_rq_out
  wire [93 : 0] wrMaster_batch_write_rq_out$D_IN,
		wrMaster_batch_write_rq_out$D_OUT;
  wire wrMaster_batch_write_rq_out$CLR,
       wrMaster_batch_write_rq_out$DEQ,
       wrMaster_batch_write_rq_out$EMPTY_N,
       wrMaster_batch_write_rq_out$ENQ,
       wrMaster_batch_write_rq_out$FULL_N;

  // rule scheduling signals
  wire WILL_FIRE_RL_checkActivityBatch,
       WILL_FIRE_RL_checkActivityRandom,
       WILL_FIRE_RL_dropReadResponseLatency,
       WILL_FIRE_RL_dropReadResponseRandom,
       WILL_FIRE_RL_dropWriteResponseCheck,
       WILL_FIRE_RL_dropWriteResponseRandom,
       WILL_FIRE_RL_putWriteDataRandom,
       WILL_FIRE_RL_rdMaster_batch_fillBuffer,
       WILL_FIRE_RL_rdMaster_batch_forwardData,
       WILL_FIRE_RL_rdMaster_batch_placeAXI,
       WILL_FIRE_RL_rdMaster_batch_placeRequest,
       WILL_FIRE_RL_recvReadResponseCheck,
       WILL_FIRE_RL_s_config_1_axiWriteFallback,
       WILL_FIRE_RL_s_config_1_axiWriteSpecial,
       WILL_FIRE_RL_s_config_1_axiWriteSpecialIsHandled,
       WILL_FIRE_RL_s_config_1_axiWriteSpecialIsHandled_1,
       WILL_FIRE_RL_s_config_1_axiWriteSpecialIsHandled_2,
       WILL_FIRE_RL_s_config_1_axiWriteSpecialIsHandled_3,
       WILL_FIRE_RL_s_config_1_axiWriteSpecialIsHandled_4,
       WILL_FIRE_RL_s_config_1_axiWriteSpecialIsHandled_5,
       WILL_FIRE_RL_s_config_1_axiWriteSpecialIsHandled_6,
       WILL_FIRE_RL_s_config_1_axiWriteSpecial_1,
       WILL_FIRE_RL_s_config_1_axiWriteSpecial_2,
       WILL_FIRE_RL_s_config_1_axiWriteSpecial_3,
       WILL_FIRE_RL_s_config_1_axiWriteSpecial_4,
       WILL_FIRE_RL_s_config_1_axiWriteSpecial_5,
       WILL_FIRE_RL_s_config_1_axiWriteSpecial_6,
       WILL_FIRE_RL_s_config_axiReadFallback,
       WILL_FIRE_RL_s_config_axiReadSpecial,
       WILL_FIRE_RL_s_config_axiReadSpecialIsHandled,
       WILL_FIRE_RL_s_config_axiReadSpecialIsHandled_1,
       WILL_FIRE_RL_s_config_axiReadSpecialIsHandled_2,
       WILL_FIRE_RL_s_config_axiReadSpecialIsHandled_3,
       WILL_FIRE_RL_s_config_axiReadSpecialIsHandled_4,
       WILL_FIRE_RL_s_config_axiReadSpecialIsHandled_5,
       WILL_FIRE_RL_s_config_axiReadSpecialIsHandled_6,
       WILL_FIRE_RL_s_config_axiReadSpecial_1,
       WILL_FIRE_RL_s_config_axiReadSpecial_2,
       WILL_FIRE_RL_s_config_axiReadSpecial_3,
       WILL_FIRE_RL_s_config_axiReadSpecial_4,
       WILL_FIRE_RL_s_config_axiReadSpecial_5,
       WILL_FIRE_RL_s_config_axiReadSpecial_6,
       WILL_FIRE_RL_startLatency,
       WILL_FIRE_RL_startRandom,
       WILL_FIRE_RL_startReadBatch,
       WILL_FIRE_RL_startReadCheck,
       WILL_FIRE_RL_startReadRandom,
       WILL_FIRE_RL_startReadWriteBatch,
       WILL_FIRE_RL_startWriteBatch,
       WILL_FIRE_RL_startWriteCheck,
       WILL_FIRE_RL_startWriteRandom,
       WILL_FIRE_RL_wrMaster_batch_fillBuffer,
       WILL_FIRE_RL_wrMaster_batch_forwardData,
       WILL_FIRE_RL_wrMaster_batch_placeAXI,
       WILL_FIRE_RL_wrMaster_batch_placeRequest;

  // inputs to muxes for submodule ports
  reg MUX_lastCycle$write_1__VAL_1;
  wire [577 : 0] MUX_wrMaster_in_data_rv$port1__write_1__VAL_1;
  wire [112 : 0] MUX_rdMaster_batch_task_data_requests_reg$write_1__VAL_1,
		 MUX_wrMaster_batch_task_data_requests_reg$write_1__VAL_1;
  wire [99 : 0] MUX_rdMaster_batch_reqGen_incomingBuffer$enq_1__VAL_1,
		MUX_rdMaster_batch_reqGen_incomingBuffer$enq_1__VAL_2;
  wire [94 : 0] MUX_rdMaster_in_rv$port1__write_1__VAL_1,
		MUX_rdMaster_in_rv$port1__write_1__VAL_2,
		MUX_wrMaster_in_addr_rv$port1__write_1__VAL_1;
  wire [66 : 0] MUX_s_config_readSlave_out_rv$port1__write_1__VAL_1,
		MUX_s_config_readSlave_out_rv$port1__write_1__VAL_2,
		MUX_s_config_readSlave_out_rv$port1__write_1__VAL_3,
		MUX_s_config_readSlave_out_rv$port1__write_1__VAL_4,
		MUX_s_config_readSlave_out_rv$port1__write_1__VAL_5,
		MUX_s_config_readSlave_out_rv$port1__write_1__VAL_6,
		MUX_s_config_readSlave_out_rv$port1__write_1__VAL_7;
  wire [63 : 0] MUX_chunks_rd_completed$write_1__VAL_2,
		MUX_chunks_wr_completed$write_1__VAL_2,
		MUX_chunks_wr_sent$write_1__VAL_2,
		MUX_chunks_wr_started$write_1__VAL_1,
		MUX_cycleCount$write_1__VAL_6,
		MUX_status$write_1__VAL_1,
		MUX_status$write_1__VAL_2,
		MUX_status$write_1__VAL_5;
  wire [44 : 0] MUX_rdMaster_batch_task_data_output_reg$write_1__VAL_1,
		MUX_wrMaster_batch_task_data_output_reg$write_1__VAL_1;
  wire [31 : 0] MUX_rand_rd_r$write_1__VAL_2, MUX_rand_wr_r$write_1__VAL_2;
  wire [7 : 0] MUX_remainingBeats$write_1__VAL_2,
	       MUX_wrMaster_batch_beatsThisRequestCntr$write_1__VAL_1;
  wire MUX_error$write_1__SEL_2,
       MUX_error$write_1__SEL_3,
       MUX_error$write_1__SEL_5,
       MUX_first$write_1__SEL_1,
       MUX_idle$write_1__SEL_1,
       MUX_idle$write_1__SEL_2,
       MUX_idle$write_1__SEL_3,
       MUX_idle$write_1__SEL_4;

  // declarations used by system tasks
  // synopsys translate_off
  reg [63 : 0] v__h58615;
  reg [63 : 0] v__h59090;
  reg [63 : 0] v__h59695;
  reg [63 : 0] v__h59750;
  reg [63 : 0] v__h28689;
  // synopsys translate_on

  // remaining internal signals
  reg [3 : 0] CASE_rdMaster_batch_master_rd_in_memoryDOB_BI_ETC__q8,
	      CASE_rdMaster_batch_master_rd_in_rCache_BITS_1_ETC__q7,
	      CASE_rdMaster_batch_master_rd_in_wDataInwget__ETC__q6,
	      CASE_rdMaster_batch_master_rd_warcachewget_1__ETC__q9,
	      CASE_rdMaster_batch_read_rq_outD_OUT_BITS_14__ETC__q5,
	      CASE_rdMaster_warcachewget_1_rdMaster_warcach_ETC__q3,
	      CASE_wrMaster_batch_master_wr_in_addr_memoryD_ETC__q13,
	      CASE_wrMaster_batch_master_wr_in_addr_rCache_B_ETC__q12,
	      CASE_wrMaster_batch_master_wr_in_addr_wDataIn_ETC__q11,
	      CASE_wrMaster_batch_master_wr_wawcachewget_1__ETC__q14,
	      CASE_wrMaster_batch_write_rq_outD_OUT_BITS_14_ETC__q10,
	      CASE_wrMaster_wawcachewget_1_wrMaster_wawcach_ETC__q4;
  reg IF_operation_1_EQ_1_677_THEN_wrMaster_batch_ta_ETC___d1710;
  wire [515 : 0] rdMaster_batch_master_rd_out_1_wDataIn_whas__0_ETC___d712;
  wire [511 : 0] d__h46308,
		 x3__h35843,
		 x3__h44518,
		 x__read_data__h32496,
		 x__read_data__h40483;
  wire [93 : 0] rdMaster_batch_master_rd_in_wDataIn_whas__02_A_ETC___d638,
		wrMaster_batch_master_wr_in_addr_wDataIn_whas__ETC___d1043;
  wire [63 : 0] _theResult____h29507,
		_theResult____h37588,
		address__h27521,
		address__h27726,
		address__h58817,
		byteLength_BITS_60_TO_0_CONCAT_0_MINUS_1__q1,
		bytes_first___1__h29538,
		bytes_first___1__h37619,
		bytes_first__h29506,
		bytes_first__h37587,
		length__h28197,
		strobe__h28198,
		v__h5963,
		v__h6334,
		x__h28292,
		x__h28635,
		x__h29512,
		x__h37593,
		x__read_addr__h30876,
		x__read_addr__h38962,
		x__read_strb__h40484,
		x_strb__h46526;
  wire [31 : 0] _theResult____h29685,
		_theResult____h37766,
		rdMaster_batch_reqGen_incomingBufferD_OUT_BIT_ETC__q16,
		transfers_total___1__h29693,
		transfers_total___1__h37774,
		transfers_total__h29684,
		transfers_total__h29690,
		transfers_total__h37765,
		transfers_total__h37771,
		wrMaster_batch_reqGen_incomingBufferD_OUT_BIT_ETC__q17,
		x__h29687,
		x__h29713,
		x__h37768,
		x__h37794,
		y__h29579,
		y__h29714,
		y__h29716,
		y__h37660,
		y__h37795,
		y__h37797;
  wire [27 : 0] x__h27621, x__h27825, x__h58848;
  wire [25 : 0] _theResult____h30019,
		_theResult____h38100,
		rdMaster_batch_reqGen_intermediateBuffer3_firs_ETC___d573,
		request_data_requests_total__h29986,
		request_data_requests_total__h38067,
		requests_total___1__h30026,
		requests_total___1__h38107,
		requests_total__h29955,
		requests_total__h30023,
		requests_total__h38036,
		requests_total__h38104,
		wrMaster_batch_reqGen_intermediateBuffer3_firs_ETC___d978,
		x_requests_total__h34782,
		x_requests_total__h45080,
		x_transfers_total__h36399,
		x_transfers_total__h57446;
  wire [20 : 0] x_address_dynamic__h34784, x_address_dynamic__h45082;
  wire [12 : 0] x__h29913, x__h37994;
  wire [11 : 0] _0_CONCAT_rdMaster_batch_read_rq_out_first__14__ETC___d817,
		_0_CONCAT_wrMaster_batch_write_rq_out_first__29_ETC___d1294,
		addr_last__h29859,
		addr_last__h29860,
		addr_last__h37940,
		addr_last__h37941,
		b__h35172,
		b__h36613,
		b__h45854,
		b__h57573,
		barrier_transfers__h29903,
		barrier_transfers__h37984,
		y__h29880,
		y__h37961;
  wire [8 : 0] burst_length__h29857,
	       burst_length__h37938,
	       requests_first__h29788,
	       requests_first__h37869,
	       x__h30012,
	       x__h34713,
	       x__h34723,
	       x__h35920,
	       x__h36015,
	       x__h38093,
	       x__h44595,
	       x__h44690,
	       x__h45010,
	       x__h45020;
  wire [7 : 0] IF_rdMaster_batch_task_data_requests_reg_75_BI_ETC___d796,
	       IF_s_config_writeSlave_in_rv_BIT_3_THEN_s_conf_ETC__q15,
	       IF_s_config_writeSlave_in_rv_BIT_3_THEN_s_conf_ETC__q2,
	       _theResult_____3__h44947,
	       beatsThisRequestCntrT__h46342;
  wire [6 : 0] IF_wrMaster_batch_task_data_output_reg_337_BIT_ETC___d1367,
	       endByte___1__h49437,
	       endByte___1__h49463,
	       startByte___1__h49436,
	       x__h49423;
  wire [5 : 0] b__h45943, b__h45974;
  wire [2 : 0] x__h31130,
	       x__h31307,
	       x__h32578,
	       x__h32705,
	       x__h39216,
	       x__h39393,
	       x__h40556,
	       x__h40671,
	       x__h41537,
	       x__h41650;
  wire NOT_cycleCount_91_ULT_cycles_8_92___d493,
       NOT_rdMaster_batch_master_rd_in_rRdPtr_read__4_ETC___d733,
       NOT_rdMaster_batch_master_rd_out_1_rRdPtr_read_ETC___d767,
       NOT_rdMaster_batch_outstanding_beats_port0__re_ETC___d819,
       NOT_wrMaster_batch_master_wr_in_addr_rRdPtr_re_ETC___d1169,
       NOT_wrMaster_batch_master_wr_in_data_rRdPtr_re_ETC___d1202,
       NOT_wrMaster_batch_master_wr_out_rRdPtr_read___ETC___d1214,
       NOT_wrMaster_batch_outstanding_beats_port0__re_ETC___d1296,
       NOT_wrMaster_batch_task_data_output_reg_337_BI_ETC___d1703,
       wrMaster_batch_beatsThisRequestCntr_343_EQ_wrM_ETC___d1345,
       wrMaster_batch_task_data_output_reg_337_BITS_3_ETC___d1707,
       x__read_id__h30875,
       x__read_id__h32495,
       x__read_id__h38961,
       x__read_id__h41470;

  // value method s_rd_arready
  assign S_AXI_arready =
	     !s_config_readSlave_isRst_isInReset &&
	     !s_config_readSlave_in_rv$port1__read[15] ;

  // value method s_rd_rvalid
  assign S_AXI_rvalid =
	     !s_config_readSlave_isRst_isInReset &&
	     s_config_readSlave_out_rv[66] ;

  // value method s_rd_rdata
  assign S_AXI_rdata =
	     s_config_readSlave_out_rv[66] ?
	       s_config_readSlave_out_rv[65:2] :
	       64'd0 ;

  // value method s_rd_rresp
  assign S_AXI_rresp =
	     s_config_readSlave_out_rv[66] ?
	       s_config_readSlave_out_rv[1:0] :
	       2'd0 ;

  // value method s_wr_awready
  assign S_AXI_awready =
	     !s_config_writeSlave_isRst_isInReset &&
	     !s_config_writeSlave_addrIn_rv[15] ;

  // value method s_wr_wready
  assign S_AXI_wready =
	     !s_config_writeSlave_isRst_isInReset &&
	     !s_config_writeSlave_dataIn_rv[72] ;

  // value method s_wr_bvalid
  assign S_AXI_bvalid =
	     !s_config_writeSlave_isRst_isInReset &&
	     s_config_writeSlave_out_rv[2] ;

  // value method s_wr_bresp
  assign S_AXI_bresp =
	     s_config_writeSlave_out_rv[2] ?
	       s_config_writeSlave_out_rv[1:0] :
	       2'd0 ;

  // value method rd_arvalid
  assign M_AXI_arvalid = !rdMaster_isRst_isInReset && rdMaster_in_rv[94] ;

  // value method rd_arid
  assign M_AXI_arid = rdMaster_in_rv[94] && rdMaster_in_rv[93] ;

  // value method rd_araddr
  assign M_AXI_araddr = rdMaster_in_rv[94] ? rdMaster_in_rv[92:29] : 64'd0 ;

  // value method rd_arlen
  assign M_AXI_arlen = rdMaster_in_rv[94] ? rdMaster_in_rv[28:21] : 8'd0 ;

  // value method rd_arsize
  assign M_AXI_arsize = rdMaster_in_rv[94] ? rdMaster_in_rv[20:18] : 3'd0 ;

  // value method rd_arburst
  assign M_AXI_arburst = rdMaster_in_rv[94] ? rdMaster_in_rv[17:16] : 2'd0 ;

  // value method rd_arlock
  assign M_AXI_arlock = rdMaster_in_rv[94] && rdMaster_in_rv[15] ;

  // value method rd_arcache
  assign M_AXI_arcache =
	     (!rdMaster_in_rv[94] || rdMaster_warcache$wget == 4'd0) ?
	       4'd0 :
	       CASE_rdMaster_warcachewget_1_rdMaster_warcach_ETC__q3 ;

  // value method rd_arprot
  assign M_AXI_arprot = rdMaster_in_rv[94] ? rdMaster_in_rv[10:8] : 3'd0 ;

  // value method rd_arqos
  assign M_AXI_arqos = rdMaster_in_rv[94] ? rdMaster_in_rv[7:4] : 4'd0 ;

  // value method rd_arregion
  assign M_AXI_arregion = rdMaster_in_rv[94] ? rdMaster_in_rv[3:0] : 4'd0 ;

  // value method rd_rready
  assign M_AXI_rready =
	     !rdMaster_isRst_isInReset &&
	     !rdMaster_out_1_rv$port1__read[516] ;

  // value method wr_awvalid
  assign M_AXI_awvalid =
	     !wrMaster_isRst_isInReset && wrMaster_in_addr_rv[94] ;

  // value method wr_awid
  assign M_AXI_awid = wrMaster_in_addr_rv[94] && wrMaster_in_addr_rv[93] ;

  // value method wr_awaddr
  assign M_AXI_awaddr =
	     wrMaster_in_addr_rv[94] ? wrMaster_in_addr_rv[92:29] : 64'd0 ;

  // value method wr_awlen
  assign M_AXI_awlen =
	     wrMaster_in_addr_rv[94] ? wrMaster_in_addr_rv[28:21] : 8'd0 ;

  // value method wr_awsize
  assign M_AXI_awsize =
	     wrMaster_in_addr_rv[94] ? wrMaster_in_addr_rv[20:18] : 3'd0 ;

  // value method wr_awburst
  assign M_AXI_awburst =
	     wrMaster_in_addr_rv[94] ? wrMaster_in_addr_rv[17:16] : 2'd0 ;

  // value method wr_awlock
  assign M_AXI_awlock = wrMaster_in_addr_rv[94] && wrMaster_in_addr_rv[15] ;

  // value method wr_awcache
  assign M_AXI_awcache =
	     (!wrMaster_in_addr_rv[94] || wrMaster_wawcache$wget == 4'd0) ?
	       4'd0 :
	       CASE_wrMaster_wawcachewget_1_wrMaster_wawcach_ETC__q4 ;

  // value method wr_awprot
  assign M_AXI_awprot =
	     wrMaster_in_addr_rv[94] ? wrMaster_in_addr_rv[10:8] : 3'd0 ;

  // value method wr_awqos
  assign M_AXI_awqos =
	     wrMaster_in_addr_rv[94] ? wrMaster_in_addr_rv[7:4] : 4'd0 ;

  // value method wr_awregion
  assign M_AXI_awregion =
	     wrMaster_in_addr_rv[94] ? wrMaster_in_addr_rv[3:0] : 4'd0 ;

  // value method wr_wvalid
  assign M_AXI_wvalid =
	     !wrMaster_isRst_isInReset && wrMaster_in_data_rv[577] ;

  // value method wr_wdata
  assign M_AXI_wdata =
	     wrMaster_in_data_rv[577] ? wrMaster_in_data_rv[576:65] : 512'd0 ;

  // value method wr_wstrb
  assign M_AXI_wstrb =
	     wrMaster_in_data_rv[577] ? wrMaster_in_data_rv[64:1] : 64'd0 ;

  // value method wr_wlast
  assign M_AXI_wlast = wrMaster_in_data_rv[577] && wrMaster_in_data_rv[0] ;

  // value method wr_bready
  assign M_AXI_bready =
	     !wrMaster_isRst_isInReset && !wrMaster_out_rv$port1__read[3] ;

  // value method rd_batch_arvalid
  assign M_AXI_BATCH_arvalid =
	     !rdMaster_batch_master_rd_isRst_isInReset &&
	     NOT_rdMaster_batch_master_rd_in_rRdPtr_read__4_ETC___d733 ;

  // value method rd_batch_arid
  assign M_AXI_BATCH_arid =
	     NOT_rdMaster_batch_master_rd_in_rRdPtr_read__4_ETC___d733 &&
	     rdMaster_batch_master_rd_in_wDataOut$wget[93] ;

  // value method rd_batch_araddr
  assign M_AXI_BATCH_araddr =
	     NOT_rdMaster_batch_master_rd_in_rRdPtr_read__4_ETC___d733 ?
	       rdMaster_batch_master_rd_in_wDataOut$wget[92:29] :
	       64'd0 ;

  // value method rd_batch_arlen
  assign M_AXI_BATCH_arlen =
	     NOT_rdMaster_batch_master_rd_in_rRdPtr_read__4_ETC___d733 ?
	       rdMaster_batch_master_rd_in_wDataOut$wget[28:21] :
	       8'd0 ;

  // value method rd_batch_arsize
  assign M_AXI_BATCH_arsize =
	     NOT_rdMaster_batch_master_rd_in_rRdPtr_read__4_ETC___d733 ?
	       rdMaster_batch_master_rd_in_wDataOut$wget[20:18] :
	       3'd0 ;

  // value method rd_batch_arburst
  assign M_AXI_BATCH_arburst =
	     NOT_rdMaster_batch_master_rd_in_rRdPtr_read__4_ETC___d733 ?
	       rdMaster_batch_master_rd_in_wDataOut$wget[17:16] :
	       2'd0 ;

  // value method rd_batch_arlock
  assign M_AXI_BATCH_arlock =
	     NOT_rdMaster_batch_master_rd_in_rRdPtr_read__4_ETC___d733 &&
	     rdMaster_batch_master_rd_in_wDataOut$wget[15] ;

  // value method rd_batch_arcache
  assign M_AXI_BATCH_arcache =
	     (!NOT_rdMaster_batch_master_rd_in_rRdPtr_read__4_ETC___d733 ||
	      rdMaster_batch_master_rd_warcache$wget == 4'd0) ?
	       4'd0 :
	       CASE_rdMaster_batch_master_rd_warcachewget_1__ETC__q9 ;

  // value method rd_batch_arprot
  assign M_AXI_BATCH_arprot =
	     NOT_rdMaster_batch_master_rd_in_rRdPtr_read__4_ETC___d733 ?
	       rdMaster_batch_master_rd_in_wDataOut$wget[10:8] :
	       3'd0 ;

  // value method rd_batch_arqos
  assign M_AXI_BATCH_arqos =
	     NOT_rdMaster_batch_master_rd_in_rRdPtr_read__4_ETC___d733 ?
	       rdMaster_batch_master_rd_in_wDataOut$wget[7:4] :
	       4'd0 ;

  // value method rd_batch_arregion
  assign M_AXI_BATCH_arregion =
	     NOT_rdMaster_batch_master_rd_in_rRdPtr_read__4_ETC___d733 ?
	       rdMaster_batch_master_rd_in_wDataOut$wget[3:0] :
	       4'd0 ;

  // value method rd_batch_rready
  assign M_AXI_BATCH_rready =
	     !rdMaster_batch_master_rd_isRst_isInReset &&
	     NOT_rdMaster_batch_master_rd_out_1_rRdPtr_read_ETC___d767 ;

  // value method wr_batch_awvalid
  assign M_AXI_BATCH_awvalid =
	     !wrMaster_batch_master_wr_isRst_isInReset &&
	     NOT_wrMaster_batch_master_wr_in_addr_rRdPtr_re_ETC___d1169 ;

  // value method wr_batch_awid
  assign M_AXI_BATCH_awid =
	     NOT_wrMaster_batch_master_wr_in_addr_rRdPtr_re_ETC___d1169 &&
	     wrMaster_batch_master_wr_in_addr_wDataOut$wget[93] ;

  // value method wr_batch_awaddr
  assign M_AXI_BATCH_awaddr =
	     NOT_wrMaster_batch_master_wr_in_addr_rRdPtr_re_ETC___d1169 ?
	       wrMaster_batch_master_wr_in_addr_wDataOut$wget[92:29] :
	       64'd0 ;

  // value method wr_batch_awlen
  assign M_AXI_BATCH_awlen =
	     NOT_wrMaster_batch_master_wr_in_addr_rRdPtr_re_ETC___d1169 ?
	       wrMaster_batch_master_wr_in_addr_wDataOut$wget[28:21] :
	       8'd0 ;

  // value method wr_batch_awsize
  assign M_AXI_BATCH_awsize =
	     NOT_wrMaster_batch_master_wr_in_addr_rRdPtr_re_ETC___d1169 ?
	       wrMaster_batch_master_wr_in_addr_wDataOut$wget[20:18] :
	       3'd0 ;

  // value method wr_batch_awburst
  assign M_AXI_BATCH_awburst =
	     NOT_wrMaster_batch_master_wr_in_addr_rRdPtr_re_ETC___d1169 ?
	       wrMaster_batch_master_wr_in_addr_wDataOut$wget[17:16] :
	       2'd0 ;

  // value method wr_batch_awlock
  assign M_AXI_BATCH_awlock =
	     NOT_wrMaster_batch_master_wr_in_addr_rRdPtr_re_ETC___d1169 &&
	     wrMaster_batch_master_wr_in_addr_wDataOut$wget[15] ;

  // value method wr_batch_awcache
  assign M_AXI_BATCH_awcache =
	     (!NOT_wrMaster_batch_master_wr_in_addr_rRdPtr_re_ETC___d1169 ||
	      wrMaster_batch_master_wr_wawcache$wget == 4'd0) ?
	       4'd0 :
	       CASE_wrMaster_batch_master_wr_wawcachewget_1__ETC__q14 ;

  // value method wr_batch_awprot
  assign M_AXI_BATCH_awprot =
	     NOT_wrMaster_batch_master_wr_in_addr_rRdPtr_re_ETC___d1169 ?
	       wrMaster_batch_master_wr_in_addr_wDataOut$wget[10:8] :
	       3'd0 ;

  // value method wr_batch_awqos
  assign M_AXI_BATCH_awqos =
	     NOT_wrMaster_batch_master_wr_in_addr_rRdPtr_re_ETC___d1169 ?
	       wrMaster_batch_master_wr_in_addr_wDataOut$wget[7:4] :
	       4'd0 ;

  // value method wr_batch_awregion
  assign M_AXI_BATCH_awregion =
	     NOT_wrMaster_batch_master_wr_in_addr_rRdPtr_re_ETC___d1169 ?
	       wrMaster_batch_master_wr_in_addr_wDataOut$wget[3:0] :
	       4'd0 ;

  // value method wr_batch_wvalid
  assign M_AXI_BATCH_wvalid =
	     !wrMaster_batch_master_wr_isRst_isInReset &&
	     NOT_wrMaster_batch_master_wr_in_data_rRdPtr_re_ETC___d1202 ;

  // value method wr_batch_wdata
  assign M_AXI_BATCH_wdata =
	     NOT_wrMaster_batch_master_wr_in_data_rRdPtr_re_ETC___d1202 ?
	       wrMaster_batch_master_wr_in_data_wDataOut$wget[576:65] :
	       512'd0 ;

  // value method wr_batch_wstrb
  assign M_AXI_BATCH_wstrb =
	     NOT_wrMaster_batch_master_wr_in_data_rRdPtr_re_ETC___d1202 ?
	       wrMaster_batch_master_wr_in_data_wDataOut$wget[64:1] :
	       64'd0 ;

  // value method wr_batch_wlast
  assign M_AXI_BATCH_wlast =
	     NOT_wrMaster_batch_master_wr_in_data_rRdPtr_re_ETC___d1202 &&
	     wrMaster_batch_master_wr_in_data_wDataOut$wget[0] ;

  // value method wr_batch_bready
  assign M_AXI_BATCH_bready =
	     !wrMaster_batch_master_wr_isRst_isInReset &&
	     NOT_wrMaster_batch_master_wr_out_rRdPtr_read___ETC___d1214 ;

  // value method interrupt
  assign interrupt = interruptR ;

  // submodule rdMaster_batch_master_rd_in_memory
  BRAM2 #(.PIPELINED(1'd0),
	  .ADDR_WIDTH(32'd2),
	  .DATA_WIDTH(32'd94),
	  .MEMSIZE(3'd4)) rdMaster_batch_master_rd_in_memory(.CLKA(CLK),
							     .CLKB(CLK),
							     .ADDRA(rdMaster_batch_master_rd_in_memory$ADDRA),
							     .ADDRB(rdMaster_batch_master_rd_in_memory$ADDRB),
							     .DIA(rdMaster_batch_master_rd_in_memory$DIA),
							     .DIB(rdMaster_batch_master_rd_in_memory$DIB),
							     .WEA(rdMaster_batch_master_rd_in_memory$WEA),
							     .WEB(rdMaster_batch_master_rd_in_memory$WEB),
							     .ENA(rdMaster_batch_master_rd_in_memory$ENA),
							     .ENB(rdMaster_batch_master_rd_in_memory$ENB),
							     .DOA(),
							     .DOB(rdMaster_batch_master_rd_in_memory$DOB));

  // submodule rdMaster_batch_master_rd_out
  FIFO2 #(.width(32'd516),
	  .guarded(32'd1)) rdMaster_batch_master_rd_out(.RST(RST_N),
							.CLK(CLK),
							.D_IN(rdMaster_batch_master_rd_out$D_IN),
							.ENQ(rdMaster_batch_master_rd_out$ENQ),
							.DEQ(rdMaster_batch_master_rd_out$DEQ),
							.CLR(rdMaster_batch_master_rd_out$CLR),
							.D_OUT(),
							.FULL_N(),
							.EMPTY_N());

  // submodule rdMaster_batch_master_rd_out_1_memory
  BRAM2 #(.PIPELINED(1'd0),
	  .ADDR_WIDTH(32'd2),
	  .DATA_WIDTH(32'd516),
	  .MEMSIZE(3'd4)) rdMaster_batch_master_rd_out_1_memory(.CLKA(CLK),
								.CLKB(CLK),
								.ADDRA(rdMaster_batch_master_rd_out_1_memory$ADDRA),
								.ADDRB(rdMaster_batch_master_rd_out_1_memory$ADDRB),
								.DIA(rdMaster_batch_master_rd_out_1_memory$DIA),
								.DIB(rdMaster_batch_master_rd_out_1_memory$DIB),
								.WEA(rdMaster_batch_master_rd_out_1_memory$WEA),
								.WEB(rdMaster_batch_master_rd_out_1_memory$WEB),
								.ENA(rdMaster_batch_master_rd_out_1_memory$ENA),
								.ENB(rdMaster_batch_master_rd_out_1_memory$ENB),
								.DOA(),
								.DOB(rdMaster_batch_master_rd_out_1_memory$DOB));

  // submodule rdMaster_batch_maxOutstandingFIFO
  FIFO2 #(.width(32'd1),
	  .guarded(32'd1)) rdMaster_batch_maxOutstandingFIFO(.RST(RST_N),
							     .CLK(CLK),
							     .D_IN(rdMaster_batch_maxOutstandingFIFO$D_IN),
							     .ENQ(rdMaster_batch_maxOutstandingFIFO$ENQ),
							     .DEQ(rdMaster_batch_maxOutstandingFIFO$DEQ),
							     .CLR(rdMaster_batch_maxOutstandingFIFO$CLR),
							     .D_OUT(),
							     .FULL_N(rdMaster_batch_maxOutstandingFIFO$FULL_N),
							     .EMPTY_N(rdMaster_batch_maxOutstandingFIFO$EMPTY_N));

  // submodule rdMaster_batch_outgoingBuffer_memory
  BRAM2 #(.PIPELINED(1'd0),
	  .ADDR_WIDTH(32'd8),
	  .DATA_WIDTH(32'd512),
	  .MEMSIZE(9'd256)) rdMaster_batch_outgoingBuffer_memory(.CLKA(CLK),
								 .CLKB(CLK),
								 .ADDRA(rdMaster_batch_outgoingBuffer_memory$ADDRA),
								 .ADDRB(rdMaster_batch_outgoingBuffer_memory$ADDRB),
								 .DIA(rdMaster_batch_outgoingBuffer_memory$DIA),
								 .DIB(rdMaster_batch_outgoingBuffer_memory$DIB),
								 .WEA(rdMaster_batch_outgoingBuffer_memory$WEA),
								 .WEB(rdMaster_batch_outgoingBuffer_memory$WEB),
								 .ENA(rdMaster_batch_outgoingBuffer_memory$ENA),
								 .ENB(rdMaster_batch_outgoingBuffer_memory$ENB),
								 .DOA(),
								 .DOB(rdMaster_batch_outgoingBuffer_memory$DOB));

  // submodule rdMaster_batch_read_rq_out
  FIFO2 #(.width(32'd94),
	  .guarded(32'd1)) rdMaster_batch_read_rq_out(.RST(RST_N),
						      .CLK(CLK),
						      .D_IN(rdMaster_batch_read_rq_out$D_IN),
						      .ENQ(rdMaster_batch_read_rq_out$ENQ),
						      .DEQ(rdMaster_batch_read_rq_out$DEQ),
						      .CLR(rdMaster_batch_read_rq_out$CLR),
						      .D_OUT(rdMaster_batch_read_rq_out$D_OUT),
						      .FULL_N(rdMaster_batch_read_rq_out$FULL_N),
						      .EMPTY_N(rdMaster_batch_read_rq_out$EMPTY_N));

  // submodule rdMaster_batch_relaxationBuffer
  FIFO2 #(.width(32'd512),
	  .guarded(32'd1)) rdMaster_batch_relaxationBuffer(.RST(RST_N),
							   .CLK(CLK),
							   .D_IN(rdMaster_batch_relaxationBuffer$D_IN),
							   .ENQ(rdMaster_batch_relaxationBuffer$ENQ),
							   .DEQ(rdMaster_batch_relaxationBuffer$DEQ),
							   .CLR(rdMaster_batch_relaxationBuffer$CLR),
							   .D_OUT(),
							   .FULL_N(rdMaster_batch_relaxationBuffer$FULL_N),
							   .EMPTY_N(rdMaster_batch_relaxationBuffer$EMPTY_N));

  // submodule rdMaster_batch_reqGen_incomingBuffer
  FIFO2 #(.width(32'd100),
	  .guarded(32'd1)) rdMaster_batch_reqGen_incomingBuffer(.RST(RST_N),
								.CLK(CLK),
								.D_IN(rdMaster_batch_reqGen_incomingBuffer$D_IN),
								.ENQ(rdMaster_batch_reqGen_incomingBuffer$ENQ),
								.DEQ(rdMaster_batch_reqGen_incomingBuffer$DEQ),
								.CLR(rdMaster_batch_reqGen_incomingBuffer$CLR),
								.D_OUT(rdMaster_batch_reqGen_incomingBuffer$D_OUT),
								.FULL_N(rdMaster_batch_reqGen_incomingBuffer$FULL_N),
								.EMPTY_N(rdMaster_batch_reqGen_incomingBuffer$EMPTY_N));

  // submodule rdMaster_batch_reqGen_intermediateBuffer
  FIFO2 #(.width(32'd112),
	  .guarded(32'd1)) rdMaster_batch_reqGen_intermediateBuffer(.RST(RST_N),
								    .CLK(CLK),
								    .D_IN(rdMaster_batch_reqGen_intermediateBuffer$D_IN),
								    .ENQ(rdMaster_batch_reqGen_intermediateBuffer$ENQ),
								    .DEQ(rdMaster_batch_reqGen_intermediateBuffer$DEQ),
								    .CLR(rdMaster_batch_reqGen_intermediateBuffer$CLR),
								    .D_OUT(rdMaster_batch_reqGen_intermediateBuffer$D_OUT),
								    .FULL_N(rdMaster_batch_reqGen_intermediateBuffer$FULL_N),
								    .EMPTY_N(rdMaster_batch_reqGen_intermediateBuffer$EMPTY_N));

  // submodule rdMaster_batch_reqGen_intermediateBuffer2
  FIFO2 #(.width(32'd138),
	  .guarded(32'd1)) rdMaster_batch_reqGen_intermediateBuffer2(.RST(RST_N),
								     .CLK(CLK),
								     .D_IN(rdMaster_batch_reqGen_intermediateBuffer2$D_IN),
								     .ENQ(rdMaster_batch_reqGen_intermediateBuffer2$ENQ),
								     .DEQ(rdMaster_batch_reqGen_intermediateBuffer2$DEQ),
								     .CLR(rdMaster_batch_reqGen_intermediateBuffer2$CLR),
								     .D_OUT(rdMaster_batch_reqGen_intermediateBuffer2$D_OUT),
								     .FULL_N(rdMaster_batch_reqGen_intermediateBuffer2$FULL_N),
								     .EMPTY_N(rdMaster_batch_reqGen_intermediateBuffer2$EMPTY_N));

  // submodule rdMaster_batch_reqGen_intermediateBuffer3
  FIFO2 #(.width(32'd147),
	  .guarded(32'd1)) rdMaster_batch_reqGen_intermediateBuffer3(.RST(RST_N),
								     .CLK(CLK),
								     .D_IN(rdMaster_batch_reqGen_intermediateBuffer3$D_IN),
								     .ENQ(rdMaster_batch_reqGen_intermediateBuffer3$ENQ),
								     .DEQ(rdMaster_batch_reqGen_intermediateBuffer3$DEQ),
								     .CLR(rdMaster_batch_reqGen_intermediateBuffer3$CLR),
								     .D_OUT(rdMaster_batch_reqGen_intermediateBuffer3$D_OUT),
								     .FULL_N(rdMaster_batch_reqGen_intermediateBuffer3$FULL_N),
								     .EMPTY_N(rdMaster_batch_reqGen_intermediateBuffer3$EMPTY_N));

  // submodule rdMaster_batch_reqGen_outgoingBuffer
  FIFO2 #(.width(32'd158),
	  .guarded(32'd1)) rdMaster_batch_reqGen_outgoingBuffer(.RST(RST_N),
								.CLK(CLK),
								.D_IN(rdMaster_batch_reqGen_outgoingBuffer$D_IN),
								.ENQ(rdMaster_batch_reqGen_outgoingBuffer$ENQ),
								.DEQ(rdMaster_batch_reqGen_outgoingBuffer$DEQ),
								.CLR(rdMaster_batch_reqGen_outgoingBuffer$CLR),
								.D_OUT(rdMaster_batch_reqGen_outgoingBuffer$D_OUT),
								.FULL_N(rdMaster_batch_reqGen_outgoingBuffer$FULL_N),
								.EMPTY_N(rdMaster_batch_reqGen_outgoingBuffer$EMPTY_N));

  // submodule rdMaster_out
  FIFO1 #(.width(32'd516), .guarded(32'd1)) rdMaster_out(.RST(RST_N),
							 .CLK(CLK),
							 .D_IN(rdMaster_out$D_IN),
							 .ENQ(rdMaster_out$ENQ),
							 .DEQ(rdMaster_out$DEQ),
							 .CLR(rdMaster_out$CLR),
							 .D_OUT(),
							 .FULL_N(),
							 .EMPTY_N());

  // submodule wrMaster_batch_beatsPerRequestFIFO
  FIFO2 #(.width(32'd8),
	  .guarded(32'd1)) wrMaster_batch_beatsPerRequestFIFO(.RST(RST_N),
							      .CLK(CLK),
							      .D_IN(wrMaster_batch_beatsPerRequestFIFO$D_IN),
							      .ENQ(wrMaster_batch_beatsPerRequestFIFO$ENQ),
							      .DEQ(wrMaster_batch_beatsPerRequestFIFO$DEQ),
							      .CLR(wrMaster_batch_beatsPerRequestFIFO$CLR),
							      .D_OUT(wrMaster_batch_beatsPerRequestFIFO$D_OUT),
							      .FULL_N(wrMaster_batch_beatsPerRequestFIFO$FULL_N),
							      .EMPTY_N(wrMaster_batch_beatsPerRequestFIFO$EMPTY_N));

  // submodule wrMaster_batch_incomingBuffer_memory
  BRAM2 #(.PIPELINED(1'd0),
	  .ADDR_WIDTH(32'd8),
	  .DATA_WIDTH(32'd512),
	  .MEMSIZE(9'd256)) wrMaster_batch_incomingBuffer_memory(.CLKA(CLK),
								 .CLKB(CLK),
								 .ADDRA(wrMaster_batch_incomingBuffer_memory$ADDRA),
								 .ADDRB(wrMaster_batch_incomingBuffer_memory$ADDRB),
								 .DIA(wrMaster_batch_incomingBuffer_memory$DIA),
								 .DIB(wrMaster_batch_incomingBuffer_memory$DIB),
								 .WEA(wrMaster_batch_incomingBuffer_memory$WEA),
								 .WEB(wrMaster_batch_incomingBuffer_memory$WEB),
								 .ENA(wrMaster_batch_incomingBuffer_memory$ENA),
								 .ENB(wrMaster_batch_incomingBuffer_memory$ENB),
								 .DOA(),
								 .DOB(wrMaster_batch_incomingBuffer_memory$DOB));

  // submodule wrMaster_batch_master_wr_in_addr_memory
  BRAM2 #(.PIPELINED(1'd0),
	  .ADDR_WIDTH(32'd2),
	  .DATA_WIDTH(32'd94),
	  .MEMSIZE(3'd4)) wrMaster_batch_master_wr_in_addr_memory(.CLKA(CLK),
								  .CLKB(CLK),
								  .ADDRA(wrMaster_batch_master_wr_in_addr_memory$ADDRA),
								  .ADDRB(wrMaster_batch_master_wr_in_addr_memory$ADDRB),
								  .DIA(wrMaster_batch_master_wr_in_addr_memory$DIA),
								  .DIB(wrMaster_batch_master_wr_in_addr_memory$DIB),
								  .WEA(wrMaster_batch_master_wr_in_addr_memory$WEA),
								  .WEB(wrMaster_batch_master_wr_in_addr_memory$WEB),
								  .ENA(wrMaster_batch_master_wr_in_addr_memory$ENA),
								  .ENB(wrMaster_batch_master_wr_in_addr_memory$ENB),
								  .DOA(),
								  .DOB(wrMaster_batch_master_wr_in_addr_memory$DOB));

  // submodule wrMaster_batch_master_wr_in_data_memory
  BRAM2 #(.PIPELINED(1'd0),
	  .ADDR_WIDTH(32'd2),
	  .DATA_WIDTH(32'd577),
	  .MEMSIZE(3'd4)) wrMaster_batch_master_wr_in_data_memory(.CLKA(CLK),
								  .CLKB(CLK),
								  .ADDRA(wrMaster_batch_master_wr_in_data_memory$ADDRA),
								  .ADDRB(wrMaster_batch_master_wr_in_data_memory$ADDRB),
								  .DIA(wrMaster_batch_master_wr_in_data_memory$DIA),
								  .DIB(wrMaster_batch_master_wr_in_data_memory$DIB),
								  .WEA(wrMaster_batch_master_wr_in_data_memory$WEA),
								  .WEB(wrMaster_batch_master_wr_in_data_memory$WEB),
								  .ENA(wrMaster_batch_master_wr_in_data_memory$ENA),
								  .ENB(wrMaster_batch_master_wr_in_data_memory$ENB),
								  .DOA(),
								  .DOB(wrMaster_batch_master_wr_in_data_memory$DOB));

  // submodule wrMaster_batch_master_wr_out_memory
  BRAM2 #(.PIPELINED(1'd0),
	  .ADDR_WIDTH(32'd2),
	  .DATA_WIDTH(32'd3),
	  .MEMSIZE(3'd4)) wrMaster_batch_master_wr_out_memory(.CLKA(CLK),
							      .CLKB(CLK),
							      .ADDRA(wrMaster_batch_master_wr_out_memory$ADDRA),
							      .ADDRB(wrMaster_batch_master_wr_out_memory$ADDRB),
							      .DIA(wrMaster_batch_master_wr_out_memory$DIA),
							      .DIB(wrMaster_batch_master_wr_out_memory$DIB),
							      .WEA(wrMaster_batch_master_wr_out_memory$WEA),
							      .WEB(wrMaster_batch_master_wr_out_memory$WEB),
							      .ENA(wrMaster_batch_master_wr_out_memory$ENA),
							      .ENB(wrMaster_batch_master_wr_out_memory$ENB),
							      .DOA(),
							      .DOB());

  // submodule wrMaster_batch_relaxationBuffer
  FIFO2 #(.width(32'd512),
	  .guarded(32'd1)) wrMaster_batch_relaxationBuffer(.RST(RST_N),
							   .CLK(CLK),
							   .D_IN(wrMaster_batch_relaxationBuffer$D_IN),
							   .ENQ(wrMaster_batch_relaxationBuffer$ENQ),
							   .DEQ(wrMaster_batch_relaxationBuffer$DEQ),
							   .CLR(wrMaster_batch_relaxationBuffer$CLR),
							   .D_OUT(wrMaster_batch_relaxationBuffer$D_OUT),
							   .FULL_N(wrMaster_batch_relaxationBuffer$FULL_N),
							   .EMPTY_N(wrMaster_batch_relaxationBuffer$EMPTY_N));

  // submodule wrMaster_batch_reqGen_incomingBuffer
  FIFO2 #(.width(32'd100),
	  .guarded(32'd1)) wrMaster_batch_reqGen_incomingBuffer(.RST(RST_N),
								.CLK(CLK),
								.D_IN(wrMaster_batch_reqGen_incomingBuffer$D_IN),
								.ENQ(wrMaster_batch_reqGen_incomingBuffer$ENQ),
								.DEQ(wrMaster_batch_reqGen_incomingBuffer$DEQ),
								.CLR(wrMaster_batch_reqGen_incomingBuffer$CLR),
								.D_OUT(wrMaster_batch_reqGen_incomingBuffer$D_OUT),
								.FULL_N(wrMaster_batch_reqGen_incomingBuffer$FULL_N),
								.EMPTY_N(wrMaster_batch_reqGen_incomingBuffer$EMPTY_N));

  // submodule wrMaster_batch_reqGen_intermediateBuffer
  FIFO2 #(.width(32'd112),
	  .guarded(32'd1)) wrMaster_batch_reqGen_intermediateBuffer(.RST(RST_N),
								    .CLK(CLK),
								    .D_IN(wrMaster_batch_reqGen_intermediateBuffer$D_IN),
								    .ENQ(wrMaster_batch_reqGen_intermediateBuffer$ENQ),
								    .DEQ(wrMaster_batch_reqGen_intermediateBuffer$DEQ),
								    .CLR(wrMaster_batch_reqGen_intermediateBuffer$CLR),
								    .D_OUT(wrMaster_batch_reqGen_intermediateBuffer$D_OUT),
								    .FULL_N(wrMaster_batch_reqGen_intermediateBuffer$FULL_N),
								    .EMPTY_N(wrMaster_batch_reqGen_intermediateBuffer$EMPTY_N));

  // submodule wrMaster_batch_reqGen_intermediateBuffer2
  FIFO2 #(.width(32'd138),
	  .guarded(32'd1)) wrMaster_batch_reqGen_intermediateBuffer2(.RST(RST_N),
								     .CLK(CLK),
								     .D_IN(wrMaster_batch_reqGen_intermediateBuffer2$D_IN),
								     .ENQ(wrMaster_batch_reqGen_intermediateBuffer2$ENQ),
								     .DEQ(wrMaster_batch_reqGen_intermediateBuffer2$DEQ),
								     .CLR(wrMaster_batch_reqGen_intermediateBuffer2$CLR),
								     .D_OUT(wrMaster_batch_reqGen_intermediateBuffer2$D_OUT),
								     .FULL_N(wrMaster_batch_reqGen_intermediateBuffer2$FULL_N),
								     .EMPTY_N(wrMaster_batch_reqGen_intermediateBuffer2$EMPTY_N));

  // submodule wrMaster_batch_reqGen_intermediateBuffer3
  FIFO2 #(.width(32'd147),
	  .guarded(32'd1)) wrMaster_batch_reqGen_intermediateBuffer3(.RST(RST_N),
								     .CLK(CLK),
								     .D_IN(wrMaster_batch_reqGen_intermediateBuffer3$D_IN),
								     .ENQ(wrMaster_batch_reqGen_intermediateBuffer3$ENQ),
								     .DEQ(wrMaster_batch_reqGen_intermediateBuffer3$DEQ),
								     .CLR(wrMaster_batch_reqGen_intermediateBuffer3$CLR),
								     .D_OUT(wrMaster_batch_reqGen_intermediateBuffer3$D_OUT),
								     .FULL_N(wrMaster_batch_reqGen_intermediateBuffer3$FULL_N),
								     .EMPTY_N(wrMaster_batch_reqGen_intermediateBuffer3$EMPTY_N));

  // submodule wrMaster_batch_reqGen_outgoingBuffer
  FIFO2 #(.width(32'd158),
	  .guarded(32'd1)) wrMaster_batch_reqGen_outgoingBuffer(.RST(RST_N),
								.CLK(CLK),
								.D_IN(wrMaster_batch_reqGen_outgoingBuffer$D_IN),
								.ENQ(wrMaster_batch_reqGen_outgoingBuffer$ENQ),
								.DEQ(wrMaster_batch_reqGen_outgoingBuffer$DEQ),
								.CLR(wrMaster_batch_reqGen_outgoingBuffer$CLR),
								.D_OUT(wrMaster_batch_reqGen_outgoingBuffer$D_OUT),
								.FULL_N(wrMaster_batch_reqGen_outgoingBuffer$FULL_N),
								.EMPTY_N(wrMaster_batch_reqGen_outgoingBuffer$EMPTY_N));

  // submodule wrMaster_batch_write_rq_out
  FIFO2 #(.width(32'd94),
	  .guarded(32'd1)) wrMaster_batch_write_rq_out(.RST(RST_N),
						       .CLK(CLK),
						       .D_IN(wrMaster_batch_write_rq_out$D_IN),
						       .ENQ(wrMaster_batch_write_rq_out$ENQ),
						       .DEQ(wrMaster_batch_write_rq_out$DEQ),
						       .CLR(wrMaster_batch_write_rq_out$CLR),
						       .D_OUT(wrMaster_batch_write_rq_out$D_OUT),
						       .FULL_N(wrMaster_batch_write_rq_out$FULL_N),
						       .EMPTY_N(wrMaster_batch_write_rq_out$EMPTY_N));

  // rule RL_s_config_axiReadSpecialIsHandled
  assign WILL_FIRE_RL_s_config_axiReadSpecialIsHandled =
	     s_config_readSlave_in_rv[15] &&
	     s_config_readSlave_in_rv[9:6] == 4'd0 ;

  // rule RL_s_config_axiReadSpecialIsHandled_1
  assign WILL_FIRE_RL_s_config_axiReadSpecialIsHandled_1 =
	     s_config_readSlave_in_rv[15] &&
	     s_config_readSlave_in_rv[9:6] == 4'd2 ;

  // rule RL_s_config_axiReadSpecialIsHandled_2
  assign WILL_FIRE_RL_s_config_axiReadSpecialIsHandled_2 =
	     s_config_readSlave_in_rv[15] &&
	     s_config_readSlave_in_rv[9:6] == 4'd4 ;

  // rule RL_s_config_axiReadSpecialIsHandled_3
  assign WILL_FIRE_RL_s_config_axiReadSpecialIsHandled_3 =
	     s_config_readSlave_in_rv[15] &&
	     s_config_readSlave_in_rv[9:6] == 4'd6 ;

  // rule RL_s_config_axiReadSpecialIsHandled_4
  assign WILL_FIRE_RL_s_config_axiReadSpecialIsHandled_4 =
	     s_config_readSlave_in_rv[15] &&
	     s_config_readSlave_in_rv[9:6] == 4'd8 ;

  // rule RL_s_config_axiReadSpecialIsHandled_5
  assign WILL_FIRE_RL_s_config_axiReadSpecialIsHandled_5 =
	     s_config_readSlave_in_rv[15] &&
	     s_config_readSlave_in_rv[9:6] == 4'd10 ;

  // rule RL_s_config_axiReadSpecialIsHandled_6
  assign WILL_FIRE_RL_s_config_axiReadSpecialIsHandled_6 =
	     s_config_readSlave_in_rv[15] &&
	     s_config_readSlave_in_rv[9:6] == 4'd12 ;

  // rule RL_s_config_axiReadSpecial
  assign WILL_FIRE_RL_s_config_axiReadSpecial =
	     s_config_readSlave_in_rv[15] &&
	     !s_config_readSlave_out_rv$port1__read[66] &&
	     s_config_readSlave_in_rv[9:6] == 4'd0 &&
	     !s_config_readBusy ;

  // rule RL_s_config_axiReadSpecial_1
  assign WILL_FIRE_RL_s_config_axiReadSpecial_1 =
	     s_config_readSlave_in_rv[15] &&
	     !s_config_readSlave_out_rv$port1__read[66] &&
	     s_config_readSlave_in_rv[9:6] == 4'd2 &&
	     !s_config_readBusy ;

  // rule RL_s_config_axiReadSpecial_2
  assign WILL_FIRE_RL_s_config_axiReadSpecial_2 =
	     s_config_readSlave_in_rv[15] &&
	     !s_config_readSlave_out_rv$port1__read[66] &&
	     s_config_readSlave_in_rv[9:6] == 4'd4 &&
	     !s_config_readBusy ;

  // rule RL_s_config_axiReadSpecial_3
  assign WILL_FIRE_RL_s_config_axiReadSpecial_3 =
	     s_config_readSlave_in_rv[15] &&
	     !s_config_readSlave_out_rv$port1__read[66] &&
	     s_config_readSlave_in_rv[9:6] == 4'd6 &&
	     !s_config_readBusy ;

  // rule RL_s_config_axiReadSpecial_4
  assign WILL_FIRE_RL_s_config_axiReadSpecial_4 =
	     s_config_readSlave_in_rv[15] &&
	     !s_config_readSlave_out_rv$port1__read[66] &&
	     s_config_readSlave_in_rv[9:6] == 4'd8 &&
	     !s_config_readBusy ;

  // rule RL_s_config_axiReadSpecial_5
  assign WILL_FIRE_RL_s_config_axiReadSpecial_5 =
	     s_config_readSlave_in_rv[15] &&
	     !s_config_readSlave_out_rv$port1__read[66] &&
	     s_config_readSlave_in_rv[9:6] == 4'd10 &&
	     !s_config_readBusy ;

  // rule RL_s_config_axiReadSpecial_6
  assign WILL_FIRE_RL_s_config_axiReadSpecial_6 =
	     s_config_readSlave_in_rv[15] &&
	     !s_config_readSlave_out_rv$port1__read[66] &&
	     s_config_readSlave_in_rv[9:6] == 4'd12 &&
	     !s_config_readBusy ;

  // rule RL_s_config_axiReadFallback
  assign WILL_FIRE_RL_s_config_axiReadFallback =
	     s_config_readSlave_in_rv[15] &&
	     !s_config_readSlave_out_rv$port1__read[66] &&
	     !s_config_readIsHandled$whas ;

  // rule RL_s_config_1_axiWriteSpecialIsHandled
  assign WILL_FIRE_RL_s_config_1_axiWriteSpecialIsHandled =
	     s_config_writeSlave_in_rv[87] &&
	     s_config_writeSlave_in_rv[81:78] == 4'd0 ;

  // rule RL_s_config_1_axiWriteSpecial
  assign WILL_FIRE_RL_s_config_1_axiWriteSpecial =
	     s_config_writeSlave_in_rv[87] &&
	     !s_config_writeSlave_out_rv$port1__read[2] &&
	     s_config_writeSlave_in_rv[81:78] == 4'd0 &&
	     !s_config_writeBusy &&
	     !WILL_FIRE_RL_startReadWriteBatch &&
	     !WILL_FIRE_RL_startReadBatch &&
	     !WILL_FIRE_RL_startWriteBatch &&
	     !WILL_FIRE_RL_startRandom ;

  // rule RL_s_config_1_axiWriteSpecialIsHandled_1
  assign WILL_FIRE_RL_s_config_1_axiWriteSpecialIsHandled_1 =
	     s_config_writeSlave_in_rv[87] &&
	     s_config_writeSlave_in_rv[81:78] == 4'd2 ;

  // rule RL_s_config_1_axiWriteSpecial_1
  assign WILL_FIRE_RL_s_config_1_axiWriteSpecial_1 =
	     s_config_writeSlave_in_rv[87] &&
	     !s_config_writeSlave_out_rv$port1__read[2] &&
	     s_config_writeSlave_in_rv[81:78] == 4'd2 &&
	     !s_config_writeBusy ;

  // rule RL_checkActivityBatch
  assign WILL_FIRE_RL_checkActivityBatch =
	     !idle &&
	     (operation == 3'd1 || operation == 3'd0 || operation == 3'd2) ;

  // rule RL_dropReadResponseLatency
  assign WILL_FIRE_RL_dropReadResponseLatency =
	     rdMaster_out_1_rv[516] && operation == 3'd6 ;

  // rule RL_s_config_1_axiWriteSpecialIsHandled_2
  assign WILL_FIRE_RL_s_config_1_axiWriteSpecialIsHandled_2 =
	     s_config_writeSlave_in_rv[87] &&
	     s_config_writeSlave_in_rv[81:78] == 4'd4 ;

  // rule RL_s_config_1_axiWriteSpecialIsHandled_3
  assign WILL_FIRE_RL_s_config_1_axiWriteSpecialIsHandled_3 =
	     s_config_writeSlave_in_rv[87] &&
	     s_config_writeSlave_in_rv[81:78] == 4'd6 ;

  // rule RL_s_config_1_axiWriteSpecialIsHandled_4
  assign WILL_FIRE_RL_s_config_1_axiWriteSpecialIsHandled_4 =
	     s_config_writeSlave_in_rv[87] &&
	     s_config_writeSlave_in_rv[81:78] == 4'd8 ;

  // rule RL_s_config_1_axiWriteSpecialIsHandled_5
  assign WILL_FIRE_RL_s_config_1_axiWriteSpecialIsHandled_5 =
	     s_config_writeSlave_in_rv[87] &&
	     s_config_writeSlave_in_rv[81:78] == 4'd10 ;

  // rule RL_s_config_1_axiWriteSpecialIsHandled_6
  assign WILL_FIRE_RL_s_config_1_axiWriteSpecialIsHandled_6 =
	     s_config_writeSlave_in_rv[87] &&
	     s_config_writeSlave_in_rv[81:78] == 4'd12 ;

  // rule RL_s_config_1_axiWriteFallback
  assign WILL_FIRE_RL_s_config_1_axiWriteFallback =
	     s_config_writeSlave_in_rv[87] &&
	     !s_config_writeSlave_out_rv$port1__read[2] &&
	     !s_config_writeIsHandled$whas &&
	     !WILL_FIRE_RL_s_config_1_axiWriteSpecial_6 &&
	     !WILL_FIRE_RL_s_config_1_axiWriteSpecial_5 &&
	     !WILL_FIRE_RL_s_config_1_axiWriteSpecial_4 &&
	     !WILL_FIRE_RL_s_config_1_axiWriteSpecial_3 &&
	     !WILL_FIRE_RL_s_config_1_axiWriteSpecial_2 &&
	     !WILL_FIRE_RL_s_config_1_axiWriteSpecial_1 &&
	     !WILL_FIRE_RL_s_config_1_axiWriteSpecial ;

  // rule RL_startReadRandom
  assign WILL_FIRE_RL_startReadRandom =
	     !rdMaster_in_rv$port1__read[94] && !idle &&
	     (operation == 3'd3 || operation == 3'd5) ;

  // rule RL_startReadCheck
  assign WILL_FIRE_RL_startReadCheck =
	     !rdMaster_in_rv$port1__read[94] && !idle && operation == 3'd7 &&
	     writeFinished ;

  // rule RL_recvReadResponseCheck
  assign WILL_FIRE_RL_recvReadResponseCheck =
	     rdMaster_out_1_rv[516] && operation == 3'd7 ;

  // rule RL_dropWriteResponseCheck
  assign WILL_FIRE_RL_dropWriteResponseCheck =
	     wrMaster_out_rv[3] && operation == 3'd7 && !writeFinished ;

  // rule RL_startWriteCheck
  assign WILL_FIRE_RL_startWriteCheck =
	     !wrMaster_in_addr_rv$port1__read[94] && idle && start &&
	     operation == 3'd7 &&
	     !WILL_FIRE_RL_s_config_1_axiWriteSpecial &&
	     !WILL_FIRE_RL_recvReadResponseCheck ;

  // rule RL_putWriteDataRandom
  assign WILL_FIRE_RL_putWriteDataRandom =
	     !wrMaster_in_data_rv$port1__read[577] &&
	     chunks_wr_started > chunks_wr_sent &&
	     (operation == 3'd4 || operation == 3'd3 || operation == 3'd5) ;

  // rule RL_startWriteRandom
  assign WILL_FIRE_RL_startWriteRandom =
	     !wrMaster_in_addr_rv$port1__read[94] && !idle &&
	     (operation == 3'd4 || operation == 3'd5) ;

  // rule RL_checkActivityRandom
  assign WILL_FIRE_RL_checkActivityRandom =
	     !idle &&
	     (operation == 3'd4 || operation == 3'd3 || operation == 3'd5) ;

  // rule RL_dropReadResponseRandom
  assign WILL_FIRE_RL_dropReadResponseRandom =
	     rdMaster_out_1_rv[516] &&
	     (operation == 3'd4 || operation == 3'd3 || operation == 3'd5) ;

  // rule RL_dropWriteResponseRandom
  assign WILL_FIRE_RL_dropWriteResponseRandom =
	     wrMaster_out_rv[3] &&
	     (operation == 3'd4 || operation == 3'd3 || operation == 3'd5) ;

  // rule RL_startRandom
  assign WILL_FIRE_RL_startRandom =
	     idle && start &&
	     (operation == 3'd4 || operation == 3'd3 || operation == 3'd5) ;

  // rule RL_startWriteBatch
  assign WILL_FIRE_RL_startWriteBatch =
	     wrMaster_batch_reqGen_incomingBuffer$FULL_N && idle && start &&
	     operation == 3'd1 ;

  // rule RL_startReadBatch
  assign WILL_FIRE_RL_startReadBatch =
	     rdMaster_batch_reqGen_incomingBuffer$FULL_N && idle && start &&
	     operation == 3'd0 ;

  // rule RL_startReadWriteBatch
  assign WILL_FIRE_RL_startReadWriteBatch =
	     wrMaster_batch_reqGen_incomingBuffer$FULL_N &&
	     rdMaster_batch_reqGen_incomingBuffer$FULL_N &&
	     idle &&
	     start &&
	     operation == 3'd2 ;

  // rule RL_startLatency
  assign WILL_FIRE_RL_startLatency =
	     !rdMaster_in_rv$port1__read[94] && idle && start &&
	     operation == 3'd6 &&
	     !WILL_FIRE_RL_s_config_1_axiWriteSpecial &&
	     !WILL_FIRE_RL_dropReadResponseLatency ;

  // rule RL_s_config_1_axiWriteSpecial_2
  assign WILL_FIRE_RL_s_config_1_axiWriteSpecial_2 =
	     s_config_writeSlave_in_rv[87] &&
	     !s_config_writeSlave_out_rv$port1__read[2] &&
	     s_config_writeSlave_in_rv[81:78] == 4'd4 &&
	     !s_config_writeBusy ;

  // rule RL_s_config_1_axiWriteSpecial_3
  assign WILL_FIRE_RL_s_config_1_axiWriteSpecial_3 =
	     s_config_writeSlave_in_rv[87] &&
	     !s_config_writeSlave_out_rv$port1__read[2] &&
	     s_config_writeSlave_in_rv[81:78] == 4'd6 &&
	     !s_config_writeBusy ;

  // rule RL_s_config_1_axiWriteSpecial_4
  assign WILL_FIRE_RL_s_config_1_axiWriteSpecial_4 =
	     s_config_writeSlave_in_rv[87] &&
	     !s_config_writeSlave_out_rv$port1__read[2] &&
	     s_config_writeSlave_in_rv[81:78] == 4'd8 &&
	     !s_config_writeBusy ;

  // rule RL_s_config_1_axiWriteSpecial_5
  assign WILL_FIRE_RL_s_config_1_axiWriteSpecial_5 =
	     s_config_writeSlave_in_rv[87] &&
	     !s_config_writeSlave_out_rv$port1__read[2] &&
	     s_config_writeSlave_in_rv[81:78] == 4'd10 &&
	     !s_config_writeBusy ;

  // rule RL_s_config_1_axiWriteSpecial_6
  assign WILL_FIRE_RL_s_config_1_axiWriteSpecial_6 =
	     s_config_writeSlave_in_rv[87] &&
	     !s_config_writeSlave_out_rv$port1__read[2] &&
	     s_config_writeSlave_in_rv[81:78] == 4'd12 &&
	     !s_config_writeBusy ;

  // rule RL_rdMaster_batch_placeRequest
  assign WILL_FIRE_RL_rdMaster_batch_placeRequest =
	     rdMaster_batch_read_rq_out$FULL_N &&
	     rdMaster_batch_maxOutstandingFIFO$FULL_N &&
	     rdMaster_batch_task_data_requests_reg[94:69] != 26'd0 ;

  // rule RL_rdMaster_batch_placeAXI
  assign WILL_FIRE_RL_rdMaster_batch_placeAXI =
	     rdMaster_batch_read_rq_out$EMPTY_N &&
	     rdMaster_batch_master_rd_in_rRdPtr + 3'd2 !=
	     rdMaster_batch_master_rd_in_rWrPtr ;

  // rule RL_rdMaster_batch_fillBuffer
  assign WILL_FIRE_RL_rdMaster_batch_fillBuffer =
	     rdMaster_batch_reqGen_outgoingBuffer$EMPTY_N &&
	     rdMaster_batch_task_data_output_reg[32:7] == 26'd0 &&
	     rdMaster_batch_task_data_requests_reg[94:69] == 26'd0 ;

  // rule RL_rdMaster_batch_forwardData
  assign WILL_FIRE_RL_rdMaster_batch_forwardData =
	     rdMaster_batch_master_rd_out_1_rRdPtr !=
	     rdMaster_batch_master_rd_out_1_rWrPtr &&
	     rdMaster_batch_outgoingBuffer_rRdPtr + 9'd128 !=
	     rdMaster_batch_outgoingBuffer_rWrPtr &&
	     rdMaster_batch_maxOutstandingFIFO$EMPTY_N &&
	     rdMaster_batch_task_data_output_reg[32:7] != 26'd0 ;

  // rule RL_wrMaster_batch_placeRequest
  assign WILL_FIRE_RL_wrMaster_batch_placeRequest =
	     wrMaster_batch_write_rq_out$FULL_N &&
	     wrMaster_batch_beatsPerRequestFIFO$FULL_N &&
	     wrMaster_batch_task_data_requests_reg[94:69] != 26'd0 ;

  // rule RL_wrMaster_batch_fillBuffer
  assign WILL_FIRE_RL_wrMaster_batch_fillBuffer =
	     wrMaster_batch_reqGen_outgoingBuffer$EMPTY_N &&
	     wrMaster_batch_task_data_output_reg[32:7] == 26'd0 &&
	     wrMaster_batch_task_data_requests_reg[94:69] == 26'd0 &&
	     wrMaster_batch_outstanding_writes == 6'd0 ;

  // rule RL_wrMaster_batch_forwardData
  assign WILL_FIRE_RL_wrMaster_batch_forwardData =
	     wrMaster_batch_incomingBuffer_rRdPtr !=
	     wrMaster_batch_incomingBuffer_rWrPtr &&
	     wrMaster_batch_master_wr_in_data_rRdPtr + 3'd2 !=
	     wrMaster_batch_master_wr_in_data_rWrPtr &&
	     wrMaster_batch_beatsPerRequestFIFO$EMPTY_N &&
	     wrMaster_batch_outstanding_writes_out != 6'd0 &&
	     wrMaster_batch_task_data_output_reg[32:7] != 26'd0 ;

  // rule RL_wrMaster_batch_placeAXI
  assign WILL_FIRE_RL_wrMaster_batch_placeAXI =
	     wrMaster_batch_write_rq_out$EMPTY_N &&
	     wrMaster_batch_master_wr_in_addr_rRdPtr + 3'd2 !=
	     wrMaster_batch_master_wr_in_addr_rWrPtr ;

  // inputs to muxes for submodule ports
  assign MUX_error$write_1__SEL_2 =
	     WILL_FIRE_RL_dropWriteResponseRandom &&
	     (wrMaster_out_rv[1:0] == 2'd2 || wrMaster_out_rv[1:0] == 2'd3) ;
  assign MUX_error$write_1__SEL_3 =
	     WILL_FIRE_RL_dropReadResponseRandom &&
	     (rdMaster_out_1_rv[2:1] == 2'd2 ||
	      rdMaster_out_1_rv[2:1] == 2'd3) ;
  assign MUX_error$write_1__SEL_5 =
	     WILL_FIRE_RL_dropWriteResponseCheck &&
	     (wrMaster_out_rv[1:0] == 2'd2 || wrMaster_out_rv[1:0] == 2'd3) ;
  assign MUX_first$write_1__SEL_1 =
	     WILL_FIRE_RL_dropReadResponseLatency && first ;
  assign MUX_idle$write_1__SEL_1 =
	     WILL_FIRE_RL_dropReadResponseLatency && rdMaster_out_1_rv[0] ;
  assign MUX_idle$write_1__SEL_2 =
	     WILL_FIRE_RL_checkActivityRandom &&
	     NOT_cycleCount_91_ULT_cycles_8_92___d493 ;
  assign MUX_idle$write_1__SEL_3 =
	     WILL_FIRE_RL_checkActivityBatch &&
	     IF_operation_1_EQ_1_677_THEN_wrMaster_batch_ta_ETC___d1710 &&
	     lastCycle ;
  assign MUX_idle$write_1__SEL_4 =
	     WILL_FIRE_RL_startWriteCheck || WILL_FIRE_RL_startLatency ||
	     WILL_FIRE_RL_startReadWriteBatch ||
	     WILL_FIRE_RL_startReadBatch ||
	     WILL_FIRE_RL_startWriteBatch ||
	     WILL_FIRE_RL_startRandom ;
  assign MUX_chunks_rd_completed$write_1__VAL_2 =
	     chunks_rd_completed + 64'd1 ;
  assign MUX_chunks_wr_completed$write_1__VAL_2 =
	     chunks_wr_completed + 64'd1 ;
  assign MUX_chunks_wr_sent$write_1__VAL_2 = chunks_wr_sent + 64'd1 ;
  assign MUX_chunks_wr_started$write_1__VAL_1 = chunks_wr_started + 64'd1 ;
  assign MUX_cycleCount$write_1__VAL_6 = cycleCount + 64'd1 ;
  always@(operation or
	  NOT_wrMaster_batch_task_data_output_reg_337_BI_ETC___d1703 or
	  rdMaster_batch_task_data_output_reg or
	  rdMaster_batch_task_data_requests_reg or
	  wrMaster_batch_task_data_output_reg or
	  wrMaster_batch_task_data_requests_reg or
	  wrMaster_batch_outstanding_writes)
  begin
    case (operation)
      3'd0:
	  MUX_lastCycle$write_1__VAL_1 =
	      rdMaster_batch_task_data_output_reg[32:7] != 26'd0 ||
	      rdMaster_batch_task_data_requests_reg[94:69] != 26'd0;
      3'd1:
	  MUX_lastCycle$write_1__VAL_1 =
	      wrMaster_batch_task_data_output_reg[32:7] != 26'd0 ||
	      wrMaster_batch_task_data_requests_reg[94:69] != 26'd0 ||
	      wrMaster_batch_outstanding_writes != 6'd0;
      default: MUX_lastCycle$write_1__VAL_1 =
		   NOT_wrMaster_batch_task_data_output_reg_337_BI_ETC___d1703;
    endcase
  end
  assign MUX_rand_rd_r$write_1__VAL_2 =
	     rand_rd_r[0] ?
	       { 1'd1,
		 rand_rd_r[31:8],
		 ~rand_rd_r[7],
		 rand_rd_r[6],
		 ~rand_rd_r[5],
		 rand_rd_r[4],
		 ~rand_rd_r[3:1] } :
	       { 1'd0, rand_rd_r[31:1] } ;
  assign MUX_rand_wr_r$write_1__VAL_2 =
	     rand_wr_r[0] ?
	       { 1'd1,
		 rand_wr_r[31:8],
		 ~rand_wr_r[7],
		 rand_wr_r[6],
		 ~rand_wr_r[5],
		 rand_wr_r[4],
		 ~rand_wr_r[3:1] } :
	       { 1'd0, rand_wr_r[31:1] } ;
  assign MUX_rdMaster_batch_reqGen_incomingBuffer$enq_1__VAL_1 =
	     { 64'd0, byteLength[31:0], 4'd0 } ;
  assign MUX_rdMaster_batch_reqGen_incomingBuffer$enq_1__VAL_2 =
	     { byteLength, byteLength[31:0], 4'd0 } ;
  assign MUX_rdMaster_batch_task_data_output_reg$write_1__VAL_1 =
	     { rdMaster_batch_task_data_output_reg[44:33],
	       x_transfers_total__h36399,
	       rdMaster_batch_task_data_output_reg[6:0] } ;
  assign MUX_rdMaster_batch_task_data_requests_reg$write_1__VAL_1 =
	     { rdMaster_batch_task_data_requests_reg[112:95],
	       x_requests_total__h34782,
	       rdMaster_batch_task_data_requests_reg[68:38],
	       x_address_dynamic__h34784,
	       12'd0,
	       rdMaster_batch_task_data_requests_reg[4:1],
	       1'd0 } ;
  assign MUX_rdMaster_in_rv$port1__write_1__VAL_1 =
	     { 2'd2,
	       address__h27521,
	       byteLength_BITS_60_TO_0_CONCAT_0_MINUS_1__q1[16:9],
	       21'd1644544 } ;
  assign MUX_rdMaster_in_rv$port1__write_1__VAL_2 =
	     { 2'd2,
	       address__h58817,
	       byteLength_BITS_60_TO_0_CONCAT_0_MINUS_1__q1[16:9],
	       21'd1644544 } ;
  assign MUX_remainingBeats$write_1__VAL_2 =
	     (remainingBeats == 8'd0) ?
	       byteLength_BITS_60_TO_0_CONCAT_0_MINUS_1__q1[16:9] :
	       remainingBeats - 8'd1 ;
  assign MUX_s_config_readSlave_out_rv$port1__write_1__VAL_1 =
	     { 1'd1, v__h5963, 2'd0 } ;
  assign MUX_s_config_readSlave_out_rv$port1__write_1__VAL_2 =
	     { 1'd1, status, 2'd0 } ;
  assign MUX_s_config_readSlave_out_rv$port1__write_1__VAL_3 =
	     { 1'd1, v__h6334, 2'd0 } ;
  assign MUX_s_config_readSlave_out_rv$port1__write_1__VAL_4 =
	     { 1'd1, cycles, 2'd0 } ;
  assign MUX_s_config_readSlave_out_rv$port1__write_1__VAL_5 =
	     { 1'd1, byteLength, 2'd0 } ;
  assign MUX_s_config_readSlave_out_rv$port1__write_1__VAL_6 =
	     { 1'd1, seed_wr, 2'd0 } ;
  assign MUX_s_config_readSlave_out_rv$port1__write_1__VAL_7 =
	     { 1'd1, seed_rd, 2'd0 } ;
  assign MUX_status$write_1__VAL_1 = error ? 64'd0 : x__h28635 ;
  assign MUX_status$write_1__VAL_2 =
	     (error || rdMaster_out_1_rv[2:1] == 2'd2 ||
	      rdMaster_out_1_rv[2:1] == 2'd3) ?
	       64'd2 :
	       ((rdMaster_out_1_rv[514:3] ==
		 512'hDEAFBEEFDEADBEFFDEADBEFFDEAFBEEFDEADBEFFDEADBEFFDEAFBEEFDEADBEFFDEADBEFFDEAFBEEFDEADBEFFDEADBEFFDEAFBEEFDEADBEFFDEADBEFFDEAFBEEF) ?
		  64'd1 :
		  64'd0) ;
  assign MUX_status$write_1__VAL_5 =
	     { s_config_writeSlave_in_rv[10] ?
		 s_config_writeSlave_in_rv[74:67] :
		 status[63:56],
	       s_config_writeSlave_in_rv[9] ?
		 s_config_writeSlave_in_rv[66:59] :
		 status[55:48],
	       s_config_writeSlave_in_rv[8] ?
		 s_config_writeSlave_in_rv[58:51] :
		 status[47:40],
	       s_config_writeSlave_in_rv[7] ?
		 s_config_writeSlave_in_rv[50:43] :
		 status[39:32],
	       s_config_writeSlave_in_rv[6] ?
		 s_config_writeSlave_in_rv[42:35] :
		 status[31:24],
	       s_config_writeSlave_in_rv[5] ?
		 s_config_writeSlave_in_rv[34:27] :
		 status[23:16],
	       s_config_writeSlave_in_rv[4] ?
		 s_config_writeSlave_in_rv[26:19] :
		 status[15:8],
	       s_config_writeSlave_in_rv[3] ?
		 s_config_writeSlave_in_rv[18:11] :
		 status[7:0] } ;
  assign MUX_wrMaster_batch_beatsThisRequestCntr$write_1__VAL_1 =
	     wrMaster_batch_beatsThisRequestCntr_343_EQ_wrM_ETC___d1345 ?
	       8'd0 :
	       beatsThisRequestCntrT__h46342 ;
  assign MUX_wrMaster_batch_task_data_output_reg$write_1__VAL_1 =
	     { wrMaster_batch_task_data_output_reg[44:33],
	       x_transfers_total__h57446,
	       wrMaster_batch_task_data_output_reg[6:1],
	       1'd0 } ;
  assign MUX_wrMaster_batch_task_data_requests_reg$write_1__VAL_1 =
	     { wrMaster_batch_task_data_requests_reg[112:95],
	       x_requests_total__h45080,
	       wrMaster_batch_task_data_requests_reg[68:38],
	       x_address_dynamic__h45082,
	       12'd0,
	       wrMaster_batch_task_data_requests_reg[4:1],
	       1'd0 } ;
  assign MUX_wrMaster_in_addr_rv$port1__write_1__VAL_1 =
	     { 2'd2,
	       address__h27726,
	       byteLength_BITS_60_TO_0_CONCAT_0_MINUS_1__q1[16:9],
	       21'd1644544 } ;
  assign MUX_wrMaster_in_data_rv$port1__write_1__VAL_1 =
	     { 513'h1DEAFBEEFDEADBEFFDEADBEFFDEAFBEEFDEADBEFFDEADBEFFDEAFBEEFDEADBEFFDEADBEFFDEAFBEEFDEADBEFFDEADBEFFDEAFBEEFDEADBEFFDEADBEFFDEAFBEEF,
	       strobe__h28198,
	       remainingBeats == 8'd0 } ;

  // inlined wires
  assign interruptR_1$whas =
	     WILL_FIRE_RL_dropReadResponseLatency && rdMaster_out_1_rv[0] ||
	     WILL_FIRE_RL_checkActivityRandom &&
	     NOT_cycleCount_91_ULT_cycles_8_92___d493 ||
	     WILL_FIRE_RL_checkActivityBatch &&
	     IF_operation_1_EQ_1_677_THEN_wrMaster_batch_ta_ETC___d1710 &&
	     lastCycle ||
	     WILL_FIRE_RL_recvReadResponseCheck ;
  assign s_config_readIsHandled$whas =
	     WILL_FIRE_RL_s_config_axiReadSpecialIsHandled_6 ||
	     WILL_FIRE_RL_s_config_axiReadSpecialIsHandled_5 ||
	     WILL_FIRE_RL_s_config_axiReadSpecialIsHandled_4 ||
	     WILL_FIRE_RL_s_config_axiReadSpecialIsHandled_3 ||
	     WILL_FIRE_RL_s_config_axiReadSpecialIsHandled_2 ||
	     WILL_FIRE_RL_s_config_axiReadSpecialIsHandled_1 ||
	     WILL_FIRE_RL_s_config_axiReadSpecialIsHandled ;
  assign s_config_writeIsHandled$whas =
	     WILL_FIRE_RL_s_config_1_axiWriteSpecialIsHandled_6 ||
	     WILL_FIRE_RL_s_config_1_axiWriteSpecialIsHandled_5 ||
	     WILL_FIRE_RL_s_config_1_axiWriteSpecialIsHandled_4 ||
	     WILL_FIRE_RL_s_config_1_axiWriteSpecialIsHandled_3 ||
	     WILL_FIRE_RL_s_config_1_axiWriteSpecialIsHandled_2 ||
	     WILL_FIRE_RL_s_config_1_axiWriteSpecialIsHandled_1 ||
	     WILL_FIRE_RL_s_config_1_axiWriteSpecialIsHandled ;
  always@(rdMaster_in_rv)
  begin
    case (rdMaster_in_rv[14:11])
      4'd0, 4'd1, 4'd2, 4'd3, 4'd10, 4'd14, 4'd15:
	  rdMaster_warcache$wget = rdMaster_in_rv[14:11];
      default: rdMaster_warcache$wget = 4'd11;
    endcase
  end
  always@(wrMaster_in_addr_rv)
  begin
    case (wrMaster_in_addr_rv[14:11])
      4'd0, 4'd1, 4'd2, 4'd3, 4'd6, 4'd7, 4'd14:
	  wrMaster_wawcache$wget = wrMaster_in_addr_rv[14:11];
      default: wrMaster_wawcache$wget = 4'd15;
    endcase
  end
  assign rdMaster_batch_master_rd_in_wDataIn$wget =
	     { rdMaster_batch_read_rq_out$D_OUT[93:15],
	       CASE_rdMaster_batch_read_rq_outD_OUT_BITS_14__ETC__q5,
	       rdMaster_batch_read_rq_out$D_OUT[10:0] } ;
  assign rdMaster_batch_master_rd_in_wDataOut$wget =
	     (rdMaster_batch_master_rd_in_rCache[97] &&
	      rdMaster_batch_master_rd_in_rCache[96:94] ==
	      rdMaster_batch_master_rd_in_rRdPtr) ?
	       { rdMaster_batch_master_rd_in_rCache[93:15],
		 CASE_rdMaster_batch_master_rd_in_rCache_BITS_1_ETC__q7,
		 rdMaster_batch_master_rd_in_rCache[10:0] } :
	       { rdMaster_batch_master_rd_in_memory$DOB[93:15],
		 CASE_rdMaster_batch_master_rd_in_memoryDOB_BI_ETC__q8,
		 rdMaster_batch_master_rd_in_memory$DOB[10:0] } ;
  assign rdMaster_batch_master_rd_out_1_wDataIn$wget =
	     { M_AXI_BATCH_rid,
	       M_AXI_BATCH_rdata,
	       M_AXI_BATCH_rresp,
	       M_AXI_BATCH_rlast } ;
  assign rdMaster_batch_master_rd_out_1_wDataOut$wget =
	     (rdMaster_batch_master_rd_out_1_rCache[519] &&
	      rdMaster_batch_master_rd_out_1_rCache[518:516] ==
	      rdMaster_batch_master_rd_out_1_rRdPtr) ?
	       rdMaster_batch_master_rd_out_1_rCache[515:0] :
	       rdMaster_batch_master_rd_out_1_memory$DOB ;
  always@(rdMaster_batch_master_rd_in_wDataOut$wget)
  begin
    case (rdMaster_batch_master_rd_in_wDataOut$wget[14:11])
      4'd0, 4'd1, 4'd2, 4'd3, 4'd10, 4'd14, 4'd15:
	  rdMaster_batch_master_rd_warcache$wget =
	      rdMaster_batch_master_rd_in_wDataOut$wget[14:11];
      default: rdMaster_batch_master_rd_warcache$wget = 4'd11;
    endcase
  end
  assign rdMaster_batch_outgoingBuffer_wDataOut$wget =
	     (rdMaster_batch_outgoingBuffer_rCache[521] &&
	      rdMaster_batch_outgoingBuffer_rCache[520:512] ==
	      rdMaster_batch_outgoingBuffer_rRdPtr) ?
	       rdMaster_batch_outgoingBuffer_rCache[511:0] :
	       rdMaster_batch_outgoingBuffer_memory$DOB ;
  assign wrMaster_batch_master_wr_in_addr_wDataIn$wget =
	     { wrMaster_batch_write_rq_out$D_OUT[93:15],
	       CASE_wrMaster_batch_write_rq_outD_OUT_BITS_14_ETC__q10,
	       wrMaster_batch_write_rq_out$D_OUT[10:0] } ;
  assign wrMaster_batch_master_wr_in_addr_wDataOut$wget =
	     (wrMaster_batch_master_wr_in_addr_rCache[97] &&
	      wrMaster_batch_master_wr_in_addr_rCache[96:94] ==
	      wrMaster_batch_master_wr_in_addr_rRdPtr) ?
	       { wrMaster_batch_master_wr_in_addr_rCache[93:15],
		 CASE_wrMaster_batch_master_wr_in_addr_rCache_B_ETC__q12,
		 wrMaster_batch_master_wr_in_addr_rCache[10:0] } :
	       { wrMaster_batch_master_wr_in_addr_memory$DOB[93:15],
		 CASE_wrMaster_batch_master_wr_in_addr_memoryD_ETC__q13,
		 wrMaster_batch_master_wr_in_addr_memory$DOB[10:0] } ;
  assign wrMaster_batch_master_wr_in_data_wDataIn$wget =
	     { d__h46308,
	       x_strb__h46526,
	       wrMaster_batch_beatsThisRequestCntr_343_EQ_wrM_ETC___d1345 } ;
  assign wrMaster_batch_master_wr_in_data_wDataOut$wget =
	     (wrMaster_batch_master_wr_in_data_rCache[580] &&
	      wrMaster_batch_master_wr_in_data_rCache[579:577] ==
	      wrMaster_batch_master_wr_in_data_rRdPtr) ?
	       wrMaster_batch_master_wr_in_data_rCache[576:0] :
	       wrMaster_batch_master_wr_in_data_memory$DOB ;
  assign wrMaster_batch_master_wr_out_wDataIn$wget =
	     { M_AXI_BATCH_bid, M_AXI_BATCH_bresp } ;
  always@(wrMaster_batch_master_wr_in_addr_wDataOut$wget)
  begin
    case (wrMaster_batch_master_wr_in_addr_wDataOut$wget[14:11])
      4'd0, 4'd1, 4'd2, 4'd3, 4'd6, 4'd7, 4'd14:
	  wrMaster_batch_master_wr_wawcache$wget =
	      wrMaster_batch_master_wr_in_addr_wDataOut$wget[14:11];
      default: wrMaster_batch_master_wr_wawcache$wget = 4'd15;
    endcase
  end
  assign rdMaster_batch_master_rd_in_pwDequeue$whas =
	     NOT_rdMaster_batch_master_rd_in_rRdPtr_read__4_ETC___d733 &&
	     !rdMaster_batch_master_rd_isRst_isInReset &&
	     M_AXI_BATCH_arready ;
  assign rdMaster_batch_master_rd_in_pwEnqueue$whas =
	     WILL_FIRE_RL_rdMaster_batch_placeAXI &&
	     NOT_rdMaster_batch_outstanding_beats_port0__re_ETC___d819 ;
  assign rdMaster_batch_master_rd_out_1_pwEnqueue$whas =
	     NOT_rdMaster_batch_master_rd_out_1_rRdPtr_read_ETC___d767 &&
	     !rdMaster_batch_master_rd_isRst_isInReset &&
	     M_AXI_BATCH_rvalid ;
  assign rdMaster_batch_outgoingBuffer_pwDequeue$whas =
	     rdMaster_batch_outgoingBuffer_rRdPtr !=
	     rdMaster_batch_outgoingBuffer_rWrPtr &&
	     rdMaster_batch_relaxationBuffer$FULL_N ;
  assign wrMaster_batch_master_wr_in_addr_pwDequeue$whas =
	     NOT_wrMaster_batch_master_wr_in_addr_rRdPtr_re_ETC___d1169 &&
	     !wrMaster_batch_master_wr_isRst_isInReset &&
	     M_AXI_BATCH_awready ;
  assign wrMaster_batch_master_wr_in_addr_pwEnqueue$whas =
	     WILL_FIRE_RL_wrMaster_batch_placeAXI &&
	     NOT_wrMaster_batch_outstanding_beats_port0__re_ETC___d1296 ;
  assign wrMaster_batch_master_wr_in_data_pwDequeue$whas =
	     NOT_wrMaster_batch_master_wr_in_data_rRdPtr_re_ETC___d1202 &&
	     !wrMaster_batch_master_wr_isRst_isInReset &&
	     M_AXI_BATCH_wready ;
  assign wrMaster_batch_master_wr_out_pwDequeue$whas =
	     wrMaster_batch_master_wr_out_rRdPtr !=
	     wrMaster_batch_master_wr_out_rWrPtr ;
  assign wrMaster_batch_master_wr_out_pwEnqueue$whas =
	     NOT_wrMaster_batch_master_wr_out_rRdPtr_read___ETC___d1214 &&
	     !wrMaster_batch_master_wr_isRst_isInReset &&
	     M_AXI_BATCH_bvalid ;
  assign wrMaster_batch_incomingBuffer_pwEnqueue$whas =
	     wrMaster_batch_incomingBuffer_rRdPtr + 9'd128 !=
	     wrMaster_batch_incomingBuffer_rWrPtr &&
	     wrMaster_batch_relaxationBuffer$EMPTY_N ;
  assign rdMaster_rinpkg$wget =
	     { M_AXI_rid, M_AXI_rdata, M_AXI_rresp, M_AXI_rlast } ;
  assign wrMaster_rinpkg$wget = { M_AXI_bid, M_AXI_bresp } ;
  assign s_config_readSlave_in_rv$EN_port0__write =
	     WILL_FIRE_RL_s_config_axiReadFallback ||
	     WILL_FIRE_RL_s_config_axiReadSpecial_6 ||
	     WILL_FIRE_RL_s_config_axiReadSpecial_5 ||
	     WILL_FIRE_RL_s_config_axiReadSpecial_4 ||
	     WILL_FIRE_RL_s_config_axiReadSpecial_3 ||
	     WILL_FIRE_RL_s_config_axiReadSpecial_2 ||
	     WILL_FIRE_RL_s_config_axiReadSpecial_1 ||
	     WILL_FIRE_RL_s_config_axiReadSpecial ;
  assign s_config_readSlave_in_rv$port1__read =
	     s_config_readSlave_in_rv$EN_port0__write ?
	       16'd10922 :
	       s_config_readSlave_in_rv ;
  assign s_config_readSlave_in_rv$EN_port1__write =
	     !s_config_readSlave_in_rv$port1__read[15] &&
	     !s_config_readSlave_isRst_isInReset &&
	     S_AXI_arvalid ;
  assign s_config_readSlave_in_rv$port1__write_1 =
	     { 1'd1, S_AXI_araddr, S_AXI_arprot } ;
  assign s_config_readSlave_in_rv$port2__read =
	     s_config_readSlave_in_rv$EN_port1__write ?
	       s_config_readSlave_in_rv$port1__write_1 :
	       s_config_readSlave_in_rv$port1__read ;
  assign s_config_readSlave_out_rv$EN_port0__write =
	     s_config_readSlave_out_rv[66] &&
	     !s_config_readSlave_isRst_isInReset &&
	     S_AXI_rready ;
  assign s_config_readSlave_out_rv$port1__read =
	     s_config_readSlave_out_rv$EN_port0__write ?
	       67'h2AAAAAAAAAAAAAAAA :
	       s_config_readSlave_out_rv ;
  assign s_config_readSlave_out_rv$EN_port1__write =
	     WILL_FIRE_RL_s_config_axiReadSpecial ||
	     WILL_FIRE_RL_s_config_axiReadSpecial_1 ||
	     WILL_FIRE_RL_s_config_axiReadSpecial_2 ||
	     WILL_FIRE_RL_s_config_axiReadSpecial_3 ||
	     WILL_FIRE_RL_s_config_axiReadSpecial_4 ||
	     WILL_FIRE_RL_s_config_axiReadSpecial_5 ||
	     WILL_FIRE_RL_s_config_axiReadSpecial_6 ||
	     WILL_FIRE_RL_s_config_axiReadFallback ;
  always@(WILL_FIRE_RL_s_config_axiReadSpecial or
	  MUX_s_config_readSlave_out_rv$port1__write_1__VAL_1 or
	  WILL_FIRE_RL_s_config_axiReadSpecial_1 or
	  MUX_s_config_readSlave_out_rv$port1__write_1__VAL_2 or
	  WILL_FIRE_RL_s_config_axiReadSpecial_2 or
	  MUX_s_config_readSlave_out_rv$port1__write_1__VAL_3 or
	  WILL_FIRE_RL_s_config_axiReadSpecial_3 or
	  MUX_s_config_readSlave_out_rv$port1__write_1__VAL_4 or
	  WILL_FIRE_RL_s_config_axiReadSpecial_4 or
	  MUX_s_config_readSlave_out_rv$port1__write_1__VAL_5 or
	  WILL_FIRE_RL_s_config_axiReadSpecial_5 or
	  MUX_s_config_readSlave_out_rv$port1__write_1__VAL_6 or
	  WILL_FIRE_RL_s_config_axiReadSpecial_6 or
	  MUX_s_config_readSlave_out_rv$port1__write_1__VAL_7 or
	  WILL_FIRE_RL_s_config_axiReadFallback)
  begin
    case (1'b1) // synopsys parallel_case
      WILL_FIRE_RL_s_config_axiReadSpecial:
	  s_config_readSlave_out_rv$port1__write_1 =
	      MUX_s_config_readSlave_out_rv$port1__write_1__VAL_1;
      WILL_FIRE_RL_s_config_axiReadSpecial_1:
	  s_config_readSlave_out_rv$port1__write_1 =
	      MUX_s_config_readSlave_out_rv$port1__write_1__VAL_2;
      WILL_FIRE_RL_s_config_axiReadSpecial_2:
	  s_config_readSlave_out_rv$port1__write_1 =
	      MUX_s_config_readSlave_out_rv$port1__write_1__VAL_3;
      WILL_FIRE_RL_s_config_axiReadSpecial_3:
	  s_config_readSlave_out_rv$port1__write_1 =
	      MUX_s_config_readSlave_out_rv$port1__write_1__VAL_4;
      WILL_FIRE_RL_s_config_axiReadSpecial_4:
	  s_config_readSlave_out_rv$port1__write_1 =
	      MUX_s_config_readSlave_out_rv$port1__write_1__VAL_5;
      WILL_FIRE_RL_s_config_axiReadSpecial_5:
	  s_config_readSlave_out_rv$port1__write_1 =
	      MUX_s_config_readSlave_out_rv$port1__write_1__VAL_6;
      WILL_FIRE_RL_s_config_axiReadSpecial_6:
	  s_config_readSlave_out_rv$port1__write_1 =
	      MUX_s_config_readSlave_out_rv$port1__write_1__VAL_7;
      WILL_FIRE_RL_s_config_axiReadFallback:
	  s_config_readSlave_out_rv$port1__write_1 = 67'h40000000000000000;
      default: s_config_readSlave_out_rv$port1__write_1 =
		   67'h2AAAAAAAAAAAAAAAA /* unspecified value */ ;
    endcase
  end
  assign s_config_readSlave_out_rv$port2__read =
	     s_config_readSlave_out_rv$EN_port1__write ?
	       s_config_readSlave_out_rv$port1__write_1 :
	       s_config_readSlave_out_rv$port1__read ;
  assign s_config_writeSlave_in_rv$EN_port0__write =
	     WILL_FIRE_RL_s_config_1_axiWriteSpecial_6 ||
	     WILL_FIRE_RL_s_config_1_axiWriteSpecial_5 ||
	     WILL_FIRE_RL_s_config_1_axiWriteSpecial_4 ||
	     WILL_FIRE_RL_s_config_1_axiWriteSpecial_3 ||
	     WILL_FIRE_RL_s_config_1_axiWriteSpecial_2 ||
	     WILL_FIRE_RL_s_config_1_axiWriteSpecial_1 ||
	     WILL_FIRE_RL_s_config_1_axiWriteFallback ||
	     WILL_FIRE_RL_s_config_1_axiWriteSpecial ;
  assign s_config_writeSlave_in_rv$port1__read =
	     s_config_writeSlave_in_rv$EN_port0__write ?
	       88'h2AAAAAAAAAAAAAAAAAAAAA :
	       s_config_writeSlave_in_rv ;
  assign s_config_writeSlave_in_rv$EN_port1__write =
	     s_config_writeSlave_addrIn_rv$port1__read[15] &&
	     s_config_writeSlave_dataIn_rv$port1__read[72] &&
	     !s_config_writeSlave_in_rv$port1__read[87] ;
  assign s_config_writeSlave_in_rv$port1__write_1 =
	     { 1'd1,
	       s_config_writeSlave_addrIn_rv$port1__read[14:3],
	       s_config_writeSlave_dataIn_rv$port1__read[71:0],
	       s_config_writeSlave_addrIn_rv$port1__read[2:0] } ;
  assign s_config_writeSlave_in_rv$port2__read =
	     s_config_writeSlave_in_rv$EN_port1__write ?
	       s_config_writeSlave_in_rv$port1__write_1 :
	       s_config_writeSlave_in_rv$port1__read ;
  assign s_config_writeSlave_out_rv$EN_port0__write =
	     s_config_writeSlave_out_rv[2] &&
	     !s_config_writeSlave_isRst_isInReset &&
	     S_AXI_bready ;
  assign s_config_writeSlave_out_rv$port1__read =
	     s_config_writeSlave_out_rv$EN_port0__write ?
	       3'd2 :
	       s_config_writeSlave_out_rv ;
  assign s_config_writeSlave_out_rv$EN_port1__write =
	     WILL_FIRE_RL_s_config_1_axiWriteSpecial_6 ||
	     WILL_FIRE_RL_s_config_1_axiWriteSpecial_5 ||
	     WILL_FIRE_RL_s_config_1_axiWriteSpecial_4 ||
	     WILL_FIRE_RL_s_config_1_axiWriteSpecial_3 ||
	     WILL_FIRE_RL_s_config_1_axiWriteSpecial_2 ||
	     WILL_FIRE_RL_s_config_1_axiWriteSpecial_1 ||
	     WILL_FIRE_RL_s_config_1_axiWriteFallback ||
	     WILL_FIRE_RL_s_config_1_axiWriteSpecial ;
  assign s_config_writeSlave_out_rv$port2__read =
	     s_config_writeSlave_out_rv$EN_port1__write ?
	       3'd4 :
	       s_config_writeSlave_out_rv$port1__read ;
  assign s_config_writeSlave_addrIn_rv$EN_port0__write =
	     !s_config_writeSlave_addrIn_rv[15] &&
	     !s_config_writeSlave_isRst_isInReset &&
	     S_AXI_awvalid ;
  assign s_config_writeSlave_addrIn_rv$port0__write_1 =
	     { 1'd1, S_AXI_awaddr, S_AXI_awprot } ;
  assign s_config_writeSlave_addrIn_rv$port1__read =
	     s_config_writeSlave_addrIn_rv$EN_port0__write ?
	       s_config_writeSlave_addrIn_rv$port0__write_1 :
	       s_config_writeSlave_addrIn_rv ;
  assign s_config_writeSlave_addrIn_rv$EN_port1__write =
	     s_config_writeSlave_addrIn_rv$port1__read[15] &&
	     s_config_writeSlave_dataIn_rv$port1__read[72] &&
	     !s_config_writeSlave_in_rv$port1__read[87] ;
  assign s_config_writeSlave_addrIn_rv$port2__read =
	     s_config_writeSlave_addrIn_rv$EN_port1__write ?
	       16'd10922 :
	       s_config_writeSlave_addrIn_rv$port1__read ;
  assign s_config_writeSlave_dataIn_rv$EN_port0__write =
	     !s_config_writeSlave_dataIn_rv[72] &&
	     !s_config_writeSlave_isRst_isInReset &&
	     S_AXI_wvalid ;
  assign s_config_writeSlave_dataIn_rv$port0__write_1 =
	     { 1'd1, S_AXI_wdata, S_AXI_wstrb } ;
  assign s_config_writeSlave_dataIn_rv$port1__read =
	     s_config_writeSlave_dataIn_rv$EN_port0__write ?
	       s_config_writeSlave_dataIn_rv$port0__write_1 :
	       s_config_writeSlave_dataIn_rv ;
  assign s_config_writeSlave_dataIn_rv$EN_port1__write =
	     s_config_writeSlave_addrIn_rv$port1__read[15] &&
	     s_config_writeSlave_dataIn_rv$port1__read[72] &&
	     !s_config_writeSlave_in_rv$port1__read[87] ;
  assign s_config_writeSlave_dataIn_rv$port2__read =
	     s_config_writeSlave_dataIn_rv$EN_port1__write ?
	       73'h0AAAAAAAAAAAAAAAAAA :
	       s_config_writeSlave_dataIn_rv$port1__read ;
  assign rdMaster_in_rv$EN_port0__write =
	     rdMaster_in_rv[94] && !rdMaster_isRst_isInReset &&
	     M_AXI_arready ;
  assign rdMaster_in_rv$port1__read =
	     rdMaster_in_rv$EN_port0__write ?
	       95'h2AAAAAAAAAAAAAAAAAAAAAAA :
	       rdMaster_in_rv ;
  assign rdMaster_in_rv$EN_port1__write =
	     WILL_FIRE_RL_startReadRandom || WILL_FIRE_RL_startLatency ||
	     WILL_FIRE_RL_startReadCheck ;
  always@(WILL_FIRE_RL_startReadRandom or
	  MUX_rdMaster_in_rv$port1__write_1__VAL_1 or
	  WILL_FIRE_RL_startLatency or
	  MUX_rdMaster_in_rv$port1__write_1__VAL_2 or
	  WILL_FIRE_RL_startReadCheck)
  begin
    case (1'b1) // synopsys parallel_case
      WILL_FIRE_RL_startReadRandom:
	  rdMaster_in_rv$port1__write_1 =
	      MUX_rdMaster_in_rv$port1__write_1__VAL_1;
      WILL_FIRE_RL_startLatency:
	  rdMaster_in_rv$port1__write_1 =
	      MUX_rdMaster_in_rv$port1__write_1__VAL_2;
      WILL_FIRE_RL_startReadCheck:
	  rdMaster_in_rv$port1__write_1 = 95'h400000000000000000191800;
      default: rdMaster_in_rv$port1__write_1 =
		   95'h2AAAAAAAAAAAAAAAAAAAAAAA /* unspecified value */ ;
    endcase
  end
  assign rdMaster_in_rv$port2__read =
	     rdMaster_in_rv$EN_port1__write ?
	       rdMaster_in_rv$port1__write_1 :
	       rdMaster_in_rv$port1__read ;
  assign rdMaster_out_1_rv$EN_port0__write =
	     WILL_FIRE_RL_recvReadResponseCheck ||
	     WILL_FIRE_RL_dropReadResponseLatency ||
	     WILL_FIRE_RL_dropReadResponseRandom ;
  assign rdMaster_out_1_rv$port1__read =
	     rdMaster_out_1_rv$EN_port0__write ?
	       517'h0AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA :
	       rdMaster_out_1_rv ;
  assign rdMaster_out_1_rv$EN_port1__write =
	     !rdMaster_out_1_rv$port1__read[516] &&
	     !rdMaster_isRst_isInReset &&
	     M_AXI_rvalid ;
  assign rdMaster_out_1_rv$port1__write_1 = { 1'd1, rdMaster_rinpkg$wget } ;
  assign rdMaster_out_1_rv$port2__read =
	     rdMaster_out_1_rv$EN_port1__write ?
	       rdMaster_out_1_rv$port1__write_1 :
	       rdMaster_out_1_rv$port1__read ;
  assign wrMaster_in_addr_rv$EN_port0__write =
	     wrMaster_in_addr_rv[94] && !wrMaster_isRst_isInReset &&
	     M_AXI_awready ;
  assign wrMaster_in_addr_rv$port1__read =
	     wrMaster_in_addr_rv$EN_port0__write ?
	       95'h2AAAAAAAAAAAAAAAAAAAAAAA :
	       wrMaster_in_addr_rv ;
  assign wrMaster_in_addr_rv$EN_port1__write =
	     WILL_FIRE_RL_startWriteRandom || WILL_FIRE_RL_startWriteCheck ;
  assign wrMaster_in_addr_rv$port1__write_1 =
	     WILL_FIRE_RL_startWriteRandom ?
	       MUX_wrMaster_in_addr_rv$port1__write_1__VAL_1 :
	       95'h400000000000000000191800 ;
  assign wrMaster_in_addr_rv$port2__read =
	     wrMaster_in_addr_rv$EN_port1__write ?
	       wrMaster_in_addr_rv$port1__write_1 :
	       wrMaster_in_addr_rv$port1__read ;
  assign wrMaster_in_data_rv$EN_port0__write =
	     wrMaster_in_data_rv[577] && !wrMaster_isRst_isInReset &&
	     M_AXI_wready ;
  assign wrMaster_in_data_rv$port1__read =
	     wrMaster_in_data_rv$EN_port0__write ?
	       578'h0AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA :
	       wrMaster_in_data_rv ;
  assign wrMaster_in_data_rv$EN_port1__write =
	     WILL_FIRE_RL_putWriteDataRandom ||
	     !wrMaster_in_data_rv$port1__read[577] && operation == 3'd7 ;
  assign wrMaster_in_data_rv$port1__write_1 =
	     WILL_FIRE_RL_putWriteDataRandom ?
	       MUX_wrMaster_in_data_rv$port1__write_1__VAL_1 :
	       578'h3BD5F7DDFBD5B7DFFBD5B7DFFBD5F7DDFBD5B7DFFBD5B7DFFBD5F7DDFBD5B7DFFBD5B7DFFBD5F7DDFBD5B7DFFBD5B7DFFBD5F7DDFBD5B7DFFBD5B7DFFBD5F7DDFFFFFFFFFFFFFFFFF ;
  assign wrMaster_in_data_rv$port2__read =
	     wrMaster_in_data_rv$EN_port1__write ?
	       wrMaster_in_data_rv$port1__write_1 :
	       wrMaster_in_data_rv$port1__read ;
  assign wrMaster_out_rv$EN_port0__write =
	     WILL_FIRE_RL_dropWriteResponseCheck ||
	     WILL_FIRE_RL_dropWriteResponseRandom ;
  assign wrMaster_out_rv$port1__read =
	     wrMaster_out_rv$EN_port0__write ? 4'd2 : wrMaster_out_rv ;
  assign wrMaster_out_rv$EN_port1__write =
	     !wrMaster_out_rv$port1__read[3] && !wrMaster_isRst_isInReset &&
	     M_AXI_bvalid ;
  assign wrMaster_out_rv$port1__write_1 = { 1'd1, wrMaster_rinpkg$wget } ;
  assign wrMaster_out_rv$port2__read =
	     wrMaster_out_rv$EN_port1__write ?
	       wrMaster_out_rv$port1__write_1 :
	       wrMaster_out_rv$port1__read ;
  assign rdMaster_batch_outstanding_beats$EN_port0__write =
	     WILL_FIRE_RL_rdMaster_batch_placeAXI &&
	     NOT_rdMaster_batch_outstanding_beats_port0__re_ETC___d819 ;
  assign rdMaster_batch_outstanding_beats$port0__write_1 =
	     rdMaster_batch_outstanding_beats -
	     _0_CONCAT_rdMaster_batch_read_rq_out_first__14__ETC___d817 ;
  assign rdMaster_batch_outstanding_beats$EN_port1__write =
	     rdMaster_batch_outgoingBuffer_rRdPtr !=
	     rdMaster_batch_outgoingBuffer_rWrPtr &&
	     rdMaster_batch_relaxationBuffer$FULL_N ;
  assign rdMaster_batch_outstanding_beats$port1__write_1 = b__h36613 + 12'd1 ;
  assign rdMaster_batch_outstanding_beats$port2__read =
	     rdMaster_batch_outstanding_beats$EN_port1__write ?
	       rdMaster_batch_outstanding_beats$port1__write_1 :
	       b__h36613 ;
  assign wrMaster_batch_outstanding_beats$EN_port0__write =
	     WILL_FIRE_RL_wrMaster_batch_placeAXI &&
	     NOT_wrMaster_batch_outstanding_beats_port0__re_ETC___d1296 ;
  assign wrMaster_batch_outstanding_beats$port0__write_1 =
	     wrMaster_batch_outstanding_beats -
	     _0_CONCAT_wrMaster_batch_write_rq_out_first__29_ETC___d1294 ;
  assign wrMaster_batch_outstanding_beats$EN_port1__write =
	     wrMaster_batch_incomingBuffer_rRdPtr + 9'd128 !=
	     wrMaster_batch_incomingBuffer_rWrPtr &&
	     wrMaster_batch_relaxationBuffer$EMPTY_N ;
  assign wrMaster_batch_outstanding_beats$port1__write_1 = b__h57573 + 12'd1 ;
  assign wrMaster_batch_outstanding_beats$port2__read =
	     wrMaster_batch_outstanding_beats$EN_port1__write ?
	       wrMaster_batch_outstanding_beats$port1__write_1 :
	       b__h57573 ;
  assign wrMaster_batch_outstanding_writes$EN_port0__write =
	     wrMaster_batch_master_wr_out_rRdPtr !=
	     wrMaster_batch_master_wr_out_rWrPtr ;
  assign wrMaster_batch_outstanding_writes$port0__write_1 =
	     wrMaster_batch_outstanding_writes - 6'd1 ;
  assign wrMaster_batch_outstanding_writes$EN_port1__write =
	     WILL_FIRE_RL_wrMaster_batch_placeAXI &&
	     NOT_wrMaster_batch_outstanding_beats_port0__re_ETC___d1296 ;
  assign wrMaster_batch_outstanding_writes$port1__write_1 = b__h45943 + 6'd1 ;
  assign wrMaster_batch_outstanding_writes$port2__read =
	     wrMaster_batch_outstanding_writes$EN_port1__write ?
	       wrMaster_batch_outstanding_writes$port1__write_1 :
	       b__h45943 ;
  assign wrMaster_batch_outstanding_writes_out$EN_port0__write =
	     WILL_FIRE_RL_wrMaster_batch_forwardData &&
	     wrMaster_batch_beatsThisRequestCntr_343_EQ_wrM_ETC___d1345 ;
  assign wrMaster_batch_outstanding_writes_out$port0__write_1 =
	     wrMaster_batch_outstanding_writes_out - 6'd1 ;
  assign wrMaster_batch_outstanding_writes_out$EN_port1__write =
	     WILL_FIRE_RL_wrMaster_batch_placeAXI &&
	     NOT_wrMaster_batch_outstanding_beats_port0__re_ETC___d1296 ;
  assign wrMaster_batch_outstanding_writes_out$port1__write_1 =
	     b__h45974 + 6'd1 ;
  assign wrMaster_batch_outstanding_writes_out$port2__read =
	     wrMaster_batch_outstanding_writes_out$EN_port1__write ?
	       wrMaster_batch_outstanding_writes_out$port1__write_1 :
	       b__h45974 ;

  // register byteLength
  assign byteLength$D_IN =
	     { s_config_writeSlave_in_rv[10] ?
		 s_config_writeSlave_in_rv[74:67] :
		 byteLength[63:56],
	       s_config_writeSlave_in_rv[9] ?
		 s_config_writeSlave_in_rv[66:59] :
		 byteLength[55:48],
	       s_config_writeSlave_in_rv[8] ?
		 s_config_writeSlave_in_rv[58:51] :
		 byteLength[47:40],
	       s_config_writeSlave_in_rv[7] ?
		 s_config_writeSlave_in_rv[50:43] :
		 byteLength[39:32],
	       s_config_writeSlave_in_rv[6] ?
		 s_config_writeSlave_in_rv[42:35] :
		 byteLength[31:24],
	       s_config_writeSlave_in_rv[5] ?
		 s_config_writeSlave_in_rv[34:27] :
		 byteLength[23:16],
	       s_config_writeSlave_in_rv[4] ?
		 s_config_writeSlave_in_rv[26:19] :
		 byteLength[15:8],
	       s_config_writeSlave_in_rv[3] ?
		 s_config_writeSlave_in_rv[18:11] :
		 byteLength[7:0] } ;
  assign byteLength$EN = WILL_FIRE_RL_s_config_1_axiWriteSpecial_4 ;

  // register chunks_rd_completed
  assign chunks_rd_completed$D_IN =
	     WILL_FIRE_RL_startRandom ?
	       64'd0 :
	       MUX_chunks_rd_completed$write_1__VAL_2 ;
  assign chunks_rd_completed$EN =
	     WILL_FIRE_RL_dropReadResponseRandom && rdMaster_out_1_rv[0] ||
	     WILL_FIRE_RL_startRandom ;

  // register chunks_wr_completed
  assign chunks_wr_completed$D_IN =
	     WILL_FIRE_RL_startRandom ?
	       64'd0 :
	       MUX_chunks_wr_completed$write_1__VAL_2 ;
  assign chunks_wr_completed$EN =
	     WILL_FIRE_RL_dropWriteResponseRandom ||
	     WILL_FIRE_RL_startRandom ;

  // register chunks_wr_sent
  assign chunks_wr_sent$D_IN =
	     WILL_FIRE_RL_startRandom ?
	       64'd0 :
	       MUX_chunks_wr_sent$write_1__VAL_2 ;
  assign chunks_wr_sent$EN =
	     WILL_FIRE_RL_putWriteDataRandom && remainingBeats == 8'd0 ||
	     WILL_FIRE_RL_startRandom ;

  // register chunks_wr_started
  assign chunks_wr_started$D_IN =
	     WILL_FIRE_RL_startWriteRandom ?
	       MUX_chunks_wr_started$write_1__VAL_1 :
	       64'd0 ;
  assign chunks_wr_started$EN =
	     WILL_FIRE_RL_startWriteRandom || WILL_FIRE_RL_startRandom ;

  // register cycleCount
  assign cycleCount$D_IN =
	     (WILL_FIRE_RL_startLatency || WILL_FIRE_RL_startReadWriteBatch ||
	      WILL_FIRE_RL_startReadBatch ||
	      WILL_FIRE_RL_startWriteBatch ||
	      WILL_FIRE_RL_startRandom) ?
	       64'd0 :
	       MUX_cycleCount$write_1__VAL_6 ;
  assign cycleCount$EN = 1'b1 ;

  // register cycles
  assign cycles$D_IN =
	     { s_config_writeSlave_in_rv[10] ?
		 s_config_writeSlave_in_rv[74:67] :
		 cycles[63:56],
	       s_config_writeSlave_in_rv[9] ?
		 s_config_writeSlave_in_rv[66:59] :
		 cycles[55:48],
	       s_config_writeSlave_in_rv[8] ?
		 s_config_writeSlave_in_rv[58:51] :
		 cycles[47:40],
	       s_config_writeSlave_in_rv[7] ?
		 s_config_writeSlave_in_rv[50:43] :
		 cycles[39:32],
	       s_config_writeSlave_in_rv[6] ?
		 s_config_writeSlave_in_rv[42:35] :
		 cycles[31:24],
	       s_config_writeSlave_in_rv[5] ?
		 s_config_writeSlave_in_rv[34:27] :
		 cycles[23:16],
	       s_config_writeSlave_in_rv[4] ?
		 s_config_writeSlave_in_rv[26:19] :
		 cycles[15:8],
	       s_config_writeSlave_in_rv[3] ?
		 s_config_writeSlave_in_rv[18:11] :
		 cycles[7:0] } ;
  assign cycles$EN = WILL_FIRE_RL_s_config_1_axiWriteSpecial_3 ;

  // register error
  always@(WILL_FIRE_RL_startRandom or
	  MUX_error$write_1__SEL_2 or
	  MUX_error$write_1__SEL_3 or
	  WILL_FIRE_RL_startWriteCheck or MUX_error$write_1__SEL_5)
  case (1'b1)
    WILL_FIRE_RL_startRandom: error$D_IN = 1'd0;
    MUX_error$write_1__SEL_2 || MUX_error$write_1__SEL_3: error$D_IN = 1'd1;
    WILL_FIRE_RL_startWriteCheck: error$D_IN = 1'd0;
    MUX_error$write_1__SEL_5: error$D_IN = 1'd1;
    default: error$D_IN = 1'b0 /* unspecified value */ ;
  endcase
  assign error$EN =
	     WILL_FIRE_RL_dropReadResponseRandom &&
	     (rdMaster_out_1_rv[2:1] == 2'd2 ||
	      rdMaster_out_1_rv[2:1] == 2'd3) ||
	     (WILL_FIRE_RL_dropWriteResponseCheck ||
	      WILL_FIRE_RL_dropWriteResponseRandom) &&
	     (wrMaster_out_rv[1:0] == 2'd2 || wrMaster_out_rv[1:0] == 2'd3) ||
	     WILL_FIRE_RL_startWriteCheck ||
	     WILL_FIRE_RL_startRandom ;

  // register first
  assign first$D_IN = !MUX_first$write_1__SEL_1 ;
  assign first$EN =
	     WILL_FIRE_RL_dropReadResponseLatency && first ||
	     WILL_FIRE_RL_startLatency ;

  // register idle
  assign idle$D_IN = !MUX_idle$write_1__SEL_4 ;
  assign idle$EN =
	     WILL_FIRE_RL_dropReadResponseLatency && rdMaster_out_1_rv[0] ||
	     WILL_FIRE_RL_checkActivityRandom &&
	     NOT_cycleCount_91_ULT_cycles_8_92___d493 ||
	     WILL_FIRE_RL_checkActivityBatch &&
	     IF_operation_1_EQ_1_677_THEN_wrMaster_batch_ta_ETC___d1710 &&
	     lastCycle ||
	     WILL_FIRE_RL_startWriteCheck ||
	     WILL_FIRE_RL_startLatency ||
	     WILL_FIRE_RL_startReadWriteBatch ||
	     WILL_FIRE_RL_startReadBatch ||
	     WILL_FIRE_RL_startWriteBatch ||
	     WILL_FIRE_RL_startRandom ||
	     WILL_FIRE_RL_recvReadResponseCheck ;

  // register interruptR
  assign interruptR$D_IN = interruptR_1$whas ;
  assign interruptR$EN = 1'd1 ;

  // register lastCycle
  assign lastCycle$D_IN =
	     WILL_FIRE_RL_checkActivityBatch && MUX_lastCycle$write_1__VAL_1 ;
  assign lastCycle$EN =
	     WILL_FIRE_RL_checkActivityBatch ||
	     WILL_FIRE_RL_startReadWriteBatch ||
	     WILL_FIRE_RL_startReadBatch ||
	     WILL_FIRE_RL_startWriteBatch ;

  // register latency
  assign latency$D_IN = cycleCount ;
  assign latency$EN = MUX_first$write_1__SEL_1 ;

  // register operation
  assign operation$D_IN =
	     IF_s_config_writeSlave_in_rv_BIT_3_THEN_s_conf_ETC__q15[2:0] ;
  assign operation$EN = WILL_FIRE_RL_s_config_1_axiWriteSpecial_2 ;

  // register rand_rd_r
  assign rand_rd_r$D_IN =
	     WILL_FIRE_RL_startRandom ?
	       seed_rd[31:0] :
	       MUX_rand_rd_r$write_1__VAL_2 ;
  assign rand_rd_r$EN =
	     WILL_FIRE_RL_startRandom || WILL_FIRE_RL_startReadRandom ;

  // register rand_wr_r
  assign rand_wr_r$D_IN =
	     WILL_FIRE_RL_startRandom ?
	       seed_wr[31:0] :
	       MUX_rand_wr_r$write_1__VAL_2 ;
  assign rand_wr_r$EN =
	     WILL_FIRE_RL_startRandom || WILL_FIRE_RL_startWriteRandom ;

  // register rdMaster_batch_master_rd_in_rCache
  assign rdMaster_batch_master_rd_in_rCache$D_IN =
	     { 1'd1,
	       rdMaster_batch_master_rd_in_rWrPtr,
	       rdMaster_batch_master_rd_in_wDataIn_whas__02_A_ETC___d638 } ;
  assign rdMaster_batch_master_rd_in_rCache$EN =
	     rdMaster_batch_master_rd_in_pwEnqueue$whas ;

  // register rdMaster_batch_master_rd_in_rRdPtr
  assign rdMaster_batch_master_rd_in_rRdPtr$D_IN = x__h31307 ;
  assign rdMaster_batch_master_rd_in_rRdPtr$EN =
	     rdMaster_batch_master_rd_in_pwDequeue$whas ;

  // register rdMaster_batch_master_rd_in_rWrPtr
  assign rdMaster_batch_master_rd_in_rWrPtr$D_IN = x__h31130 ;
  assign rdMaster_batch_master_rd_in_rWrPtr$EN =
	     rdMaster_batch_master_rd_in_pwEnqueue$whas ;

  // register rdMaster_batch_master_rd_isRst_isInReset
  assign rdMaster_batch_master_rd_isRst_isInReset$D_IN = 1'd0 ;
  assign rdMaster_batch_master_rd_isRst_isInReset$EN =
	     rdMaster_batch_master_rd_isRst_isInReset ;

  // register rdMaster_batch_master_rd_out_1_rCache
  assign rdMaster_batch_master_rd_out_1_rCache$D_IN =
	     { 1'd1,
	       rdMaster_batch_master_rd_out_1_rWrPtr,
	       rdMaster_batch_master_rd_out_1_wDataIn_whas__0_ETC___d712 } ;
  assign rdMaster_batch_master_rd_out_1_rCache$EN =
	     rdMaster_batch_master_rd_out_1_pwEnqueue$whas ;

  // register rdMaster_batch_master_rd_out_1_rRdPtr
  assign rdMaster_batch_master_rd_out_1_rRdPtr$D_IN = x__h32705 ;
  assign rdMaster_batch_master_rd_out_1_rRdPtr$EN =
	     WILL_FIRE_RL_rdMaster_batch_forwardData ;

  // register rdMaster_batch_master_rd_out_1_rWrPtr
  assign rdMaster_batch_master_rd_out_1_rWrPtr$D_IN = x__h32578 ;
  assign rdMaster_batch_master_rd_out_1_rWrPtr$EN =
	     rdMaster_batch_master_rd_out_1_pwEnqueue$whas ;

  // register rdMaster_batch_outgoingBuffer_rCache
  assign rdMaster_batch_outgoingBuffer_rCache$D_IN =
	     { 1'd1, rdMaster_batch_outgoingBuffer_rWrPtr, x3__h35843 } ;
  assign rdMaster_batch_outgoingBuffer_rCache$EN =
	     WILL_FIRE_RL_rdMaster_batch_forwardData ;

  // register rdMaster_batch_outgoingBuffer_rRdPtr
  assign rdMaster_batch_outgoingBuffer_rRdPtr$D_IN = x__h36015 ;
  assign rdMaster_batch_outgoingBuffer_rRdPtr$EN =
	     rdMaster_batch_outgoingBuffer_pwDequeue$whas ;

  // register rdMaster_batch_outgoingBuffer_rWrPtr
  assign rdMaster_batch_outgoingBuffer_rWrPtr$D_IN = x__h35920 ;
  assign rdMaster_batch_outgoingBuffer_rWrPtr$EN =
	     WILL_FIRE_RL_rdMaster_batch_forwardData ;

  // register rdMaster_batch_outstanding_beats
  assign rdMaster_batch_outstanding_beats$D_IN =
	     rdMaster_batch_outstanding_beats$port2__read ;
  assign rdMaster_batch_outstanding_beats$EN = 1'b1 ;

  // register rdMaster_batch_task_data_output_reg
  assign rdMaster_batch_task_data_output_reg$D_IN =
	     WILL_FIRE_RL_rdMaster_batch_forwardData ?
	       MUX_rdMaster_batch_task_data_output_reg$write_1__VAL_1 :
	       rdMaster_batch_reqGen_outgoingBuffer$D_OUT[44:0] ;
  assign rdMaster_batch_task_data_output_reg$EN =
	     WILL_FIRE_RL_rdMaster_batch_forwardData ||
	     WILL_FIRE_RL_rdMaster_batch_fillBuffer ;

  // register rdMaster_batch_task_data_requests_reg
  assign rdMaster_batch_task_data_requests_reg$D_IN =
	     WILL_FIRE_RL_rdMaster_batch_placeRequest ?
	       MUX_rdMaster_batch_task_data_requests_reg$write_1__VAL_1 :
	       rdMaster_batch_reqGen_outgoingBuffer$D_OUT[157:45] ;
  assign rdMaster_batch_task_data_requests_reg$EN =
	     WILL_FIRE_RL_rdMaster_batch_placeRequest ||
	     WILL_FIRE_RL_rdMaster_batch_fillBuffer ;

  // register rdMaster_in_rv
  assign rdMaster_in_rv$D_IN = rdMaster_in_rv$port2__read ;
  assign rdMaster_in_rv$EN = 1'b1 ;

  // register rdMaster_isRst_isInReset
  assign rdMaster_isRst_isInReset$D_IN = 1'd0 ;
  assign rdMaster_isRst_isInReset$EN = rdMaster_isRst_isInReset ;

  // register rdMaster_out_1_rv
  assign rdMaster_out_1_rv$D_IN = rdMaster_out_1_rv$port2__read ;
  assign rdMaster_out_1_rv$EN = 1'b1 ;

  // register remainingBeats
  assign remainingBeats$D_IN =
	     WILL_FIRE_RL_startRandom ?
	       byteLength_BITS_60_TO_0_CONCAT_0_MINUS_1__q1[16:9] :
	       MUX_remainingBeats$write_1__VAL_2 ;
  assign remainingBeats$EN =
	     WILL_FIRE_RL_startRandom || WILL_FIRE_RL_putWriteDataRandom ;

  // register s_config_readBusy
  assign s_config_readBusy$D_IN = 1'b0 ;
  assign s_config_readBusy$EN = 1'b0 ;

  // register s_config_readSlave_in_rv
  assign s_config_readSlave_in_rv$D_IN =
	     s_config_readSlave_in_rv$port2__read ;
  assign s_config_readSlave_in_rv$EN = 1'b1 ;

  // register s_config_readSlave_isRst_isInReset
  assign s_config_readSlave_isRst_isInReset$D_IN = 1'd0 ;
  assign s_config_readSlave_isRst_isInReset$EN =
	     s_config_readSlave_isRst_isInReset ;

  // register s_config_readSlave_out_rv
  assign s_config_readSlave_out_rv$D_IN =
	     s_config_readSlave_out_rv$port2__read ;
  assign s_config_readSlave_out_rv$EN = 1'b1 ;

  // register s_config_writeBusy
  assign s_config_writeBusy$D_IN = 1'b0 ;
  assign s_config_writeBusy$EN = 1'b0 ;

  // register s_config_writeSlave_addrIn_rv
  assign s_config_writeSlave_addrIn_rv$D_IN =
	     s_config_writeSlave_addrIn_rv$port2__read ;
  assign s_config_writeSlave_addrIn_rv$EN = 1'b1 ;

  // register s_config_writeSlave_dataIn_rv
  assign s_config_writeSlave_dataIn_rv$D_IN =
	     s_config_writeSlave_dataIn_rv$port2__read ;
  assign s_config_writeSlave_dataIn_rv$EN = 1'b1 ;

  // register s_config_writeSlave_in_rv
  assign s_config_writeSlave_in_rv$D_IN =
	     s_config_writeSlave_in_rv$port2__read ;
  assign s_config_writeSlave_in_rv$EN = 1'b1 ;

  // register s_config_writeSlave_isRst_isInReset
  assign s_config_writeSlave_isRst_isInReset$D_IN = 1'd0 ;
  assign s_config_writeSlave_isRst_isInReset$EN =
	     s_config_writeSlave_isRst_isInReset ;

  // register s_config_writeSlave_out_rv
  assign s_config_writeSlave_out_rv$D_IN =
	     s_config_writeSlave_out_rv$port2__read ;
  assign s_config_writeSlave_out_rv$EN = 1'b1 ;

  // register seed_rd
  assign seed_rd$D_IN =
	     { s_config_writeSlave_in_rv[10] ?
		 s_config_writeSlave_in_rv[74:67] :
		 seed_rd[63:56],
	       s_config_writeSlave_in_rv[9] ?
		 s_config_writeSlave_in_rv[66:59] :
		 seed_rd[55:48],
	       s_config_writeSlave_in_rv[8] ?
		 s_config_writeSlave_in_rv[58:51] :
		 seed_rd[47:40],
	       s_config_writeSlave_in_rv[7] ?
		 s_config_writeSlave_in_rv[50:43] :
		 seed_rd[39:32],
	       s_config_writeSlave_in_rv[6] ?
		 s_config_writeSlave_in_rv[42:35] :
		 seed_rd[31:24],
	       s_config_writeSlave_in_rv[5] ?
		 s_config_writeSlave_in_rv[34:27] :
		 seed_rd[23:16],
	       s_config_writeSlave_in_rv[4] ?
		 s_config_writeSlave_in_rv[26:19] :
		 seed_rd[15:8],
	       s_config_writeSlave_in_rv[3] ?
		 s_config_writeSlave_in_rv[18:11] :
		 seed_rd[7:0] } ;
  assign seed_rd$EN = WILL_FIRE_RL_s_config_1_axiWriteSpecial_6 ;

  // register seed_wr
  assign seed_wr$D_IN =
	     { s_config_writeSlave_in_rv[10] ?
		 s_config_writeSlave_in_rv[74:67] :
		 seed_wr[63:56],
	       s_config_writeSlave_in_rv[9] ?
		 s_config_writeSlave_in_rv[66:59] :
		 seed_wr[55:48],
	       s_config_writeSlave_in_rv[8] ?
		 s_config_writeSlave_in_rv[58:51] :
		 seed_wr[47:40],
	       s_config_writeSlave_in_rv[7] ?
		 s_config_writeSlave_in_rv[50:43] :
		 seed_wr[39:32],
	       s_config_writeSlave_in_rv[6] ?
		 s_config_writeSlave_in_rv[42:35] :
		 seed_wr[31:24],
	       s_config_writeSlave_in_rv[5] ?
		 s_config_writeSlave_in_rv[34:27] :
		 seed_wr[23:16],
	       s_config_writeSlave_in_rv[4] ?
		 s_config_writeSlave_in_rv[26:19] :
		 seed_wr[15:8],
	       s_config_writeSlave_in_rv[3] ?
		 s_config_writeSlave_in_rv[18:11] :
		 seed_wr[7:0] } ;
  assign seed_wr$EN = WILL_FIRE_RL_s_config_1_axiWriteSpecial_5 ;

  // register start
  assign start$D_IN =
	     WILL_FIRE_RL_s_config_1_axiWriteSpecial &&
	     IF_s_config_writeSlave_in_rv_BIT_3_THEN_s_conf_ETC__q2[0] ;
  assign start$EN =
	     WILL_FIRE_RL_s_config_1_axiWriteSpecial ||
	     WILL_FIRE_RL_startWriteCheck ||
	     WILL_FIRE_RL_startLatency ||
	     WILL_FIRE_RL_startReadWriteBatch ||
	     WILL_FIRE_RL_startReadBatch ||
	     WILL_FIRE_RL_startWriteBatch ||
	     WILL_FIRE_RL_startRandom ;

  // register status
  always@(MUX_idle$write_1__SEL_2 or
	  MUX_status$write_1__VAL_1 or
	  WILL_FIRE_RL_recvReadResponseCheck or
	  MUX_status$write_1__VAL_2 or
	  MUX_idle$write_1__SEL_1 or
	  latency or
	  MUX_idle$write_1__SEL_3 or
	  cycleCount or
	  WILL_FIRE_RL_s_config_1_axiWriteSpecial_1 or
	  MUX_status$write_1__VAL_5)
  case (1'b1)
    MUX_idle$write_1__SEL_2: status$D_IN = MUX_status$write_1__VAL_1;
    WILL_FIRE_RL_recvReadResponseCheck:
	status$D_IN = MUX_status$write_1__VAL_2;
    MUX_idle$write_1__SEL_1: status$D_IN = latency;
    MUX_idle$write_1__SEL_3: status$D_IN = cycleCount;
    WILL_FIRE_RL_s_config_1_axiWriteSpecial_1:
	status$D_IN = MUX_status$write_1__VAL_5;
    default: status$D_IN = 64'hAAAAAAAAAAAAAAAA /* unspecified value */ ;
  endcase
  assign status$EN =
	     WILL_FIRE_RL_dropReadResponseLatency && rdMaster_out_1_rv[0] ||
	     WILL_FIRE_RL_checkActivityRandom &&
	     NOT_cycleCount_91_ULT_cycles_8_92___d493 ||
	     WILL_FIRE_RL_checkActivityBatch &&
	     IF_operation_1_EQ_1_677_THEN_wrMaster_batch_ta_ETC___d1710 &&
	     lastCycle ||
	     WILL_FIRE_RL_s_config_1_axiWriteSpecial_1 ||
	     WILL_FIRE_RL_recvReadResponseCheck ;

  // register wrMaster_batch_beatsThisRequestCntr
  assign wrMaster_batch_beatsThisRequestCntr$D_IN =
	     WILL_FIRE_RL_wrMaster_batch_forwardData ?
	       MUX_wrMaster_batch_beatsThisRequestCntr$write_1__VAL_1 :
	       8'd0 ;
  assign wrMaster_batch_beatsThisRequestCntr$EN =
	     WILL_FIRE_RL_wrMaster_batch_forwardData ||
	     WILL_FIRE_RL_wrMaster_batch_fillBuffer ;

  // register wrMaster_batch_incomingBuffer_rCache
  assign wrMaster_batch_incomingBuffer_rCache$D_IN =
	     { 1'd1, wrMaster_batch_incomingBuffer_rWrPtr, x3__h44518 } ;
  assign wrMaster_batch_incomingBuffer_rCache$EN =
	     wrMaster_batch_incomingBuffer_pwEnqueue$whas ;

  // register wrMaster_batch_incomingBuffer_rRdPtr
  assign wrMaster_batch_incomingBuffer_rRdPtr$D_IN = x__h44690 ;
  assign wrMaster_batch_incomingBuffer_rRdPtr$EN =
	     WILL_FIRE_RL_wrMaster_batch_forwardData ;

  // register wrMaster_batch_incomingBuffer_rWrPtr
  assign wrMaster_batch_incomingBuffer_rWrPtr$D_IN = x__h44595 ;
  assign wrMaster_batch_incomingBuffer_rWrPtr$EN =
	     wrMaster_batch_incomingBuffer_pwEnqueue$whas ;

  // register wrMaster_batch_master_wr_in_addr_rCache
  assign wrMaster_batch_master_wr_in_addr_rCache$D_IN =
	     { 1'd1,
	       wrMaster_batch_master_wr_in_addr_rWrPtr,
	       wrMaster_batch_master_wr_in_addr_wDataIn_whas__ETC___d1043 } ;
  assign wrMaster_batch_master_wr_in_addr_rCache$EN =
	     wrMaster_batch_master_wr_in_addr_pwEnqueue$whas ;

  // register wrMaster_batch_master_wr_in_addr_rRdPtr
  assign wrMaster_batch_master_wr_in_addr_rRdPtr$D_IN = x__h39393 ;
  assign wrMaster_batch_master_wr_in_addr_rRdPtr$EN =
	     wrMaster_batch_master_wr_in_addr_pwDequeue$whas ;

  // register wrMaster_batch_master_wr_in_addr_rWrPtr
  assign wrMaster_batch_master_wr_in_addr_rWrPtr$D_IN = x__h39216 ;
  assign wrMaster_batch_master_wr_in_addr_rWrPtr$EN =
	     wrMaster_batch_master_wr_in_addr_pwEnqueue$whas ;

  // register wrMaster_batch_master_wr_in_data_rCache
  assign wrMaster_batch_master_wr_in_data_rCache$D_IN =
	     { 1'd1,
	       wrMaster_batch_master_wr_in_data_rWrPtr,
	       x__read_data__h40483,
	       x__read_strb__h40484,
	       WILL_FIRE_RL_wrMaster_batch_forwardData &&
	       wrMaster_batch_master_wr_in_data_wDataIn$wget[0] } ;
  assign wrMaster_batch_master_wr_in_data_rCache$EN =
	     WILL_FIRE_RL_wrMaster_batch_forwardData ;

  // register wrMaster_batch_master_wr_in_data_rRdPtr
  assign wrMaster_batch_master_wr_in_data_rRdPtr$D_IN = x__h40671 ;
  assign wrMaster_batch_master_wr_in_data_rRdPtr$EN =
	     wrMaster_batch_master_wr_in_data_pwDequeue$whas ;

  // register wrMaster_batch_master_wr_in_data_rWrPtr
  assign wrMaster_batch_master_wr_in_data_rWrPtr$D_IN = x__h40556 ;
  assign wrMaster_batch_master_wr_in_data_rWrPtr$EN =
	     WILL_FIRE_RL_wrMaster_batch_forwardData ;

  // register wrMaster_batch_master_wr_isRst_isInReset
  assign wrMaster_batch_master_wr_isRst_isInReset$D_IN = 1'd0 ;
  assign wrMaster_batch_master_wr_isRst_isInReset$EN =
	     wrMaster_batch_master_wr_isRst_isInReset ;

  // register wrMaster_batch_master_wr_out_rCache
  assign wrMaster_batch_master_wr_out_rCache$D_IN =
	     { 1'd1,
	       wrMaster_batch_master_wr_out_rWrPtr,
	       x__read_id__h41470,
	       wrMaster_batch_master_wr_out_pwEnqueue$whas ?
		 wrMaster_batch_master_wr_out_wDataIn$wget[1:0] :
		 2'd0 } ;
  assign wrMaster_batch_master_wr_out_rCache$EN =
	     wrMaster_batch_master_wr_out_pwEnqueue$whas ;

  // register wrMaster_batch_master_wr_out_rRdPtr
  assign wrMaster_batch_master_wr_out_rRdPtr$D_IN = x__h41650 ;
  assign wrMaster_batch_master_wr_out_rRdPtr$EN =
	     wrMaster_batch_master_wr_out_pwDequeue$whas ;

  // register wrMaster_batch_master_wr_out_rWrPtr
  assign wrMaster_batch_master_wr_out_rWrPtr$D_IN = x__h41537 ;
  assign wrMaster_batch_master_wr_out_rWrPtr$EN =
	     wrMaster_batch_master_wr_out_pwEnqueue$whas ;

  // register wrMaster_batch_outstanding_beats
  assign wrMaster_batch_outstanding_beats$D_IN =
	     wrMaster_batch_outstanding_beats$port2__read ;
  assign wrMaster_batch_outstanding_beats$EN = 1'b1 ;

  // register wrMaster_batch_outstanding_writes
  assign wrMaster_batch_outstanding_writes$D_IN =
	     wrMaster_batch_outstanding_writes$port2__read ;
  assign wrMaster_batch_outstanding_writes$EN = 1'b1 ;

  // register wrMaster_batch_outstanding_writes_out
  assign wrMaster_batch_outstanding_writes_out$D_IN =
	     wrMaster_batch_outstanding_writes_out$port2__read ;
  assign wrMaster_batch_outstanding_writes_out$EN = 1'b1 ;

  // register wrMaster_batch_task_data_output_reg
  assign wrMaster_batch_task_data_output_reg$D_IN =
	     WILL_FIRE_RL_wrMaster_batch_forwardData ?
	       MUX_wrMaster_batch_task_data_output_reg$write_1__VAL_1 :
	       wrMaster_batch_reqGen_outgoingBuffer$D_OUT[44:0] ;
  assign wrMaster_batch_task_data_output_reg$EN =
	     WILL_FIRE_RL_wrMaster_batch_forwardData ||
	     WILL_FIRE_RL_wrMaster_batch_fillBuffer ;

  // register wrMaster_batch_task_data_requests_reg
  assign wrMaster_batch_task_data_requests_reg$D_IN =
	     WILL_FIRE_RL_wrMaster_batch_placeRequest ?
	       MUX_wrMaster_batch_task_data_requests_reg$write_1__VAL_1 :
	       wrMaster_batch_reqGen_outgoingBuffer$D_OUT[157:45] ;
  assign wrMaster_batch_task_data_requests_reg$EN =
	     WILL_FIRE_RL_wrMaster_batch_placeRequest ||
	     WILL_FIRE_RL_wrMaster_batch_fillBuffer ;

  // register wrMaster_in_addr_rv
  assign wrMaster_in_addr_rv$D_IN = wrMaster_in_addr_rv$port2__read ;
  assign wrMaster_in_addr_rv$EN = 1'b1 ;

  // register wrMaster_in_data_rv
  assign wrMaster_in_data_rv$D_IN = wrMaster_in_data_rv$port2__read ;
  assign wrMaster_in_data_rv$EN = 1'b1 ;

  // register wrMaster_isRst_isInReset
  assign wrMaster_isRst_isInReset$D_IN = 1'd0 ;
  assign wrMaster_isRst_isInReset$EN = wrMaster_isRst_isInReset ;

  // register wrMaster_out_rv
  assign wrMaster_out_rv$D_IN = wrMaster_out_rv$port2__read ;
  assign wrMaster_out_rv$EN = 1'b1 ;

  // register writeFinished
  assign writeFinished$D_IN = !WILL_FIRE_RL_startReadCheck ;
  assign writeFinished$EN =
	     WILL_FIRE_RL_startReadCheck ||
	     WILL_FIRE_RL_dropWriteResponseCheck ;

  // submodule rdMaster_batch_master_rd_in_memory
  assign rdMaster_batch_master_rd_in_memory$ADDRA =
	     rdMaster_batch_master_rd_in_rWrPtr[1:0] ;
  assign rdMaster_batch_master_rd_in_memory$ADDRB =
	     rdMaster_batch_master_rd_in_pwDequeue$whas ?
	       x__h31307[1:0] :
	       rdMaster_batch_master_rd_in_rRdPtr[1:0] ;
  assign rdMaster_batch_master_rd_in_memory$DIA =
	     rdMaster_batch_master_rd_in_wDataIn_whas__02_A_ETC___d638 ;
  assign rdMaster_batch_master_rd_in_memory$DIB =
	     94'h2AAAAAAAAAAAAAAAAAAAAAAA /* unspecified value */  ;
  assign rdMaster_batch_master_rd_in_memory$WEA =
	     rdMaster_batch_master_rd_in_pwEnqueue$whas ;
  assign rdMaster_batch_master_rd_in_memory$WEB = 1'd0 ;
  assign rdMaster_batch_master_rd_in_memory$ENA = 1'b1 ;
  assign rdMaster_batch_master_rd_in_memory$ENB = 1'b1 ;

  // submodule rdMaster_batch_master_rd_out
  assign rdMaster_batch_master_rd_out$D_IN = 516'h0 ;
  assign rdMaster_batch_master_rd_out$ENQ = 1'b0 ;
  assign rdMaster_batch_master_rd_out$DEQ = 1'b0 ;
  assign rdMaster_batch_master_rd_out$CLR = 1'b0 ;

  // submodule rdMaster_batch_master_rd_out_1_memory
  assign rdMaster_batch_master_rd_out_1_memory$ADDRA =
	     rdMaster_batch_master_rd_out_1_rWrPtr[1:0] ;
  assign rdMaster_batch_master_rd_out_1_memory$ADDRB =
	     WILL_FIRE_RL_rdMaster_batch_forwardData ?
	       x__h32705[1:0] :
	       rdMaster_batch_master_rd_out_1_rRdPtr[1:0] ;
  assign rdMaster_batch_master_rd_out_1_memory$DIA =
	     rdMaster_batch_master_rd_out_1_wDataIn_whas__0_ETC___d712 ;
  assign rdMaster_batch_master_rd_out_1_memory$DIB =
	     516'hAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA /* unspecified value */  ;
  assign rdMaster_batch_master_rd_out_1_memory$WEA =
	     rdMaster_batch_master_rd_out_1_pwEnqueue$whas ;
  assign rdMaster_batch_master_rd_out_1_memory$WEB = 1'd0 ;
  assign rdMaster_batch_master_rd_out_1_memory$ENA = 1'b1 ;
  assign rdMaster_batch_master_rd_out_1_memory$ENB = 1'b1 ;

  // submodule rdMaster_batch_maxOutstandingFIFO
  assign rdMaster_batch_maxOutstandingFIFO$D_IN = 1'd1 ;
  assign rdMaster_batch_maxOutstandingFIFO$ENQ =
	     WILL_FIRE_RL_rdMaster_batch_placeRequest ;
  assign rdMaster_batch_maxOutstandingFIFO$DEQ =
	     WILL_FIRE_RL_rdMaster_batch_forwardData &&
	     rdMaster_batch_master_rd_out_1_wDataOut$wget[0] ;
  assign rdMaster_batch_maxOutstandingFIFO$CLR = 1'b0 ;

  // submodule rdMaster_batch_outgoingBuffer_memory
  assign rdMaster_batch_outgoingBuffer_memory$ADDRA =
	     rdMaster_batch_outgoingBuffer_rWrPtr[7:0] ;
  assign rdMaster_batch_outgoingBuffer_memory$ADDRB =
	     rdMaster_batch_outgoingBuffer_pwDequeue$whas ?
	       x__h36015[7:0] :
	       rdMaster_batch_outgoingBuffer_rRdPtr[7:0] ;
  assign rdMaster_batch_outgoingBuffer_memory$DIA = x3__h35843 ;
  assign rdMaster_batch_outgoingBuffer_memory$DIB =
	     512'hAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA /* unspecified value */  ;
  assign rdMaster_batch_outgoingBuffer_memory$WEA =
	     WILL_FIRE_RL_rdMaster_batch_forwardData ;
  assign rdMaster_batch_outgoingBuffer_memory$WEB = 1'd0 ;
  assign rdMaster_batch_outgoingBuffer_memory$ENA = 1'b1 ;
  assign rdMaster_batch_outgoingBuffer_memory$ENB = 1'b1 ;

  // submodule rdMaster_batch_read_rq_out
  assign rdMaster_batch_read_rq_out$D_IN =
	     { 1'd0,
	       rdMaster_batch_task_data_requests_reg[68:5],
	       IF_rdMaster_batch_task_data_requests_reg_75_BI_ETC___d796,
	       17'd102784,
	       rdMaster_batch_task_data_requests_reg[4:1] } ;
  assign rdMaster_batch_read_rq_out$ENQ =
	     WILL_FIRE_RL_rdMaster_batch_placeRequest ;
  assign rdMaster_batch_read_rq_out$DEQ =
	     rdMaster_batch_master_rd_in_pwEnqueue$whas ;
  assign rdMaster_batch_read_rq_out$CLR = 1'b0 ;

  // submodule rdMaster_batch_relaxationBuffer
  assign rdMaster_batch_relaxationBuffer$D_IN =
	     rdMaster_batch_outgoingBuffer_wDataOut$wget ;
  assign rdMaster_batch_relaxationBuffer$ENQ =
	     rdMaster_batch_outgoingBuffer_pwDequeue$whas ;
  assign rdMaster_batch_relaxationBuffer$DEQ =
	     rdMaster_batch_relaxationBuffer$EMPTY_N &&
	     (operation == 3'd1 || operation == 3'd0 || operation == 3'd2) ;
  assign rdMaster_batch_relaxationBuffer$CLR = 1'b0 ;

  // submodule rdMaster_batch_reqGen_incomingBuffer
  assign rdMaster_batch_reqGen_incomingBuffer$D_IN =
	     WILL_FIRE_RL_startReadBatch ?
	       MUX_rdMaster_batch_reqGen_incomingBuffer$enq_1__VAL_1 :
	       MUX_rdMaster_batch_reqGen_incomingBuffer$enq_1__VAL_2 ;
  assign rdMaster_batch_reqGen_incomingBuffer$ENQ =
	     WILL_FIRE_RL_startReadBatch || WILL_FIRE_RL_startReadWriteBatch ;
  assign rdMaster_batch_reqGen_incomingBuffer$DEQ =
	     rdMaster_batch_reqGen_incomingBuffer$EMPTY_N &&
	     rdMaster_batch_reqGen_intermediateBuffer$FULL_N ;
  assign rdMaster_batch_reqGen_incomingBuffer$CLR = 1'b0 ;

  // submodule rdMaster_batch_reqGen_intermediateBuffer
  assign rdMaster_batch_reqGen_intermediateBuffer$D_IN =
	     { x__h29512[5:0],
	       rdMaster_batch_reqGen_incomingBufferD_OUT_BIT_ETC__q16[5:0],
	       rdMaster_batch_reqGen_incomingBuffer$D_OUT } ;
  assign rdMaster_batch_reqGen_intermediateBuffer$ENQ =
	     rdMaster_batch_reqGen_incomingBuffer$EMPTY_N &&
	     rdMaster_batch_reqGen_intermediateBuffer$FULL_N ;
  assign rdMaster_batch_reqGen_intermediateBuffer$DEQ =
	     rdMaster_batch_reqGen_intermediateBuffer$EMPTY_N &&
	     rdMaster_batch_reqGen_intermediateBuffer2$FULL_N ;
  assign rdMaster_batch_reqGen_intermediateBuffer$CLR = 1'b0 ;

  // submodule rdMaster_batch_reqGen_intermediateBuffer2
  assign rdMaster_batch_reqGen_intermediateBuffer2$D_IN =
	     { rdMaster_batch_reqGen_intermediateBuffer$D_OUT[111:100],
	       x__h29687[25:0],
	       rdMaster_batch_reqGen_intermediateBuffer$D_OUT[99:0] } ;
  assign rdMaster_batch_reqGen_intermediateBuffer2$ENQ =
	     rdMaster_batch_reqGen_intermediateBuffer$EMPTY_N &&
	     rdMaster_batch_reqGen_intermediateBuffer2$FULL_N ;
  assign rdMaster_batch_reqGen_intermediateBuffer2$DEQ =
	     rdMaster_batch_reqGen_intermediateBuffer2$EMPTY_N &&
	     rdMaster_batch_reqGen_intermediateBuffer3$FULL_N ;
  assign rdMaster_batch_reqGen_intermediateBuffer2$CLR = 1'b0 ;

  // submodule rdMaster_batch_reqGen_intermediateBuffer3
  assign rdMaster_batch_reqGen_intermediateBuffer3$D_IN =
	     { rdMaster_batch_reqGen_intermediateBuffer2$D_OUT,
	       requests_first__h29788 } ;
  assign rdMaster_batch_reqGen_intermediateBuffer3$ENQ =
	     rdMaster_batch_reqGen_intermediateBuffer2$EMPTY_N &&
	     rdMaster_batch_reqGen_intermediateBuffer3$FULL_N ;
  assign rdMaster_batch_reqGen_intermediateBuffer3$DEQ =
	     rdMaster_batch_reqGen_intermediateBuffer3$EMPTY_N &&
	     rdMaster_batch_reqGen_outgoingBuffer$FULL_N ;
  assign rdMaster_batch_reqGen_intermediateBuffer3$CLR = 1'b0 ;

  // submodule rdMaster_batch_reqGen_outgoingBuffer
  assign rdMaster_batch_reqGen_outgoingBuffer$D_IN =
	     { rdMaster_batch_reqGen_intermediateBuffer3$D_OUT[8:0],
	       x__h30012,
	       request_data_requests_total__h29986,
	       rdMaster_batch_reqGen_intermediateBuffer3$D_OUT[108:45],
	       rdMaster_batch_reqGen_intermediateBuffer3$D_OUT[12:9],
	       1'd1,
	       rdMaster_batch_reqGen_intermediateBuffer3$D_OUT[146:109],
	       rdMaster_batch_reqGen_intermediateBuffer3$D_OUT[50:45],
	       1'd1 } ;
  assign rdMaster_batch_reqGen_outgoingBuffer$ENQ =
	     rdMaster_batch_reqGen_intermediateBuffer3$EMPTY_N &&
	     rdMaster_batch_reqGen_outgoingBuffer$FULL_N ;
  assign rdMaster_batch_reqGen_outgoingBuffer$DEQ =
	     WILL_FIRE_RL_rdMaster_batch_fillBuffer ;
  assign rdMaster_batch_reqGen_outgoingBuffer$CLR = 1'b0 ;

  // submodule rdMaster_out
  assign rdMaster_out$D_IN = 516'h0 ;
  assign rdMaster_out$ENQ = 1'b0 ;
  assign rdMaster_out$DEQ = 1'b0 ;
  assign rdMaster_out$CLR = 1'b0 ;

  // submodule wrMaster_batch_beatsPerRequestFIFO
  assign wrMaster_batch_beatsPerRequestFIFO$D_IN = _theResult_____3__h44947 ;
  assign wrMaster_batch_beatsPerRequestFIFO$ENQ =
	     WILL_FIRE_RL_wrMaster_batch_placeRequest ;
  assign wrMaster_batch_beatsPerRequestFIFO$DEQ =
	     WILL_FIRE_RL_wrMaster_batch_forwardData &&
	     wrMaster_batch_beatsThisRequestCntr_343_EQ_wrM_ETC___d1345 ;
  assign wrMaster_batch_beatsPerRequestFIFO$CLR = 1'b0 ;

  // submodule wrMaster_batch_incomingBuffer_memory
  assign wrMaster_batch_incomingBuffer_memory$ADDRA =
	     wrMaster_batch_incomingBuffer_rWrPtr[7:0] ;
  assign wrMaster_batch_incomingBuffer_memory$ADDRB =
	     WILL_FIRE_RL_wrMaster_batch_forwardData ?
	       x__h44690[7:0] :
	       wrMaster_batch_incomingBuffer_rRdPtr[7:0] ;
  assign wrMaster_batch_incomingBuffer_memory$DIA = x3__h44518 ;
  assign wrMaster_batch_incomingBuffer_memory$DIB =
	     512'hAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA /* unspecified value */  ;
  assign wrMaster_batch_incomingBuffer_memory$WEA =
	     wrMaster_batch_incomingBuffer_pwEnqueue$whas ;
  assign wrMaster_batch_incomingBuffer_memory$WEB = 1'd0 ;
  assign wrMaster_batch_incomingBuffer_memory$ENA = 1'b1 ;
  assign wrMaster_batch_incomingBuffer_memory$ENB = 1'b1 ;

  // submodule wrMaster_batch_master_wr_in_addr_memory
  assign wrMaster_batch_master_wr_in_addr_memory$ADDRA =
	     wrMaster_batch_master_wr_in_addr_rWrPtr[1:0] ;
  assign wrMaster_batch_master_wr_in_addr_memory$ADDRB =
	     wrMaster_batch_master_wr_in_addr_pwDequeue$whas ?
	       x__h39393[1:0] :
	       wrMaster_batch_master_wr_in_addr_rRdPtr[1:0] ;
  assign wrMaster_batch_master_wr_in_addr_memory$DIA =
	     wrMaster_batch_master_wr_in_addr_wDataIn_whas__ETC___d1043 ;
  assign wrMaster_batch_master_wr_in_addr_memory$DIB =
	     94'h2AAAAAAAAAAAAAAAAAAAAAAA /* unspecified value */  ;
  assign wrMaster_batch_master_wr_in_addr_memory$WEA =
	     wrMaster_batch_master_wr_in_addr_pwEnqueue$whas ;
  assign wrMaster_batch_master_wr_in_addr_memory$WEB = 1'd0 ;
  assign wrMaster_batch_master_wr_in_addr_memory$ENA = 1'b1 ;
  assign wrMaster_batch_master_wr_in_addr_memory$ENB = 1'b1 ;

  // submodule wrMaster_batch_master_wr_in_data_memory
  assign wrMaster_batch_master_wr_in_data_memory$ADDRA =
	     wrMaster_batch_master_wr_in_data_rWrPtr[1:0] ;
  assign wrMaster_batch_master_wr_in_data_memory$ADDRB =
	     wrMaster_batch_master_wr_in_data_pwDequeue$whas ?
	       x__h40671[1:0] :
	       wrMaster_batch_master_wr_in_data_rRdPtr[1:0] ;
  assign wrMaster_batch_master_wr_in_data_memory$DIA =
	     { x__read_data__h40483,
	       x__read_strb__h40484,
	       WILL_FIRE_RL_wrMaster_batch_forwardData &&
	       wrMaster_batch_master_wr_in_data_wDataIn$wget[0] } ;
  assign wrMaster_batch_master_wr_in_data_memory$DIB =
	     577'h0AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA /* unspecified value */  ;
  assign wrMaster_batch_master_wr_in_data_memory$WEA =
	     WILL_FIRE_RL_wrMaster_batch_forwardData ;
  assign wrMaster_batch_master_wr_in_data_memory$WEB = 1'd0 ;
  assign wrMaster_batch_master_wr_in_data_memory$ENA = 1'b1 ;
  assign wrMaster_batch_master_wr_in_data_memory$ENB = 1'b1 ;

  // submodule wrMaster_batch_master_wr_out_memory
  assign wrMaster_batch_master_wr_out_memory$ADDRA =
	     wrMaster_batch_master_wr_out_rWrPtr[1:0] ;
  assign wrMaster_batch_master_wr_out_memory$ADDRB =
	     wrMaster_batch_master_wr_out_pwDequeue$whas ?
	       x__h41650[1:0] :
	       wrMaster_batch_master_wr_out_rRdPtr[1:0] ;
  assign wrMaster_batch_master_wr_out_memory$DIA =
	     { x__read_id__h41470,
	       wrMaster_batch_master_wr_out_pwEnqueue$whas ?
		 wrMaster_batch_master_wr_out_wDataIn$wget[1:0] :
		 2'd0 } ;
  assign wrMaster_batch_master_wr_out_memory$DIB =
	     3'b010 /* unspecified value */  ;
  assign wrMaster_batch_master_wr_out_memory$WEA =
	     wrMaster_batch_master_wr_out_pwEnqueue$whas ;
  assign wrMaster_batch_master_wr_out_memory$WEB = 1'd0 ;
  assign wrMaster_batch_master_wr_out_memory$ENA = 1'b1 ;
  assign wrMaster_batch_master_wr_out_memory$ENB = 1'b1 ;

  // submodule wrMaster_batch_relaxationBuffer
  assign wrMaster_batch_relaxationBuffer$D_IN =
	     512'hABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABABAB ;
  assign wrMaster_batch_relaxationBuffer$ENQ =
	     wrMaster_batch_relaxationBuffer$FULL_N &&
	     (operation == 3'd1 || operation == 3'd0 || operation == 3'd2) ;
  assign wrMaster_batch_relaxationBuffer$DEQ =
	     wrMaster_batch_incomingBuffer_pwEnqueue$whas ;
  assign wrMaster_batch_relaxationBuffer$CLR = 1'b0 ;

  // submodule wrMaster_batch_reqGen_incomingBuffer
  assign wrMaster_batch_reqGen_incomingBuffer$D_IN =
	     MUX_rdMaster_batch_reqGen_incomingBuffer$enq_1__VAL_1 ;
  assign wrMaster_batch_reqGen_incomingBuffer$ENQ =
	     WILL_FIRE_RL_startReadWriteBatch ||
	     WILL_FIRE_RL_startWriteBatch ;
  assign wrMaster_batch_reqGen_incomingBuffer$DEQ =
	     wrMaster_batch_reqGen_incomingBuffer$EMPTY_N &&
	     wrMaster_batch_reqGen_intermediateBuffer$FULL_N ;
  assign wrMaster_batch_reqGen_incomingBuffer$CLR = 1'b0 ;

  // submodule wrMaster_batch_reqGen_intermediateBuffer
  assign wrMaster_batch_reqGen_intermediateBuffer$D_IN =
	     { x__h37593[5:0],
	       wrMaster_batch_reqGen_incomingBufferD_OUT_BIT_ETC__q17[5:0],
	       wrMaster_batch_reqGen_incomingBuffer$D_OUT } ;
  assign wrMaster_batch_reqGen_intermediateBuffer$ENQ =
	     wrMaster_batch_reqGen_incomingBuffer$EMPTY_N &&
	     wrMaster_batch_reqGen_intermediateBuffer$FULL_N ;
  assign wrMaster_batch_reqGen_intermediateBuffer$DEQ =
	     wrMaster_batch_reqGen_intermediateBuffer$EMPTY_N &&
	     wrMaster_batch_reqGen_intermediateBuffer2$FULL_N ;
  assign wrMaster_batch_reqGen_intermediateBuffer$CLR = 1'b0 ;

  // submodule wrMaster_batch_reqGen_intermediateBuffer2
  assign wrMaster_batch_reqGen_intermediateBuffer2$D_IN =
	     { wrMaster_batch_reqGen_intermediateBuffer$D_OUT[111:100],
	       x__h37768[25:0],
	       wrMaster_batch_reqGen_intermediateBuffer$D_OUT[99:0] } ;
  assign wrMaster_batch_reqGen_intermediateBuffer2$ENQ =
	     wrMaster_batch_reqGen_intermediateBuffer$EMPTY_N &&
	     wrMaster_batch_reqGen_intermediateBuffer2$FULL_N ;
  assign wrMaster_batch_reqGen_intermediateBuffer2$DEQ =
	     wrMaster_batch_reqGen_intermediateBuffer2$EMPTY_N &&
	     wrMaster_batch_reqGen_intermediateBuffer3$FULL_N ;
  assign wrMaster_batch_reqGen_intermediateBuffer2$CLR = 1'b0 ;

  // submodule wrMaster_batch_reqGen_intermediateBuffer3
  assign wrMaster_batch_reqGen_intermediateBuffer3$D_IN =
	     { wrMaster_batch_reqGen_intermediateBuffer2$D_OUT,
	       requests_first__h37869 } ;
  assign wrMaster_batch_reqGen_intermediateBuffer3$ENQ =
	     wrMaster_batch_reqGen_intermediateBuffer2$EMPTY_N &&
	     wrMaster_batch_reqGen_intermediateBuffer3$FULL_N ;
  assign wrMaster_batch_reqGen_intermediateBuffer3$DEQ =
	     wrMaster_batch_reqGen_intermediateBuffer3$EMPTY_N &&
	     wrMaster_batch_reqGen_outgoingBuffer$FULL_N ;
  assign wrMaster_batch_reqGen_intermediateBuffer3$CLR = 1'b0 ;

  // submodule wrMaster_batch_reqGen_outgoingBuffer
  assign wrMaster_batch_reqGen_outgoingBuffer$D_IN =
	     { wrMaster_batch_reqGen_intermediateBuffer3$D_OUT[8:0],
	       x__h38093,
	       request_data_requests_total__h38067,
	       wrMaster_batch_reqGen_intermediateBuffer3$D_OUT[108:45],
	       wrMaster_batch_reqGen_intermediateBuffer3$D_OUT[12:9],
	       1'd1,
	       wrMaster_batch_reqGen_intermediateBuffer3$D_OUT[146:109],
	       wrMaster_batch_reqGen_intermediateBuffer3$D_OUT[50:45],
	       1'd1 } ;
  assign wrMaster_batch_reqGen_outgoingBuffer$ENQ =
	     wrMaster_batch_reqGen_intermediateBuffer3$EMPTY_N &&
	     wrMaster_batch_reqGen_outgoingBuffer$FULL_N ;
  assign wrMaster_batch_reqGen_outgoingBuffer$DEQ =
	     WILL_FIRE_RL_wrMaster_batch_fillBuffer ;
  assign wrMaster_batch_reqGen_outgoingBuffer$CLR = 1'b0 ;

  // submodule wrMaster_batch_write_rq_out
  assign wrMaster_batch_write_rq_out$D_IN =
	     { 1'd0,
	       wrMaster_batch_task_data_requests_reg[68:5],
	       _theResult_____3__h44947,
	       17'd102784,
	       wrMaster_batch_task_data_requests_reg[4:1] } ;
  assign wrMaster_batch_write_rq_out$ENQ =
	     WILL_FIRE_RL_wrMaster_batch_placeRequest ;
  assign wrMaster_batch_write_rq_out$DEQ =
	     wrMaster_batch_master_wr_in_addr_pwEnqueue$whas ;
  assign wrMaster_batch_write_rq_out$CLR = 1'b0 ;

  // remaining internal signals
  assign IF_rdMaster_batch_task_data_requests_reg_75_BI_ETC___d796 =
	     (rdMaster_batch_task_data_requests_reg[94:69] == 26'd1 &&
	      rdMaster_batch_task_data_requests_reg[103:95] != 9'd0) ?
	       x__h34713[7:0] :
	       ((rdMaster_batch_task_data_requests_reg[0] &&
		 rdMaster_batch_task_data_requests_reg[112:104] != 9'd0) ?
		  x__h34723[7:0] :
		  8'd63) ;
  assign IF_s_config_writeSlave_in_rv_BIT_3_THEN_s_conf_ETC__q15 =
	     s_config_writeSlave_in_rv[3] ?
	       s_config_writeSlave_in_rv[18:11] :
	       { 5'd0, operation } ;
  assign IF_s_config_writeSlave_in_rv_BIT_3_THEN_s_conf_ETC__q2 =
	     s_config_writeSlave_in_rv[3] ?
	       s_config_writeSlave_in_rv[18:11] :
	       { 7'd0, start } ;
  assign IF_wrMaster_batch_task_data_output_reg_337_BIT_ETC___d1367 =
	     (wrMaster_batch_task_data_output_reg[0] &&
	      wrMaster_batch_task_data_output_reg[44:39] != 6'd0) ?
	       endByte___1__h49437 :
	       ((wrMaster_batch_task_data_output_reg[32:7] == 26'd1) ?
		  ((wrMaster_batch_task_data_output_reg[38:33] == 6'd0) ?
		     7'd64 :
		     endByte___1__h49463) :
		  7'd64) ;
  assign NOT_cycleCount_91_ULT_cycles_8_92___d493 = cycleCount >= cycles ;
  assign NOT_rdMaster_batch_master_rd_in_rRdPtr_read__4_ETC___d733 =
	     rdMaster_batch_master_rd_in_rRdPtr !=
	     rdMaster_batch_master_rd_in_rWrPtr ;
  assign NOT_rdMaster_batch_master_rd_out_1_rRdPtr_read_ETC___d767 =
	     rdMaster_batch_master_rd_out_1_rRdPtr + 3'd2 !=
	     rdMaster_batch_master_rd_out_1_rWrPtr ;
  assign NOT_rdMaster_batch_outstanding_beats_port0__re_ETC___d819 =
	     rdMaster_batch_outstanding_beats >=
	     _0_CONCAT_rdMaster_batch_read_rq_out_first__14__ETC___d817 ;
  assign NOT_wrMaster_batch_master_wr_in_addr_rRdPtr_re_ETC___d1169 =
	     wrMaster_batch_master_wr_in_addr_rRdPtr !=
	     wrMaster_batch_master_wr_in_addr_rWrPtr ;
  assign NOT_wrMaster_batch_master_wr_in_data_rRdPtr_re_ETC___d1202 =
	     wrMaster_batch_master_wr_in_data_rRdPtr !=
	     wrMaster_batch_master_wr_in_data_rWrPtr ;
  assign NOT_wrMaster_batch_master_wr_out_rRdPtr_read___ETC___d1214 =
	     wrMaster_batch_master_wr_out_rRdPtr + 3'd2 !=
	     wrMaster_batch_master_wr_out_rWrPtr ;
  assign NOT_wrMaster_batch_outstanding_beats_port0__re_ETC___d1296 =
	     wrMaster_batch_outstanding_beats >=
	     _0_CONCAT_wrMaster_batch_write_rq_out_first__29_ETC___d1294 ;
  assign NOT_wrMaster_batch_task_data_output_reg_337_BI_ETC___d1703 =
	     wrMaster_batch_task_data_output_reg[32:7] != 26'd0 ||
	     wrMaster_batch_task_data_requests_reg[94:69] != 26'd0 ||
	     wrMaster_batch_outstanding_writes != 6'd0 ||
	     rdMaster_batch_task_data_output_reg[32:7] != 26'd0 ||
	     rdMaster_batch_task_data_requests_reg[94:69] != 26'd0 ;
  assign _0_CONCAT_rdMaster_batch_read_rq_out_first__14__ETC___d817 =
	     b__h35172 + 12'd1 ;
  assign _0_CONCAT_wrMaster_batch_write_rq_out_first__29_ETC___d1294 =
	     b__h45854 + 12'd1 ;
  assign _theResult_____3__h44947 =
	     (wrMaster_batch_task_data_requests_reg[94:69] == 26'd1 &&
	      wrMaster_batch_task_data_requests_reg[103:95] != 9'd0) ?
	       x__h45010[7:0] :
	       ((wrMaster_batch_task_data_requests_reg[0] &&
		 wrMaster_batch_task_data_requests_reg[112:104] != 9'd0) ?
		  x__h45020[7:0] :
		  8'd63) ;
  assign _theResult____h29507 =
	     (rdMaster_batch_reqGen_incomingBuffer$D_OUT[41:36] == 6'd0) ?
	       bytes_first__h29506 :
	       bytes_first___1__h29538 ;
  assign _theResult____h29685 =
	     (rdMaster_batch_reqGen_intermediateBuffer$D_OUT[111:106] ==
	      6'd0) ?
	       transfers_total__h29684 :
	       transfers_total___1__h29693 ;
  assign _theResult____h30019 =
	     (rdMaster_batch_reqGen_intermediateBuffer3_firs_ETC___d573[5:0] ==
	      6'd0) ?
	       requests_total__h29955 :
	       requests_total___1__h30026 ;
  assign _theResult____h37588 =
	     (wrMaster_batch_reqGen_incomingBuffer$D_OUT[41:36] == 6'd0) ?
	       bytes_first__h37587 :
	       bytes_first___1__h37619 ;
  assign _theResult____h37766 =
	     (wrMaster_batch_reqGen_intermediateBuffer$D_OUT[111:106] ==
	      6'd0) ?
	       transfers_total__h37765 :
	       transfers_total___1__h37774 ;
  assign _theResult____h38100 =
	     (wrMaster_batch_reqGen_intermediateBuffer3_firs_ETC___d978[5:0] ==
	      6'd0) ?
	       requests_total__h38036 :
	       requests_total___1__h38107 ;
  assign addr_last__h29859 =
	     rdMaster_batch_reqGen_intermediateBuffer2$D_OUT[47:36] +
	     y__h29880 ;
  assign addr_last__h29860 = addr_last__h29859 - 12'd1 ;
  assign addr_last__h37940 =
	     wrMaster_batch_reqGen_intermediateBuffer2$D_OUT[47:36] +
	     y__h37961 ;
  assign addr_last__h37941 = addr_last__h37940 - 12'd1 ;
  assign address__h27521 = { 36'd0, x__h27621 } ;
  assign address__h27726 = { 36'd0, x__h27825 } ;
  assign address__h58817 = { 36'd0, x__h58848 } ;
  assign b__h35172 = { 4'd0, rdMaster_batch_read_rq_out$D_OUT[28:21] } ;
  assign b__h36613 =
	     rdMaster_batch_outstanding_beats$EN_port0__write ?
	       rdMaster_batch_outstanding_beats$port0__write_1 :
	       rdMaster_batch_outstanding_beats ;
  assign b__h45854 = { 4'd0, wrMaster_batch_write_rq_out$D_OUT[28:21] } ;
  assign b__h45943 =
	     wrMaster_batch_outstanding_writes$EN_port0__write ?
	       wrMaster_batch_outstanding_writes$port0__write_1 :
	       wrMaster_batch_outstanding_writes ;
  assign b__h45974 =
	     wrMaster_batch_outstanding_writes_out$EN_port0__write ?
	       wrMaster_batch_outstanding_writes_out$port0__write_1 :
	       wrMaster_batch_outstanding_writes_out ;
  assign b__h57573 =
	     wrMaster_batch_outstanding_beats$EN_port0__write ?
	       wrMaster_batch_outstanding_beats$port0__write_1 :
	       wrMaster_batch_outstanding_beats ;
  assign barrier_transfers__h29903 = x__h29913[11:0] >> 6 ;
  assign barrier_transfers__h37984 = x__h37994[11:0] >> 6 ;
  assign beatsThisRequestCntrT__h46342 =
	     wrMaster_batch_beatsThisRequestCntr + 8'd1 ;
  assign burst_length__h29857 =
	     (rdMaster_batch_reqGen_intermediateBuffer2$D_OUT[125:100] <
	      26'd64) ?
	       rdMaster_batch_reqGen_intermediateBuffer2$D_OUT[108:100] :
	       9'd64 ;
  assign burst_length__h37938 =
	     (wrMaster_batch_reqGen_intermediateBuffer2$D_OUT[125:100] <
	      26'd64) ?
	       wrMaster_batch_reqGen_intermediateBuffer2$D_OUT[108:100] :
	       9'd64 ;
  assign byteLength_BITS_60_TO_0_CONCAT_0_MINUS_1__q1 =
	     { byteLength[60:0], 3'd0 } - 64'd1 ;
  assign bytes_first___1__h29538 = 64'd64 - bytes_first__h29506 ;
  assign bytes_first___1__h37619 = 64'd64 - bytes_first__h37587 ;
  assign bytes_first__h29506 =
	     { 58'd0, rdMaster_batch_reqGen_incomingBuffer$D_OUT[41:36] } ;
  assign bytes_first__h37587 =
	     { 58'd0, wrMaster_batch_reqGen_incomingBuffer$D_OUT[41:36] } ;
  assign d__h46308 =
	     (wrMaster_batch_incomingBuffer_rCache[521] &&
	      wrMaster_batch_incomingBuffer_rCache[520:512] ==
	      wrMaster_batch_incomingBuffer_rRdPtr) ?
	       wrMaster_batch_incomingBuffer_rCache[511:0] :
	       wrMaster_batch_incomingBuffer_memory$DOB ;
  assign endByte___1__h49437 =
	     startByte___1__h49436 +
	     { 1'd0, wrMaster_batch_task_data_output_reg[44:39] } ;
  assign endByte___1__h49463 =
	     { 1'd0, wrMaster_batch_task_data_output_reg[38:33] } ;
  assign length__h28197 = (byteLength <= 64'd64) ? byteLength : 64'd64 ;
  assign rdMaster_batch_master_rd_in_wDataIn_whas__02_A_ETC___d638 =
	     { x__read_id__h30875,
	       x__read_addr__h30876,
	       rdMaster_batch_master_rd_in_pwEnqueue$whas ?
		 rdMaster_batch_master_rd_in_wDataIn$wget[28:21] :
		 8'd0,
	       rdMaster_batch_master_rd_in_pwEnqueue$whas ?
		 rdMaster_batch_master_rd_in_wDataIn$wget[20:18] :
		 3'd0,
	       rdMaster_batch_master_rd_in_pwEnqueue$whas ?
		 rdMaster_batch_master_rd_in_wDataIn$wget[17:16] :
		 2'd0,
	       rdMaster_batch_master_rd_in_pwEnqueue$whas &&
	       rdMaster_batch_master_rd_in_wDataIn$wget[15],
	       (!rdMaster_batch_master_rd_in_pwEnqueue$whas ||
		rdMaster_batch_master_rd_in_wDataIn$wget[14:11] == 4'd0) ?
		 4'd0 :
		 CASE_rdMaster_batch_master_rd_in_wDataInwget__ETC__q6,
	       rdMaster_batch_master_rd_in_pwEnqueue$whas ?
		 rdMaster_batch_master_rd_in_wDataIn$wget[10:0] :
		 11'd0 } ;
  assign rdMaster_batch_master_rd_out_1_wDataIn_whas__0_ETC___d712 =
	     { x__read_id__h32495,
	       x__read_data__h32496,
	       rdMaster_batch_master_rd_out_1_pwEnqueue$whas ?
		 rdMaster_batch_master_rd_out_1_wDataIn$wget[2:1] :
		 2'd0,
	       rdMaster_batch_master_rd_out_1_pwEnqueue$whas &&
	       rdMaster_batch_master_rd_out_1_wDataIn$wget[0] } ;
  assign rdMaster_batch_reqGen_incomingBufferD_OUT_BIT_ETC__q16 =
	     rdMaster_batch_reqGen_incomingBuffer$D_OUT[35:4] - y__h29579 ;
  assign rdMaster_batch_reqGen_intermediateBuffer3_firs_ETC___d573 =
	     rdMaster_batch_reqGen_intermediateBuffer3$D_OUT[134:109] -
	     { 17'd0, rdMaster_batch_reqGen_intermediateBuffer3$D_OUT[8:0] } ;
  assign request_data_requests_total__h29986 =
	     (rdMaster_batch_reqGen_intermediateBuffer3$D_OUT[8:0] == 9'd0) ?
	       _theResult____h30019 :
	       requests_total__h30023 ;
  assign request_data_requests_total__h38067 =
	     (wrMaster_batch_reqGen_intermediateBuffer3$D_OUT[8:0] == 9'd0) ?
	       _theResult____h38100 :
	       requests_total__h38104 ;
  assign requests_first__h29788 =
	     (addr_last__h29860 <=
	      rdMaster_batch_reqGen_intermediateBuffer2$D_OUT[47:36]) ?
	       barrier_transfers__h29903[8:0] :
	       9'd0 ;
  assign requests_first__h37869 =
	     (addr_last__h37941 <=
	      wrMaster_batch_reqGen_intermediateBuffer2$D_OUT[47:36]) ?
	       barrier_transfers__h37984[8:0] :
	       9'd0 ;
  assign requests_total___1__h30026 = requests_total__h29955 + 26'd1 ;
  assign requests_total___1__h38107 = requests_total__h38036 + 26'd1 ;
  assign requests_total__h29955 =
	     rdMaster_batch_reqGen_intermediateBuffer3_firs_ETC___d573 >> 6 ;
  assign requests_total__h30023 = _theResult____h30019 + 26'd1 ;
  assign requests_total__h38036 =
	     wrMaster_batch_reqGen_intermediateBuffer3_firs_ETC___d978 >> 6 ;
  assign requests_total__h38104 = _theResult____h38100 + 26'd1 ;
  assign startByte___1__h49436 =
	     { 1'd0, wrMaster_batch_task_data_output_reg[6:1] } ;
  assign strobe__h28198 = 64'hFFFFFFFFFFFFFFFF >> x__h28292 ;
  assign transfers_total___1__h29693 = transfers_total__h29684 + 32'd1 ;
  assign transfers_total___1__h37774 = transfers_total__h37765 + 32'd1 ;
  assign transfers_total__h29684 = (x__h29713 - y__h29714) >> 6 ;
  assign transfers_total__h29690 = _theResult____h29685 + 32'd1 ;
  assign transfers_total__h37765 = (x__h37794 - y__h37795) >> 6 ;
  assign transfers_total__h37771 = _theResult____h37766 + 32'd1 ;
  assign v__h5963 = { 63'd0, start } ;
  assign v__h6334 = { 61'd0, operation } ;
  assign wrMaster_batch_beatsThisRequestCntr_343_EQ_wrM_ETC___d1345 =
	     wrMaster_batch_beatsThisRequestCntr ==
	     wrMaster_batch_beatsPerRequestFIFO$D_OUT ;
  assign wrMaster_batch_master_wr_in_addr_wDataIn_whas__ETC___d1043 =
	     { x__read_id__h38961,
	       x__read_addr__h38962,
	       wrMaster_batch_master_wr_in_addr_pwEnqueue$whas ?
		 wrMaster_batch_master_wr_in_addr_wDataIn$wget[28:21] :
		 8'd0,
	       wrMaster_batch_master_wr_in_addr_pwEnqueue$whas ?
		 wrMaster_batch_master_wr_in_addr_wDataIn$wget[20:18] :
		 3'd0,
	       wrMaster_batch_master_wr_in_addr_pwEnqueue$whas ?
		 wrMaster_batch_master_wr_in_addr_wDataIn$wget[17:16] :
		 2'd0,
	       wrMaster_batch_master_wr_in_addr_pwEnqueue$whas &&
	       wrMaster_batch_master_wr_in_addr_wDataIn$wget[15],
	       (!wrMaster_batch_master_wr_in_addr_pwEnqueue$whas ||
		wrMaster_batch_master_wr_in_addr_wDataIn$wget[14:11] ==
		4'd0) ?
		 4'd0 :
		 CASE_wrMaster_batch_master_wr_in_addr_wDataIn_ETC__q11,
	       wrMaster_batch_master_wr_in_addr_pwEnqueue$whas ?
		 wrMaster_batch_master_wr_in_addr_wDataIn$wget[10:0] :
		 11'd0 } ;
  assign wrMaster_batch_reqGen_incomingBufferD_OUT_BIT_ETC__q17 =
	     wrMaster_batch_reqGen_incomingBuffer$D_OUT[35:4] - y__h37660 ;
  assign wrMaster_batch_reqGen_intermediateBuffer3_firs_ETC___d978 =
	     wrMaster_batch_reqGen_intermediateBuffer3$D_OUT[134:109] -
	     { 17'd0, wrMaster_batch_reqGen_intermediateBuffer3$D_OUT[8:0] } ;
  assign wrMaster_batch_task_data_output_reg_337_BITS_3_ETC___d1707 =
	     wrMaster_batch_task_data_output_reg[32:7] == 26'd0 &&
	     wrMaster_batch_task_data_requests_reg[94:69] == 26'd0 &&
	     wrMaster_batch_outstanding_writes == 6'd0 &&
	     rdMaster_batch_task_data_output_reg[32:7] == 26'd0 &&
	     rdMaster_batch_task_data_requests_reg[94:69] == 26'd0 ;
  assign x3__h35843 =
	     WILL_FIRE_RL_rdMaster_batch_forwardData ?
	       rdMaster_batch_master_rd_out_1_wDataOut$wget[514:3] :
	       512'd0 ;
  assign x3__h44518 =
	     wrMaster_batch_incomingBuffer_pwEnqueue$whas ?
	       wrMaster_batch_relaxationBuffer$D_OUT :
	       512'd0 ;
  assign x__h27621 = { rand_rd_r[22:0], 5'd0 } ;
  assign x__h27825 = { rand_wr_r[22:0], 5'd0 } ;
  assign x__h28292 = 64'd64 - length__h28197 ;
  assign x__h28635 = chunks_wr_completed + chunks_rd_completed ;
  assign x__h29512 =
	     ({ 32'd0, rdMaster_batch_reqGen_incomingBuffer$D_OUT[35:4] } <
	      _theResult____h29507 ||
	      _theResult____h29507 == 64'd0 &&
	      rdMaster_batch_reqGen_incomingBuffer$D_OUT[35:4] < 32'd64) ?
	       { 32'd0, rdMaster_batch_reqGen_incomingBuffer$D_OUT[35:4] } :
	       _theResult____h29507 ;
  assign x__h29687 =
	     (rdMaster_batch_reqGen_intermediateBuffer$D_OUT[105:100] ==
	      6'd0) ?
	       _theResult____h29685 :
	       transfers_total__h29690 ;
  assign x__h29713 =
	     rdMaster_batch_reqGen_intermediateBuffer$D_OUT[35:4] -
	     y__h29716 ;
  assign x__h29913 =
	     13'd4096 -
	     { 1'd0,
	       rdMaster_batch_reqGen_intermediateBuffer2$D_OUT[47:36] } ;
  assign x__h30012 =
	     { 3'd0,
	       rdMaster_batch_reqGen_intermediateBuffer3_firs_ETC___d573[5:0] } ;
  assign x__h31130 = rdMaster_batch_master_rd_in_rWrPtr + 3'd1 ;
  assign x__h31307 = rdMaster_batch_master_rd_in_rRdPtr + 3'd1 ;
  assign x__h32578 = rdMaster_batch_master_rd_out_1_rWrPtr + 3'd1 ;
  assign x__h32705 = rdMaster_batch_master_rd_out_1_rRdPtr + 3'd1 ;
  assign x__h34713 = rdMaster_batch_task_data_requests_reg[103:95] - 9'd1 ;
  assign x__h34723 = rdMaster_batch_task_data_requests_reg[112:104] - 9'd1 ;
  assign x__h35920 = rdMaster_batch_outgoingBuffer_rWrPtr + 9'd1 ;
  assign x__h36015 = rdMaster_batch_outgoingBuffer_rRdPtr + 9'd1 ;
  assign x__h37593 =
	     ({ 32'd0, wrMaster_batch_reqGen_incomingBuffer$D_OUT[35:4] } <
	      _theResult____h37588 ||
	      _theResult____h37588 == 64'd0 &&
	      wrMaster_batch_reqGen_incomingBuffer$D_OUT[35:4] < 32'd64) ?
	       { 32'd0, wrMaster_batch_reqGen_incomingBuffer$D_OUT[35:4] } :
	       _theResult____h37588 ;
  assign x__h37768 =
	     (wrMaster_batch_reqGen_intermediateBuffer$D_OUT[105:100] ==
	      6'd0) ?
	       _theResult____h37766 :
	       transfers_total__h37771 ;
  assign x__h37794 =
	     wrMaster_batch_reqGen_intermediateBuffer$D_OUT[35:4] -
	     y__h37797 ;
  assign x__h37994 =
	     13'd4096 -
	     { 1'd0,
	       wrMaster_batch_reqGen_intermediateBuffer2$D_OUT[47:36] } ;
  assign x__h38093 =
	     { 3'd0,
	       wrMaster_batch_reqGen_intermediateBuffer3_firs_ETC___d978[5:0] } ;
  assign x__h39216 = wrMaster_batch_master_wr_in_addr_rWrPtr + 3'd1 ;
  assign x__h39393 = wrMaster_batch_master_wr_in_addr_rRdPtr + 3'd1 ;
  assign x__h40556 = wrMaster_batch_master_wr_in_data_rWrPtr + 3'd1 ;
  assign x__h40671 = wrMaster_batch_master_wr_in_data_rRdPtr + 3'd1 ;
  assign x__h41537 = wrMaster_batch_master_wr_out_rWrPtr + 3'd1 ;
  assign x__h41650 = wrMaster_batch_master_wr_out_rRdPtr + 3'd1 ;
  assign x__h44595 = wrMaster_batch_incomingBuffer_rWrPtr + 9'd1 ;
  assign x__h44690 = wrMaster_batch_incomingBuffer_rRdPtr + 9'd1 ;
  assign x__h45010 = wrMaster_batch_task_data_requests_reg[103:95] - 9'd1 ;
  assign x__h45020 = wrMaster_batch_task_data_requests_reg[112:104] - 9'd1 ;
  assign x__h49423 =
	     (wrMaster_batch_task_data_output_reg[0] &&
	      wrMaster_batch_task_data_output_reg[44:39] != 6'd0) ?
	       startByte___1__h49436 :
	       7'd0 ;
  assign x__h58848 = { seed_rd[22:0], 5'd0 } ;
  assign x__read_addr__h30876 =
	     rdMaster_batch_master_rd_in_pwEnqueue$whas ?
	       rdMaster_batch_master_rd_in_wDataIn$wget[92:29] :
	       64'd0 ;
  assign x__read_addr__h38962 =
	     wrMaster_batch_master_wr_in_addr_pwEnqueue$whas ?
	       wrMaster_batch_master_wr_in_addr_wDataIn$wget[92:29] :
	       64'd0 ;
  assign x__read_data__h32496 =
	     rdMaster_batch_master_rd_out_1_pwEnqueue$whas ?
	       rdMaster_batch_master_rd_out_1_wDataIn$wget[514:3] :
	       512'd0 ;
  assign x__read_data__h40483 =
	     WILL_FIRE_RL_wrMaster_batch_forwardData ?
	       wrMaster_batch_master_wr_in_data_wDataIn$wget[576:65] :
	       512'd0 ;
  assign x__read_id__h30875 =
	     rdMaster_batch_master_rd_in_pwEnqueue$whas &&
	     rdMaster_batch_master_rd_in_wDataIn$wget[93] ;
  assign x__read_id__h32495 =
	     rdMaster_batch_master_rd_out_1_pwEnqueue$whas &&
	     rdMaster_batch_master_rd_out_1_wDataIn$wget[515] ;
  assign x__read_id__h38961 =
	     wrMaster_batch_master_wr_in_addr_pwEnqueue$whas &&
	     wrMaster_batch_master_wr_in_addr_wDataIn$wget[93] ;
  assign x__read_id__h41470 =
	     wrMaster_batch_master_wr_out_pwEnqueue$whas &&
	     wrMaster_batch_master_wr_out_wDataIn$wget[2] ;
  assign x__read_strb__h40484 =
	     WILL_FIRE_RL_wrMaster_batch_forwardData ?
	       wrMaster_batch_master_wr_in_data_wDataIn$wget[64:1] :
	       64'd0 ;
  assign x_address_dynamic__h34784 =
	     rdMaster_batch_task_data_requests_reg[37:17] + 21'd1 ;
  assign x_address_dynamic__h45082 =
	     wrMaster_batch_task_data_requests_reg[37:17] + 21'd1 ;
  assign x_requests_total__h34782 =
	     rdMaster_batch_task_data_requests_reg[94:69] - 26'd1 ;
  assign x_requests_total__h45080 =
	     wrMaster_batch_task_data_requests_reg[94:69] - 26'd1 ;
  assign x_strb__h46526 =
	     { x__h49423 <= 7'd63 &&
	       IF_wrMaster_batch_task_data_output_reg_337_BIT_ETC___d1367 >
	       7'd63,
	       x__h49423 <= 7'd62 &&
	       IF_wrMaster_batch_task_data_output_reg_337_BIT_ETC___d1367 >
	       7'd62,
	       x__h49423 <= 7'd61 &&
	       IF_wrMaster_batch_task_data_output_reg_337_BIT_ETC___d1367 >
	       7'd61,
	       x__h49423 <= 7'd60 &&
	       IF_wrMaster_batch_task_data_output_reg_337_BIT_ETC___d1367 >
	       7'd60,
	       x__h49423 <= 7'd59 &&
	       IF_wrMaster_batch_task_data_output_reg_337_BIT_ETC___d1367 >
	       7'd59,
	       x__h49423 <= 7'd58 &&
	       IF_wrMaster_batch_task_data_output_reg_337_BIT_ETC___d1367 >
	       7'd58,
	       x__h49423 <= 7'd57 &&
	       IF_wrMaster_batch_task_data_output_reg_337_BIT_ETC___d1367 >
	       7'd57,
	       x__h49423 <= 7'd56 &&
	       IF_wrMaster_batch_task_data_output_reg_337_BIT_ETC___d1367 >
	       7'd56,
	       x__h49423 <= 7'd55 &&
	       IF_wrMaster_batch_task_data_output_reg_337_BIT_ETC___d1367 >
	       7'd55,
	       x__h49423 <= 7'd54 &&
	       IF_wrMaster_batch_task_data_output_reg_337_BIT_ETC___d1367 >
	       7'd54,
	       x__h49423 <= 7'd53 &&
	       IF_wrMaster_batch_task_data_output_reg_337_BIT_ETC___d1367 >
	       7'd53,
	       x__h49423 <= 7'd52 &&
	       IF_wrMaster_batch_task_data_output_reg_337_BIT_ETC___d1367 >
	       7'd52,
	       x__h49423 <= 7'd51 &&
	       IF_wrMaster_batch_task_data_output_reg_337_BIT_ETC___d1367 >
	       7'd51,
	       x__h49423 <= 7'd50 &&
	       IF_wrMaster_batch_task_data_output_reg_337_BIT_ETC___d1367 >
	       7'd50,
	       x__h49423 <= 7'd49 &&
	       IF_wrMaster_batch_task_data_output_reg_337_BIT_ETC___d1367 >
	       7'd49,
	       x__h49423 <= 7'd48 &&
	       IF_wrMaster_batch_task_data_output_reg_337_BIT_ETC___d1367 >
	       7'd48,
	       x__h49423 <= 7'd47 &&
	       IF_wrMaster_batch_task_data_output_reg_337_BIT_ETC___d1367 >
	       7'd47,
	       x__h49423 <= 7'd46 &&
	       IF_wrMaster_batch_task_data_output_reg_337_BIT_ETC___d1367 >
	       7'd46,
	       x__h49423 <= 7'd45 &&
	       IF_wrMaster_batch_task_data_output_reg_337_BIT_ETC___d1367 >
	       7'd45,
	       x__h49423 <= 7'd44 &&
	       IF_wrMaster_batch_task_data_output_reg_337_BIT_ETC___d1367 >
	       7'd44,
	       x__h49423 <= 7'd43 &&
	       IF_wrMaster_batch_task_data_output_reg_337_BIT_ETC___d1367 >
	       7'd43,
	       x__h49423 <= 7'd42 &&
	       IF_wrMaster_batch_task_data_output_reg_337_BIT_ETC___d1367 >
	       7'd42,
	       x__h49423 <= 7'd41 &&
	       IF_wrMaster_batch_task_data_output_reg_337_BIT_ETC___d1367 >
	       7'd41,
	       x__h49423 <= 7'd40 &&
	       IF_wrMaster_batch_task_data_output_reg_337_BIT_ETC___d1367 >
	       7'd40,
	       x__h49423 <= 7'd39 &&
	       IF_wrMaster_batch_task_data_output_reg_337_BIT_ETC___d1367 >
	       7'd39,
	       x__h49423 <= 7'd38 &&
	       IF_wrMaster_batch_task_data_output_reg_337_BIT_ETC___d1367 >
	       7'd38,
	       x__h49423 <= 7'd37 &&
	       IF_wrMaster_batch_task_data_output_reg_337_BIT_ETC___d1367 >
	       7'd37,
	       x__h49423 <= 7'd36 &&
	       IF_wrMaster_batch_task_data_output_reg_337_BIT_ETC___d1367 >
	       7'd36,
	       x__h49423 <= 7'd35 &&
	       IF_wrMaster_batch_task_data_output_reg_337_BIT_ETC___d1367 >
	       7'd35,
	       x__h49423 <= 7'd34 &&
	       IF_wrMaster_batch_task_data_output_reg_337_BIT_ETC___d1367 >
	       7'd34,
	       x__h49423 <= 7'd33 &&
	       IF_wrMaster_batch_task_data_output_reg_337_BIT_ETC___d1367 >
	       7'd33,
	       x__h49423 <= 7'd32 &&
	       IF_wrMaster_batch_task_data_output_reg_337_BIT_ETC___d1367 >
	       7'd32,
	       x__h49423 <= 7'd31 &&
	       IF_wrMaster_batch_task_data_output_reg_337_BIT_ETC___d1367 >
	       7'd31,
	       x__h49423 <= 7'd30 &&
	       IF_wrMaster_batch_task_data_output_reg_337_BIT_ETC___d1367 >
	       7'd30,
	       x__h49423 <= 7'd29 &&
	       IF_wrMaster_batch_task_data_output_reg_337_BIT_ETC___d1367 >
	       7'd29,
	       x__h49423 <= 7'd28 &&
	       IF_wrMaster_batch_task_data_output_reg_337_BIT_ETC___d1367 >
	       7'd28,
	       x__h49423 <= 7'd27 &&
	       IF_wrMaster_batch_task_data_output_reg_337_BIT_ETC___d1367 >
	       7'd27,
	       x__h49423 <= 7'd26 &&
	       IF_wrMaster_batch_task_data_output_reg_337_BIT_ETC___d1367 >
	       7'd26,
	       x__h49423 <= 7'd25 &&
	       IF_wrMaster_batch_task_data_output_reg_337_BIT_ETC___d1367 >
	       7'd25,
	       x__h49423 <= 7'd24 &&
	       IF_wrMaster_batch_task_data_output_reg_337_BIT_ETC___d1367 >
	       7'd24,
	       x__h49423 <= 7'd23 &&
	       IF_wrMaster_batch_task_data_output_reg_337_BIT_ETC___d1367 >
	       7'd23,
	       x__h49423 <= 7'd22 &&
	       IF_wrMaster_batch_task_data_output_reg_337_BIT_ETC___d1367 >
	       7'd22,
	       x__h49423 <= 7'd21 &&
	       IF_wrMaster_batch_task_data_output_reg_337_BIT_ETC___d1367 >
	       7'd21,
	       x__h49423 <= 7'd20 &&
	       IF_wrMaster_batch_task_data_output_reg_337_BIT_ETC___d1367 >
	       7'd20,
	       x__h49423 <= 7'd19 &&
	       IF_wrMaster_batch_task_data_output_reg_337_BIT_ETC___d1367 >
	       7'd19,
	       x__h49423 <= 7'd18 &&
	       IF_wrMaster_batch_task_data_output_reg_337_BIT_ETC___d1367 >
	       7'd18,
	       x__h49423 <= 7'd17 &&
	       IF_wrMaster_batch_task_data_output_reg_337_BIT_ETC___d1367 >
	       7'd17,
	       x__h49423 <= 7'd16 &&
	       IF_wrMaster_batch_task_data_output_reg_337_BIT_ETC___d1367 >
	       7'd16,
	       x__h49423 <= 7'd15 &&
	       IF_wrMaster_batch_task_data_output_reg_337_BIT_ETC___d1367 >
	       7'd15,
	       x__h49423 <= 7'd14 &&
	       IF_wrMaster_batch_task_data_output_reg_337_BIT_ETC___d1367 >
	       7'd14,
	       x__h49423 <= 7'd13 &&
	       IF_wrMaster_batch_task_data_output_reg_337_BIT_ETC___d1367 >
	       7'd13,
	       x__h49423 <= 7'd12 &&
	       IF_wrMaster_batch_task_data_output_reg_337_BIT_ETC___d1367 >
	       7'd12,
	       x__h49423 <= 7'd11 &&
	       IF_wrMaster_batch_task_data_output_reg_337_BIT_ETC___d1367 >
	       7'd11,
	       x__h49423 <= 7'd10 &&
	       IF_wrMaster_batch_task_data_output_reg_337_BIT_ETC___d1367 >
	       7'd10,
	       x__h49423 <= 7'd9 &&
	       IF_wrMaster_batch_task_data_output_reg_337_BIT_ETC___d1367 >
	       7'd9,
	       x__h49423 <= 7'd8 &&
	       IF_wrMaster_batch_task_data_output_reg_337_BIT_ETC___d1367 >
	       7'd8,
	       x__h49423 <= 7'd7 &&
	       IF_wrMaster_batch_task_data_output_reg_337_BIT_ETC___d1367 >
	       7'd7,
	       x__h49423 <= 7'd6 &&
	       IF_wrMaster_batch_task_data_output_reg_337_BIT_ETC___d1367 >
	       7'd6,
	       x__h49423 <= 7'd5 &&
	       IF_wrMaster_batch_task_data_output_reg_337_BIT_ETC___d1367 >
	       7'd5,
	       x__h49423 <= 7'd4 &&
	       IF_wrMaster_batch_task_data_output_reg_337_BIT_ETC___d1367 >
	       7'd4,
	       x__h49423 <= 7'd3 &&
	       IF_wrMaster_batch_task_data_output_reg_337_BIT_ETC___d1367 >
	       7'd3,
	       x__h49423 <= 7'd2 &&
	       IF_wrMaster_batch_task_data_output_reg_337_BIT_ETC___d1367 >
	       7'd2,
	       x__h49423 <= 7'd1 &&
	       IF_wrMaster_batch_task_data_output_reg_337_BIT_ETC___d1367 >
	       7'd1,
	       x__h49423 == 7'd0 &&
	       IF_wrMaster_batch_task_data_output_reg_337_BIT_ETC___d1367 !=
	       7'd0 } ;
  assign x_transfers_total__h36399 =
	     rdMaster_batch_task_data_output_reg[32:7] - 26'd1 ;
  assign x_transfers_total__h57446 =
	     wrMaster_batch_task_data_output_reg[32:7] - 26'd1 ;
  assign y__h29579 = { 26'd0, x__h29512[5:0] } ;
  assign y__h29714 =
	     { 26'd0,
	       rdMaster_batch_reqGen_intermediateBuffer$D_OUT[105:100] } ;
  assign y__h29716 =
	     { 26'd0,
	       rdMaster_batch_reqGen_intermediateBuffer$D_OUT[111:106] } ;
  assign y__h29880 = { burst_length__h29857[5:0], 6'd0 } ;
  assign y__h37660 = { 26'd0, x__h37593[5:0] } ;
  assign y__h37795 =
	     { 26'd0,
	       wrMaster_batch_reqGen_intermediateBuffer$D_OUT[105:100] } ;
  assign y__h37797 =
	     { 26'd0,
	       wrMaster_batch_reqGen_intermediateBuffer$D_OUT[111:106] } ;
  assign y__h37961 = { burst_length__h37938[5:0], 6'd0 } ;
  always@(operation or
	  wrMaster_batch_task_data_output_reg_337_BITS_3_ETC___d1707 or
	  rdMaster_batch_task_data_output_reg or
	  rdMaster_batch_task_data_requests_reg or
	  wrMaster_batch_task_data_output_reg or
	  wrMaster_batch_task_data_requests_reg or
	  wrMaster_batch_outstanding_writes)
  begin
    case (operation)
      3'd0:
	  IF_operation_1_EQ_1_677_THEN_wrMaster_batch_ta_ETC___d1710 =
	      rdMaster_batch_task_data_output_reg[32:7] == 26'd0 &&
	      rdMaster_batch_task_data_requests_reg[94:69] == 26'd0;
      3'd1:
	  IF_operation_1_EQ_1_677_THEN_wrMaster_batch_ta_ETC___d1710 =
	      wrMaster_batch_task_data_output_reg[32:7] == 26'd0 &&
	      wrMaster_batch_task_data_requests_reg[94:69] == 26'd0 &&
	      wrMaster_batch_outstanding_writes == 6'd0;
      default: IF_operation_1_EQ_1_677_THEN_wrMaster_batch_ta_ETC___d1710 =
		   wrMaster_batch_task_data_output_reg_337_BITS_3_ETC___d1707;
    endcase
  end
  always@(rdMaster_warcache$wget)
  begin
    case (rdMaster_warcache$wget)
      4'd1, 4'd2, 4'd3, 4'd10, 4'd14, 4'd15:
	  CASE_rdMaster_warcachewget_1_rdMaster_warcach_ETC__q3 =
	      rdMaster_warcache$wget;
      default: CASE_rdMaster_warcachewget_1_rdMaster_warcach_ETC__q3 = 4'd11;
    endcase
  end
  always@(wrMaster_wawcache$wget)
  begin
    case (wrMaster_wawcache$wget)
      4'd1, 4'd2, 4'd3, 4'd6, 4'd7, 4'd14:
	  CASE_wrMaster_wawcachewget_1_wrMaster_wawcach_ETC__q4 =
	      wrMaster_wawcache$wget;
      default: CASE_wrMaster_wawcachewget_1_wrMaster_wawcach_ETC__q4 = 4'd15;
    endcase
  end
  always@(rdMaster_batch_read_rq_out$D_OUT)
  begin
    case (rdMaster_batch_read_rq_out$D_OUT[14:11])
      4'd0, 4'd1, 4'd2, 4'd3, 4'd10, 4'd14, 4'd15:
	  CASE_rdMaster_batch_read_rq_outD_OUT_BITS_14__ETC__q5 =
	      rdMaster_batch_read_rq_out$D_OUT[14:11];
      default: CASE_rdMaster_batch_read_rq_outD_OUT_BITS_14__ETC__q5 = 4'd11;
    endcase
  end
  always@(rdMaster_batch_master_rd_in_wDataIn$wget)
  begin
    case (rdMaster_batch_master_rd_in_wDataIn$wget[14:11])
      4'd1, 4'd2, 4'd3, 4'd10, 4'd14, 4'd15:
	  CASE_rdMaster_batch_master_rd_in_wDataInwget__ETC__q6 =
	      rdMaster_batch_master_rd_in_wDataIn$wget[14:11];
      default: CASE_rdMaster_batch_master_rd_in_wDataInwget__ETC__q6 = 4'd11;
    endcase
  end
  always@(rdMaster_batch_master_rd_in_rCache)
  begin
    case (rdMaster_batch_master_rd_in_rCache[14:11])
      4'd0, 4'd1, 4'd2, 4'd3, 4'd10, 4'd14, 4'd15:
	  CASE_rdMaster_batch_master_rd_in_rCache_BITS_1_ETC__q7 =
	      rdMaster_batch_master_rd_in_rCache[14:11];
      default: CASE_rdMaster_batch_master_rd_in_rCache_BITS_1_ETC__q7 = 4'd11;
    endcase
  end
  always@(rdMaster_batch_master_rd_in_memory$DOB)
  begin
    case (rdMaster_batch_master_rd_in_memory$DOB[14:11])
      4'd0, 4'd1, 4'd2, 4'd3, 4'd10, 4'd14, 4'd15:
	  CASE_rdMaster_batch_master_rd_in_memoryDOB_BI_ETC__q8 =
	      rdMaster_batch_master_rd_in_memory$DOB[14:11];
      default: CASE_rdMaster_batch_master_rd_in_memoryDOB_BI_ETC__q8 = 4'd11;
    endcase
  end
  always@(rdMaster_batch_master_rd_warcache$wget)
  begin
    case (rdMaster_batch_master_rd_warcache$wget)
      4'd1, 4'd2, 4'd3, 4'd10, 4'd14, 4'd15:
	  CASE_rdMaster_batch_master_rd_warcachewget_1__ETC__q9 =
	      rdMaster_batch_master_rd_warcache$wget;
      default: CASE_rdMaster_batch_master_rd_warcachewget_1__ETC__q9 = 4'd11;
    endcase
  end
  always@(wrMaster_batch_write_rq_out$D_OUT)
  begin
    case (wrMaster_batch_write_rq_out$D_OUT[14:11])
      4'd0, 4'd1, 4'd2, 4'd3, 4'd6, 4'd7, 4'd14:
	  CASE_wrMaster_batch_write_rq_outD_OUT_BITS_14_ETC__q10 =
	      wrMaster_batch_write_rq_out$D_OUT[14:11];
      default: CASE_wrMaster_batch_write_rq_outD_OUT_BITS_14_ETC__q10 = 4'd15;
    endcase
  end
  always@(wrMaster_batch_master_wr_in_addr_wDataIn$wget)
  begin
    case (wrMaster_batch_master_wr_in_addr_wDataIn$wget[14:11])
      4'd1, 4'd2, 4'd3, 4'd6, 4'd7, 4'd14:
	  CASE_wrMaster_batch_master_wr_in_addr_wDataIn_ETC__q11 =
	      wrMaster_batch_master_wr_in_addr_wDataIn$wget[14:11];
      default: CASE_wrMaster_batch_master_wr_in_addr_wDataIn_ETC__q11 = 4'd15;
    endcase
  end
  always@(wrMaster_batch_master_wr_in_addr_rCache)
  begin
    case (wrMaster_batch_master_wr_in_addr_rCache[14:11])
      4'd0, 4'd1, 4'd2, 4'd3, 4'd6, 4'd7, 4'd14:
	  CASE_wrMaster_batch_master_wr_in_addr_rCache_B_ETC__q12 =
	      wrMaster_batch_master_wr_in_addr_rCache[14:11];
      default: CASE_wrMaster_batch_master_wr_in_addr_rCache_B_ETC__q12 =
		   4'd15;
    endcase
  end
  always@(wrMaster_batch_master_wr_in_addr_memory$DOB)
  begin
    case (wrMaster_batch_master_wr_in_addr_memory$DOB[14:11])
      4'd0, 4'd1, 4'd2, 4'd3, 4'd6, 4'd7, 4'd14:
	  CASE_wrMaster_batch_master_wr_in_addr_memoryD_ETC__q13 =
	      wrMaster_batch_master_wr_in_addr_memory$DOB[14:11];
      default: CASE_wrMaster_batch_master_wr_in_addr_memoryD_ETC__q13 = 4'd15;
    endcase
  end
  always@(wrMaster_batch_master_wr_wawcache$wget)
  begin
    case (wrMaster_batch_master_wr_wawcache$wget)
      4'd1, 4'd2, 4'd3, 4'd6, 4'd7, 4'd14:
	  CASE_wrMaster_batch_master_wr_wawcachewget_1__ETC__q14 =
	      wrMaster_batch_master_wr_wawcache$wget;
      default: CASE_wrMaster_batch_master_wr_wawcachewget_1__ETC__q14 = 4'd15;
    endcase
  end

  // handling of inlined registers

  always@(posedge CLK)
  begin
    if (RST_N == `BSV_RESET_VALUE)
      begin
        byteLength <= `BSV_ASSIGNMENT_DELAY 64'd0;
	chunks_rd_completed <= `BSV_ASSIGNMENT_DELAY 64'd0;
	chunks_wr_completed <= `BSV_ASSIGNMENT_DELAY 64'd0;
	chunks_wr_sent <= `BSV_ASSIGNMENT_DELAY 64'd0;
	chunks_wr_started <= `BSV_ASSIGNMENT_DELAY 64'd0;
	cycles <= `BSV_ASSIGNMENT_DELAY 64'd0;
	error <= `BSV_ASSIGNMENT_DELAY 1'd0;
	idle <= `BSV_ASSIGNMENT_DELAY 1'd1;
	interruptR <= `BSV_ASSIGNMENT_DELAY 1'd0;
	lastCycle <= `BSV_ASSIGNMENT_DELAY 1'd0;
	rand_rd_r <= `BSV_ASSIGNMENT_DELAY 32'd1;
	rand_wr_r <= `BSV_ASSIGNMENT_DELAY 32'd1;
	rdMaster_batch_master_rd_in_rCache <= `BSV_ASSIGNMENT_DELAY
	    98'h0AAAAAAAAAAAAAAAAAAAAAAAA;
	rdMaster_batch_master_rd_in_rRdPtr <= `BSV_ASSIGNMENT_DELAY 3'd0;
	rdMaster_batch_master_rd_in_rWrPtr <= `BSV_ASSIGNMENT_DELAY 3'd0;
	rdMaster_batch_master_rd_out_1_rCache <= `BSV_ASSIGNMENT_DELAY
	    520'h2AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA;
	rdMaster_batch_master_rd_out_1_rRdPtr <= `BSV_ASSIGNMENT_DELAY 3'd0;
	rdMaster_batch_master_rd_out_1_rWrPtr <= `BSV_ASSIGNMENT_DELAY 3'd0;
	rdMaster_batch_outgoingBuffer_rCache <= `BSV_ASSIGNMENT_DELAY
	    522'h0AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA;
	rdMaster_batch_outgoingBuffer_rRdPtr <= `BSV_ASSIGNMENT_DELAY 9'd0;
	rdMaster_batch_outgoingBuffer_rWrPtr <= `BSV_ASSIGNMENT_DELAY 9'd0;
	rdMaster_batch_outstanding_beats <= `BSV_ASSIGNMENT_DELAY 12'd128;
	rdMaster_batch_task_data_output_reg <= `BSV_ASSIGNMENT_DELAY 45'd0;
	rdMaster_batch_task_data_requests_reg <= `BSV_ASSIGNMENT_DELAY 113'd0;
	rdMaster_in_rv <= `BSV_ASSIGNMENT_DELAY 95'h2AAAAAAAAAAAAAAAAAAAAAAA;
	rdMaster_out_1_rv <= `BSV_ASSIGNMENT_DELAY
	    517'h0AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA;
	remainingBeats <= `BSV_ASSIGNMENT_DELAY 8'd0;
	s_config_readBusy <= `BSV_ASSIGNMENT_DELAY 1'd0;
	s_config_readSlave_in_rv <= `BSV_ASSIGNMENT_DELAY 16'd10922;
	s_config_readSlave_out_rv <= `BSV_ASSIGNMENT_DELAY
	    67'h2AAAAAAAAAAAAAAAA;
	s_config_writeBusy <= `BSV_ASSIGNMENT_DELAY 1'd0;
	s_config_writeSlave_addrIn_rv <= `BSV_ASSIGNMENT_DELAY 16'd10922;
	s_config_writeSlave_dataIn_rv <= `BSV_ASSIGNMENT_DELAY
	    73'h0AAAAAAAAAAAAAAAAAA;
	s_config_writeSlave_in_rv <= `BSV_ASSIGNMENT_DELAY
	    88'h2AAAAAAAAAAAAAAAAAAAAA;
	s_config_writeSlave_out_rv <= `BSV_ASSIGNMENT_DELAY 3'd2;
	seed_rd <= `BSV_ASSIGNMENT_DELAY 64'd0;
	seed_wr <= `BSV_ASSIGNMENT_DELAY 64'd0;
	start <= `BSV_ASSIGNMENT_DELAY 1'd0;
	status <= `BSV_ASSIGNMENT_DELAY 64'd0;
	wrMaster_batch_beatsThisRequestCntr <= `BSV_ASSIGNMENT_DELAY 8'd0;
	wrMaster_batch_incomingBuffer_rCache <= `BSV_ASSIGNMENT_DELAY
	    522'h0AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA;
	wrMaster_batch_incomingBuffer_rRdPtr <= `BSV_ASSIGNMENT_DELAY 9'd0;
	wrMaster_batch_incomingBuffer_rWrPtr <= `BSV_ASSIGNMENT_DELAY 9'd0;
	wrMaster_batch_master_wr_in_addr_rCache <= `BSV_ASSIGNMENT_DELAY
	    98'h0AAAAAAAAAAAAAAAAAAAAAAAA;
	wrMaster_batch_master_wr_in_addr_rRdPtr <= `BSV_ASSIGNMENT_DELAY 3'd0;
	wrMaster_batch_master_wr_in_addr_rWrPtr <= `BSV_ASSIGNMENT_DELAY 3'd0;
	wrMaster_batch_master_wr_in_data_rCache <= `BSV_ASSIGNMENT_DELAY
	    581'h0AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA;
	wrMaster_batch_master_wr_in_data_rRdPtr <= `BSV_ASSIGNMENT_DELAY 3'd0;
	wrMaster_batch_master_wr_in_data_rWrPtr <= `BSV_ASSIGNMENT_DELAY 3'd0;
	wrMaster_batch_master_wr_out_rCache <= `BSV_ASSIGNMENT_DELAY 7'd42;
	wrMaster_batch_master_wr_out_rRdPtr <= `BSV_ASSIGNMENT_DELAY 3'd0;
	wrMaster_batch_master_wr_out_rWrPtr <= `BSV_ASSIGNMENT_DELAY 3'd0;
	wrMaster_batch_outstanding_beats <= `BSV_ASSIGNMENT_DELAY 12'd0;
	wrMaster_batch_outstanding_writes <= `BSV_ASSIGNMENT_DELAY 6'd0;
	wrMaster_batch_outstanding_writes_out <= `BSV_ASSIGNMENT_DELAY 6'd0;
	wrMaster_batch_task_data_output_reg <= `BSV_ASSIGNMENT_DELAY 45'd0;
	wrMaster_batch_task_data_requests_reg <= `BSV_ASSIGNMENT_DELAY 113'd0;
	wrMaster_in_addr_rv <= `BSV_ASSIGNMENT_DELAY
	    95'h2AAAAAAAAAAAAAAAAAAAAAAA;
	wrMaster_in_data_rv <= `BSV_ASSIGNMENT_DELAY
	    578'h0AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA;
	wrMaster_out_rv <= `BSV_ASSIGNMENT_DELAY 4'd2;
	writeFinished <= `BSV_ASSIGNMENT_DELAY 1'd0;
      end
    else
      begin
        if (byteLength$EN)
	  byteLength <= `BSV_ASSIGNMENT_DELAY byteLength$D_IN;
	if (chunks_rd_completed$EN)
	  chunks_rd_completed <= `BSV_ASSIGNMENT_DELAY
	      chunks_rd_completed$D_IN;
	if (chunks_wr_completed$EN)
	  chunks_wr_completed <= `BSV_ASSIGNMENT_DELAY
	      chunks_wr_completed$D_IN;
	if (chunks_wr_sent$EN)
	  chunks_wr_sent <= `BSV_ASSIGNMENT_DELAY chunks_wr_sent$D_IN;
	if (chunks_wr_started$EN)
	  chunks_wr_started <= `BSV_ASSIGNMENT_DELAY chunks_wr_started$D_IN;
	if (cycles$EN) cycles <= `BSV_ASSIGNMENT_DELAY cycles$D_IN;
	if (error$EN) error <= `BSV_ASSIGNMENT_DELAY error$D_IN;
	if (idle$EN) idle <= `BSV_ASSIGNMENT_DELAY idle$D_IN;
	if (interruptR$EN)
	  interruptR <= `BSV_ASSIGNMENT_DELAY interruptR$D_IN;
	if (lastCycle$EN) lastCycle <= `BSV_ASSIGNMENT_DELAY lastCycle$D_IN;
	if (rand_rd_r$EN) rand_rd_r <= `BSV_ASSIGNMENT_DELAY rand_rd_r$D_IN;
	if (rand_wr_r$EN) rand_wr_r <= `BSV_ASSIGNMENT_DELAY rand_wr_r$D_IN;
	if (rdMaster_batch_master_rd_in_rCache$EN)
	  rdMaster_batch_master_rd_in_rCache <= `BSV_ASSIGNMENT_DELAY
	      rdMaster_batch_master_rd_in_rCache$D_IN;
	if (rdMaster_batch_master_rd_in_rRdPtr$EN)
	  rdMaster_batch_master_rd_in_rRdPtr <= `BSV_ASSIGNMENT_DELAY
	      rdMaster_batch_master_rd_in_rRdPtr$D_IN;
	if (rdMaster_batch_master_rd_in_rWrPtr$EN)
	  rdMaster_batch_master_rd_in_rWrPtr <= `BSV_ASSIGNMENT_DELAY
	      rdMaster_batch_master_rd_in_rWrPtr$D_IN;
	if (rdMaster_batch_master_rd_out_1_rCache$EN)
	  rdMaster_batch_master_rd_out_1_rCache <= `BSV_ASSIGNMENT_DELAY
	      rdMaster_batch_master_rd_out_1_rCache$D_IN;
	if (rdMaster_batch_master_rd_out_1_rRdPtr$EN)
	  rdMaster_batch_master_rd_out_1_rRdPtr <= `BSV_ASSIGNMENT_DELAY
	      rdMaster_batch_master_rd_out_1_rRdPtr$D_IN;
	if (rdMaster_batch_master_rd_out_1_rWrPtr$EN)
	  rdMaster_batch_master_rd_out_1_rWrPtr <= `BSV_ASSIGNMENT_DELAY
	      rdMaster_batch_master_rd_out_1_rWrPtr$D_IN;
	if (rdMaster_batch_outgoingBuffer_rCache$EN)
	  rdMaster_batch_outgoingBuffer_rCache <= `BSV_ASSIGNMENT_DELAY
	      rdMaster_batch_outgoingBuffer_rCache$D_IN;
	if (rdMaster_batch_outgoingBuffer_rRdPtr$EN)
	  rdMaster_batch_outgoingBuffer_rRdPtr <= `BSV_ASSIGNMENT_DELAY
	      rdMaster_batch_outgoingBuffer_rRdPtr$D_IN;
	if (rdMaster_batch_outgoingBuffer_rWrPtr$EN)
	  rdMaster_batch_outgoingBuffer_rWrPtr <= `BSV_ASSIGNMENT_DELAY
	      rdMaster_batch_outgoingBuffer_rWrPtr$D_IN;
	if (rdMaster_batch_outstanding_beats$EN)
	  rdMaster_batch_outstanding_beats <= `BSV_ASSIGNMENT_DELAY
	      rdMaster_batch_outstanding_beats$D_IN;
	if (rdMaster_batch_task_data_output_reg$EN)
	  rdMaster_batch_task_data_output_reg <= `BSV_ASSIGNMENT_DELAY
	      rdMaster_batch_task_data_output_reg$D_IN;
	if (rdMaster_batch_task_data_requests_reg$EN)
	  rdMaster_batch_task_data_requests_reg <= `BSV_ASSIGNMENT_DELAY
	      rdMaster_batch_task_data_requests_reg$D_IN;
	if (rdMaster_in_rv$EN)
	  rdMaster_in_rv <= `BSV_ASSIGNMENT_DELAY rdMaster_in_rv$D_IN;
	if (rdMaster_out_1_rv$EN)
	  rdMaster_out_1_rv <= `BSV_ASSIGNMENT_DELAY rdMaster_out_1_rv$D_IN;
	if (remainingBeats$EN)
	  remainingBeats <= `BSV_ASSIGNMENT_DELAY remainingBeats$D_IN;
	if (s_config_readBusy$EN)
	  s_config_readBusy <= `BSV_ASSIGNMENT_DELAY s_config_readBusy$D_IN;
	if (s_config_readSlave_in_rv$EN)
	  s_config_readSlave_in_rv <= `BSV_ASSIGNMENT_DELAY
	      s_config_readSlave_in_rv$D_IN;
	if (s_config_readSlave_out_rv$EN)
	  s_config_readSlave_out_rv <= `BSV_ASSIGNMENT_DELAY
	      s_config_readSlave_out_rv$D_IN;
	if (s_config_writeBusy$EN)
	  s_config_writeBusy <= `BSV_ASSIGNMENT_DELAY s_config_writeBusy$D_IN;
	if (s_config_writeSlave_addrIn_rv$EN)
	  s_config_writeSlave_addrIn_rv <= `BSV_ASSIGNMENT_DELAY
	      s_config_writeSlave_addrIn_rv$D_IN;
	if (s_config_writeSlave_dataIn_rv$EN)
	  s_config_writeSlave_dataIn_rv <= `BSV_ASSIGNMENT_DELAY
	      s_config_writeSlave_dataIn_rv$D_IN;
	if (s_config_writeSlave_in_rv$EN)
	  s_config_writeSlave_in_rv <= `BSV_ASSIGNMENT_DELAY
	      s_config_writeSlave_in_rv$D_IN;
	if (s_config_writeSlave_out_rv$EN)
	  s_config_writeSlave_out_rv <= `BSV_ASSIGNMENT_DELAY
	      s_config_writeSlave_out_rv$D_IN;
	if (seed_rd$EN) seed_rd <= `BSV_ASSIGNMENT_DELAY seed_rd$D_IN;
	if (seed_wr$EN) seed_wr <= `BSV_ASSIGNMENT_DELAY seed_wr$D_IN;
	if (start$EN) start <= `BSV_ASSIGNMENT_DELAY start$D_IN;
	if (status$EN) status <= `BSV_ASSIGNMENT_DELAY status$D_IN;
	if (wrMaster_batch_beatsThisRequestCntr$EN)
	  wrMaster_batch_beatsThisRequestCntr <= `BSV_ASSIGNMENT_DELAY
	      wrMaster_batch_beatsThisRequestCntr$D_IN;
	if (wrMaster_batch_incomingBuffer_rCache$EN)
	  wrMaster_batch_incomingBuffer_rCache <= `BSV_ASSIGNMENT_DELAY
	      wrMaster_batch_incomingBuffer_rCache$D_IN;
	if (wrMaster_batch_incomingBuffer_rRdPtr$EN)
	  wrMaster_batch_incomingBuffer_rRdPtr <= `BSV_ASSIGNMENT_DELAY
	      wrMaster_batch_incomingBuffer_rRdPtr$D_IN;
	if (wrMaster_batch_incomingBuffer_rWrPtr$EN)
	  wrMaster_batch_incomingBuffer_rWrPtr <= `BSV_ASSIGNMENT_DELAY
	      wrMaster_batch_incomingBuffer_rWrPtr$D_IN;
	if (wrMaster_batch_master_wr_in_addr_rCache$EN)
	  wrMaster_batch_master_wr_in_addr_rCache <= `BSV_ASSIGNMENT_DELAY
	      wrMaster_batch_master_wr_in_addr_rCache$D_IN;
	if (wrMaster_batch_master_wr_in_addr_rRdPtr$EN)
	  wrMaster_batch_master_wr_in_addr_rRdPtr <= `BSV_ASSIGNMENT_DELAY
	      wrMaster_batch_master_wr_in_addr_rRdPtr$D_IN;
	if (wrMaster_batch_master_wr_in_addr_rWrPtr$EN)
	  wrMaster_batch_master_wr_in_addr_rWrPtr <= `BSV_ASSIGNMENT_DELAY
	      wrMaster_batch_master_wr_in_addr_rWrPtr$D_IN;
	if (wrMaster_batch_master_wr_in_data_rCache$EN)
	  wrMaster_batch_master_wr_in_data_rCache <= `BSV_ASSIGNMENT_DELAY
	      wrMaster_batch_master_wr_in_data_rCache$D_IN;
	if (wrMaster_batch_master_wr_in_data_rRdPtr$EN)
	  wrMaster_batch_master_wr_in_data_rRdPtr <= `BSV_ASSIGNMENT_DELAY
	      wrMaster_batch_master_wr_in_data_rRdPtr$D_IN;
	if (wrMaster_batch_master_wr_in_data_rWrPtr$EN)
	  wrMaster_batch_master_wr_in_data_rWrPtr <= `BSV_ASSIGNMENT_DELAY
	      wrMaster_batch_master_wr_in_data_rWrPtr$D_IN;
	if (wrMaster_batch_master_wr_out_rCache$EN)
	  wrMaster_batch_master_wr_out_rCache <= `BSV_ASSIGNMENT_DELAY
	      wrMaster_batch_master_wr_out_rCache$D_IN;
	if (wrMaster_batch_master_wr_out_rRdPtr$EN)
	  wrMaster_batch_master_wr_out_rRdPtr <= `BSV_ASSIGNMENT_DELAY
	      wrMaster_batch_master_wr_out_rRdPtr$D_IN;
	if (wrMaster_batch_master_wr_out_rWrPtr$EN)
	  wrMaster_batch_master_wr_out_rWrPtr <= `BSV_ASSIGNMENT_DELAY
	      wrMaster_batch_master_wr_out_rWrPtr$D_IN;
	if (wrMaster_batch_outstanding_beats$EN)
	  wrMaster_batch_outstanding_beats <= `BSV_ASSIGNMENT_DELAY
	      wrMaster_batch_outstanding_beats$D_IN;
	if (wrMaster_batch_outstanding_writes$EN)
	  wrMaster_batch_outstanding_writes <= `BSV_ASSIGNMENT_DELAY
	      wrMaster_batch_outstanding_writes$D_IN;
	if (wrMaster_batch_outstanding_writes_out$EN)
	  wrMaster_batch_outstanding_writes_out <= `BSV_ASSIGNMENT_DELAY
	      wrMaster_batch_outstanding_writes_out$D_IN;
	if (wrMaster_batch_task_data_output_reg$EN)
	  wrMaster_batch_task_data_output_reg <= `BSV_ASSIGNMENT_DELAY
	      wrMaster_batch_task_data_output_reg$D_IN;
	if (wrMaster_batch_task_data_requests_reg$EN)
	  wrMaster_batch_task_data_requests_reg <= `BSV_ASSIGNMENT_DELAY
	      wrMaster_batch_task_data_requests_reg$D_IN;
	if (wrMaster_in_addr_rv$EN)
	  wrMaster_in_addr_rv <= `BSV_ASSIGNMENT_DELAY
	      wrMaster_in_addr_rv$D_IN;
	if (wrMaster_in_data_rv$EN)
	  wrMaster_in_data_rv <= `BSV_ASSIGNMENT_DELAY
	      wrMaster_in_data_rv$D_IN;
	if (wrMaster_out_rv$EN)
	  wrMaster_out_rv <= `BSV_ASSIGNMENT_DELAY wrMaster_out_rv$D_IN;
	if (writeFinished$EN)
	  writeFinished <= `BSV_ASSIGNMENT_DELAY writeFinished$D_IN;
      end
    if (cycleCount$EN) cycleCount <= `BSV_ASSIGNMENT_DELAY cycleCount$D_IN;
    if (first$EN) first <= `BSV_ASSIGNMENT_DELAY first$D_IN;
    if (latency$EN) latency <= `BSV_ASSIGNMENT_DELAY latency$D_IN;
    if (operation$EN) operation <= `BSV_ASSIGNMENT_DELAY operation$D_IN;
  end

  always@(posedge CLK or `BSV_RESET_EDGE RST_N)
  if (RST_N == `BSV_RESET_VALUE)
    begin
      rdMaster_batch_master_rd_isRst_isInReset <= `BSV_ASSIGNMENT_DELAY 1'd1;
      rdMaster_isRst_isInReset <= `BSV_ASSIGNMENT_DELAY 1'd1;
      s_config_readSlave_isRst_isInReset <= `BSV_ASSIGNMENT_DELAY 1'd1;
      s_config_writeSlave_isRst_isInReset <= `BSV_ASSIGNMENT_DELAY 1'd1;
      wrMaster_batch_master_wr_isRst_isInReset <= `BSV_ASSIGNMENT_DELAY 1'd1;
      wrMaster_isRst_isInReset <= `BSV_ASSIGNMENT_DELAY 1'd1;
    end
  else
    begin
      if (rdMaster_batch_master_rd_isRst_isInReset$EN)
	rdMaster_batch_master_rd_isRst_isInReset <= `BSV_ASSIGNMENT_DELAY
	    rdMaster_batch_master_rd_isRst_isInReset$D_IN;
      if (rdMaster_isRst_isInReset$EN)
	rdMaster_isRst_isInReset <= `BSV_ASSIGNMENT_DELAY
	    rdMaster_isRst_isInReset$D_IN;
      if (s_config_readSlave_isRst_isInReset$EN)
	s_config_readSlave_isRst_isInReset <= `BSV_ASSIGNMENT_DELAY
	    s_config_readSlave_isRst_isInReset$D_IN;
      if (s_config_writeSlave_isRst_isInReset$EN)
	s_config_writeSlave_isRst_isInReset <= `BSV_ASSIGNMENT_DELAY
	    s_config_writeSlave_isRst_isInReset$D_IN;
      if (wrMaster_batch_master_wr_isRst_isInReset$EN)
	wrMaster_batch_master_wr_isRst_isInReset <= `BSV_ASSIGNMENT_DELAY
	    wrMaster_batch_master_wr_isRst_isInReset$D_IN;
      if (wrMaster_isRst_isInReset$EN)
	wrMaster_isRst_isInReset <= `BSV_ASSIGNMENT_DELAY
	    wrMaster_isRst_isInReset$D_IN;
    end

  // synopsys translate_off
  `ifdef BSV_NO_INITIAL_BLOCKS
  `else // not BSV_NO_INITIAL_BLOCKS
  initial
  begin
    byteLength = 64'hAAAAAAAAAAAAAAAA;
    chunks_rd_completed = 64'hAAAAAAAAAAAAAAAA;
    chunks_wr_completed = 64'hAAAAAAAAAAAAAAAA;
    chunks_wr_sent = 64'hAAAAAAAAAAAAAAAA;
    chunks_wr_started = 64'hAAAAAAAAAAAAAAAA;
    cycleCount = 64'hAAAAAAAAAAAAAAAA;
    cycles = 64'hAAAAAAAAAAAAAAAA;
    error = 1'h0;
    first = 1'h0;
    idle = 1'h0;
    interruptR = 1'h0;
    lastCycle = 1'h0;
    latency = 64'hAAAAAAAAAAAAAAAA;
    operation = 3'h2;
    rand_rd_r = 32'hAAAAAAAA;
    rand_wr_r = 32'hAAAAAAAA;
    rdMaster_batch_master_rd_in_rCache = 98'h2AAAAAAAAAAAAAAAAAAAAAAAA;
    rdMaster_batch_master_rd_in_rRdPtr = 3'h2;
    rdMaster_batch_master_rd_in_rWrPtr = 3'h2;
    rdMaster_batch_master_rd_isRst_isInReset = 1'h0;
    rdMaster_batch_master_rd_out_1_rCache =
	520'hAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA;
    rdMaster_batch_master_rd_out_1_rRdPtr = 3'h2;
    rdMaster_batch_master_rd_out_1_rWrPtr = 3'h2;
    rdMaster_batch_outgoingBuffer_rCache =
	522'h2AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA;
    rdMaster_batch_outgoingBuffer_rRdPtr = 9'h0AA;
    rdMaster_batch_outgoingBuffer_rWrPtr = 9'h0AA;
    rdMaster_batch_outstanding_beats = 12'hAAA;
    rdMaster_batch_task_data_output_reg = 45'h0AAAAAAAAAAA;
    rdMaster_batch_task_data_requests_reg =
	113'h0AAAAAAAAAAAAAAAAAAAAAAAAAAAA;
    rdMaster_in_rv = 95'h2AAAAAAAAAAAAAAAAAAAAAAA;
    rdMaster_isRst_isInReset = 1'h0;
    rdMaster_out_1_rv =
	517'h0AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA;
    remainingBeats = 8'hAA;
    s_config_readBusy = 1'h0;
    s_config_readSlave_in_rv = 16'hAAAA;
    s_config_readSlave_isRst_isInReset = 1'h0;
    s_config_readSlave_out_rv = 67'h2AAAAAAAAAAAAAAAA;
    s_config_writeBusy = 1'h0;
    s_config_writeSlave_addrIn_rv = 16'hAAAA;
    s_config_writeSlave_dataIn_rv = 73'h0AAAAAAAAAAAAAAAAAA;
    s_config_writeSlave_in_rv = 88'hAAAAAAAAAAAAAAAAAAAAAA;
    s_config_writeSlave_isRst_isInReset = 1'h0;
    s_config_writeSlave_out_rv = 3'h2;
    seed_rd = 64'hAAAAAAAAAAAAAAAA;
    seed_wr = 64'hAAAAAAAAAAAAAAAA;
    start = 1'h0;
    status = 64'hAAAAAAAAAAAAAAAA;
    wrMaster_batch_beatsThisRequestCntr = 8'hAA;
    wrMaster_batch_incomingBuffer_rCache =
	522'h2AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA;
    wrMaster_batch_incomingBuffer_rRdPtr = 9'h0AA;
    wrMaster_batch_incomingBuffer_rWrPtr = 9'h0AA;
    wrMaster_batch_master_wr_in_addr_rCache = 98'h2AAAAAAAAAAAAAAAAAAAAAAAA;
    wrMaster_batch_master_wr_in_addr_rRdPtr = 3'h2;
    wrMaster_batch_master_wr_in_addr_rWrPtr = 3'h2;
    wrMaster_batch_master_wr_in_data_rCache =
	581'h0AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA;
    wrMaster_batch_master_wr_in_data_rRdPtr = 3'h2;
    wrMaster_batch_master_wr_in_data_rWrPtr = 3'h2;
    wrMaster_batch_master_wr_isRst_isInReset = 1'h0;
    wrMaster_batch_master_wr_out_rCache = 7'h2A;
    wrMaster_batch_master_wr_out_rRdPtr = 3'h2;
    wrMaster_batch_master_wr_out_rWrPtr = 3'h2;
    wrMaster_batch_outstanding_beats = 12'hAAA;
    wrMaster_batch_outstanding_writes = 6'h2A;
    wrMaster_batch_outstanding_writes_out = 6'h2A;
    wrMaster_batch_task_data_output_reg = 45'h0AAAAAAAAAAA;
    wrMaster_batch_task_data_requests_reg =
	113'h0AAAAAAAAAAAAAAAAAAAAAAAAAAAA;
    wrMaster_in_addr_rv = 95'h2AAAAAAAAAAAAAAAAAAAAAAA;
    wrMaster_in_data_rv =
	578'h2AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA;
    wrMaster_isRst_isInReset = 1'h0;
    wrMaster_out_rv = 4'hA;
    writeFinished = 1'h0;
  end
  `endif // BSV_NO_INITIAL_BLOCKS
  // synopsys translate_on

  // handling of system tasks

  // synopsys translate_off
  always@(negedge CLK)
  begin
    #0;
    if (RST_N != `BSV_RESET_VALUE)
      if ((WILL_FIRE_RL_s_config_axiReadSpecial_1 ||
	   WILL_FIRE_RL_s_config_axiReadSpecialIsHandled_1) &&
	  (WILL_FIRE_RL_s_config_axiReadSpecial_2 ||
	   WILL_FIRE_RL_s_config_axiReadSpecialIsHandled_2 ||
	   WILL_FIRE_RL_s_config_axiReadSpecial_3 ||
	   WILL_FIRE_RL_s_config_axiReadSpecialIsHandled_3 ||
	   WILL_FIRE_RL_s_config_axiReadSpecial_4 ||
	   WILL_FIRE_RL_s_config_axiReadSpecialIsHandled_4 ||
	   WILL_FIRE_RL_s_config_axiReadSpecial_5 ||
	   WILL_FIRE_RL_s_config_axiReadSpecialIsHandled_5 ||
	   WILL_FIRE_RL_s_config_axiReadSpecial_6 ||
	   WILL_FIRE_RL_s_config_axiReadSpecialIsHandled_6))
	$display("Error: \"/home/johannes/Documents/Bluespec/BlueAXI/src/GenericAxi4LiteSlave.bsv\", line 238, column 18: (R0001)\n  Mutually exclusive rules (from the ME sets [RL_s_config_axiReadSpecial_1,\n  RL_s_config_axiReadSpecialIsHandled_1] and [RL_s_config_axiReadSpecial_2,\n  RL_s_config_axiReadSpecialIsHandled_2, RL_s_config_axiReadSpecial_3,\n  RL_s_config_axiReadSpecialIsHandled_3, RL_s_config_axiReadSpecial_4,\n  RL_s_config_axiReadSpecialIsHandled_4, RL_s_config_axiReadSpecial_5,\n  RL_s_config_axiReadSpecialIsHandled_5, RL_s_config_axiReadSpecial_6,\n  RL_s_config_axiReadSpecialIsHandled_6] ) fired in the same clock cycle.\n");
    if (RST_N != `BSV_RESET_VALUE)
      if ((WILL_FIRE_RL_s_config_axiReadSpecial_2 ||
	   WILL_FIRE_RL_s_config_axiReadSpecialIsHandled_2) &&
	  (WILL_FIRE_RL_s_config_axiReadSpecial_3 ||
	   WILL_FIRE_RL_s_config_axiReadSpecialIsHandled_3 ||
	   WILL_FIRE_RL_s_config_axiReadSpecial_4 ||
	   WILL_FIRE_RL_s_config_axiReadSpecialIsHandled_4 ||
	   WILL_FIRE_RL_s_config_axiReadSpecial_5 ||
	   WILL_FIRE_RL_s_config_axiReadSpecialIsHandled_5 ||
	   WILL_FIRE_RL_s_config_axiReadSpecial_6 ||
	   WILL_FIRE_RL_s_config_axiReadSpecialIsHandled_6))
	$display("Error: \"/home/johannes/Documents/Bluespec/BlueAXI/src/GenericAxi4LiteSlave.bsv\", line 238, column 18: (R0001)\n  Mutually exclusive rules (from the ME sets [RL_s_config_axiReadSpecial_2,\n  RL_s_config_axiReadSpecialIsHandled_2] and [RL_s_config_axiReadSpecial_3,\n  RL_s_config_axiReadSpecialIsHandled_3, RL_s_config_axiReadSpecial_4,\n  RL_s_config_axiReadSpecialIsHandled_4, RL_s_config_axiReadSpecial_5,\n  RL_s_config_axiReadSpecialIsHandled_5, RL_s_config_axiReadSpecial_6,\n  RL_s_config_axiReadSpecialIsHandled_6] ) fired in the same clock cycle.\n");
    if (RST_N != `BSV_RESET_VALUE)
      if ((WILL_FIRE_RL_s_config_axiReadSpecial_3 ||
	   WILL_FIRE_RL_s_config_axiReadSpecialIsHandled_3) &&
	  (WILL_FIRE_RL_s_config_axiReadSpecial_4 ||
	   WILL_FIRE_RL_s_config_axiReadSpecialIsHandled_4 ||
	   WILL_FIRE_RL_s_config_axiReadSpecial_5 ||
	   WILL_FIRE_RL_s_config_axiReadSpecialIsHandled_5 ||
	   WILL_FIRE_RL_s_config_axiReadSpecial_6 ||
	   WILL_FIRE_RL_s_config_axiReadSpecialIsHandled_6))
	$display("Error: \"/home/johannes/Documents/Bluespec/BlueAXI/src/GenericAxi4LiteSlave.bsv\", line 238, column 18: (R0001)\n  Mutually exclusive rules (from the ME sets [RL_s_config_axiReadSpecial_3,\n  RL_s_config_axiReadSpecialIsHandled_3] and [RL_s_config_axiReadSpecial_4,\n  RL_s_config_axiReadSpecialIsHandled_4, RL_s_config_axiReadSpecial_5,\n  RL_s_config_axiReadSpecialIsHandled_5, RL_s_config_axiReadSpecial_6,\n  RL_s_config_axiReadSpecialIsHandled_6] ) fired in the same clock cycle.\n");
    if (RST_N != `BSV_RESET_VALUE)
      if ((WILL_FIRE_RL_s_config_axiReadSpecial_4 ||
	   WILL_FIRE_RL_s_config_axiReadSpecialIsHandled_4) &&
	  (WILL_FIRE_RL_s_config_axiReadSpecial_5 ||
	   WILL_FIRE_RL_s_config_axiReadSpecialIsHandled_5 ||
	   WILL_FIRE_RL_s_config_axiReadSpecial_6 ||
	   WILL_FIRE_RL_s_config_axiReadSpecialIsHandled_6))
	$display("Error: \"/home/johannes/Documents/Bluespec/BlueAXI/src/GenericAxi4LiteSlave.bsv\", line 238, column 18: (R0001)\n  Mutually exclusive rules (from the ME sets [RL_s_config_axiReadSpecial_4,\n  RL_s_config_axiReadSpecialIsHandled_4] and [RL_s_config_axiReadSpecial_5,\n  RL_s_config_axiReadSpecialIsHandled_5, RL_s_config_axiReadSpecial_6,\n  RL_s_config_axiReadSpecialIsHandled_6] ) fired in the same clock cycle.\n");
    if (RST_N != `BSV_RESET_VALUE)
      if ((WILL_FIRE_RL_s_config_axiReadSpecial_5 ||
	   WILL_FIRE_RL_s_config_axiReadSpecialIsHandled_5) &&
	  (WILL_FIRE_RL_s_config_axiReadSpecial_6 ||
	   WILL_FIRE_RL_s_config_axiReadSpecialIsHandled_6))
	$display("Error: \"/home/johannes/Documents/Bluespec/BlueAXI/src/GenericAxi4LiteSlave.bsv\", line 238, column 18: (R0001)\n  Mutually exclusive rules (from the ME sets [RL_s_config_axiReadSpecial_5,\n  RL_s_config_axiReadSpecialIsHandled_5] and [RL_s_config_axiReadSpecial_6,\n  RL_s_config_axiReadSpecialIsHandled_6] ) fired in the same clock cycle.\n");
    if (RST_N != `BSV_RESET_VALUE)
      if ((WILL_FIRE_RL_s_config_axiReadSpecial ||
	   WILL_FIRE_RL_s_config_axiReadSpecialIsHandled) &&
	  (WILL_FIRE_RL_s_config_axiReadSpecial_1 ||
	   WILL_FIRE_RL_s_config_axiReadSpecialIsHandled_1 ||
	   WILL_FIRE_RL_s_config_axiReadSpecial_2 ||
	   WILL_FIRE_RL_s_config_axiReadSpecialIsHandled_2 ||
	   WILL_FIRE_RL_s_config_axiReadSpecial_3 ||
	   WILL_FIRE_RL_s_config_axiReadSpecialIsHandled_3 ||
	   WILL_FIRE_RL_s_config_axiReadSpecial_4 ||
	   WILL_FIRE_RL_s_config_axiReadSpecialIsHandled_4 ||
	   WILL_FIRE_RL_s_config_axiReadSpecial_5 ||
	   WILL_FIRE_RL_s_config_axiReadSpecialIsHandled_5 ||
	   WILL_FIRE_RL_s_config_axiReadSpecial_6 ||
	   WILL_FIRE_RL_s_config_axiReadSpecialIsHandled_6))
	$display("Error: \"/home/johannes/Documents/Bluespec/BlueAXI/src/GenericAxi4LiteSlave.bsv\", line 238, column 18: (R0001)\n  Mutually exclusive rules (from the ME sets [RL_s_config_axiReadSpecial,\n  RL_s_config_axiReadSpecialIsHandled] and [RL_s_config_axiReadSpecial_1,\n  RL_s_config_axiReadSpecialIsHandled_1, RL_s_config_axiReadSpecial_2,\n  RL_s_config_axiReadSpecialIsHandled_2, RL_s_config_axiReadSpecial_3,\n  RL_s_config_axiReadSpecialIsHandled_3, RL_s_config_axiReadSpecial_4,\n  RL_s_config_axiReadSpecialIsHandled_4, RL_s_config_axiReadSpecial_5,\n  RL_s_config_axiReadSpecialIsHandled_5, RL_s_config_axiReadSpecial_6,\n  RL_s_config_axiReadSpecialIsHandled_6] ) fired in the same clock cycle.\n");
    if (RST_N != `BSV_RESET_VALUE)
      if ((WILL_FIRE_RL_s_config_axiReadSpecial ||
	   WILL_FIRE_RL_s_config_axiReadSpecialIsHandled ||
	   WILL_FIRE_RL_s_config_axiReadSpecial_1 ||
	   WILL_FIRE_RL_s_config_axiReadSpecialIsHandled_1 ||
	   WILL_FIRE_RL_s_config_axiReadSpecial_2 ||
	   WILL_FIRE_RL_s_config_axiReadSpecialIsHandled_2 ||
	   WILL_FIRE_RL_s_config_axiReadSpecial_3 ||
	   WILL_FIRE_RL_s_config_axiReadSpecialIsHandled_3 ||
	   WILL_FIRE_RL_s_config_axiReadSpecial_4 ||
	   WILL_FIRE_RL_s_config_axiReadSpecialIsHandled_4 ||
	   WILL_FIRE_RL_s_config_axiReadSpecial_5 ||
	   WILL_FIRE_RL_s_config_axiReadSpecialIsHandled_5 ||
	   WILL_FIRE_RL_s_config_axiReadSpecial_6 ||
	   WILL_FIRE_RL_s_config_axiReadSpecialIsHandled_6) &&
	  WILL_FIRE_RL_s_config_axiReadFallback)
	$display("Error: \"/home/johannes/Documents/Bluespec/BlueAXI/src/GenericAxi4LiteSlave.bsv\", line 238, column 18: (R0001)\n  Mutually exclusive rules (from the ME sets [RL_s_config_axiReadSpecial,\n  RL_s_config_axiReadSpecialIsHandled, RL_s_config_axiReadSpecial_1,\n  RL_s_config_axiReadSpecialIsHandled_1, RL_s_config_axiReadSpecial_2,\n  RL_s_config_axiReadSpecialIsHandled_2, RL_s_config_axiReadSpecial_3,\n  RL_s_config_axiReadSpecialIsHandled_3, RL_s_config_axiReadSpecial_4,\n  RL_s_config_axiReadSpecialIsHandled_4, RL_s_config_axiReadSpecial_5,\n  RL_s_config_axiReadSpecialIsHandled_5, RL_s_config_axiReadSpecial_6,\n  RL_s_config_axiReadSpecialIsHandled_6] and [RL_s_config_axiReadFallback] )\n  fired in the same clock cycle.\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_s_config_1_axiWriteSpecialIsHandled_1 &&
	  WILL_FIRE_RL_s_config_1_axiWriteSpecialIsHandled)
	$display("Error: \"/home/johannes/Documents/Bluespec/BlueAXI/src/GenericAxi4LiteSlave.bsv\", line 338, column 18: (R0002)\n  Conflict-free rules RL_s_config_1_axiWriteSpecialIsHandled_1 and\n  RL_s_config_1_axiWriteSpecialIsHandled called conflicting methods wset and\n  wset of module instance s_config_writeIsHandled.\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_s_config_1_axiWriteSpecialIsHandled_1 &&
	  WILL_FIRE_RL_s_config_1_axiWriteSpecial)
	$display("Error: \"/home/johannes/Documents/Bluespec/BlueAXI/src/GenericAxi4LiteSlave.bsv\", line 338, column 18: (R0002)\n  Conflict-free rules RL_s_config_1_axiWriteSpecialIsHandled_1 and\n  RL_s_config_1_axiWriteSpecial called conflicting methods port0__read and\n  port0__write of module instance s_config_writeSlave_in_rv.\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_s_config_1_axiWriteSpecial_1 &&
	  WILL_FIRE_RL_s_config_1_axiWriteSpecial)
	$display("Error: \"/home/johannes/Documents/Bluespec/BlueAXI/src/GenericAxi4LiteSlave.bsv\", line 327, column 18: (R0002)\n  Conflict-free rules RL_s_config_1_axiWriteSpecial_1 and\n  RL_s_config_1_axiWriteSpecial called conflicting methods port0__read and\n  port0__write of module instance s_config_writeSlave_in_rv.\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_s_config_1_axiWriteSpecial_1 &&
	  WILL_FIRE_RL_s_config_1_axiWriteSpecial &&
	  s_config_writeSlave_in_rv[81:78] == 4'd2 &&
	  s_config_writeSlave_in_rv[87] &&
	  !s_config_writeBusy)
	$display("Error: \"/home/johannes/Documents/Bluespec/BlueAXI/src/GenericAxi4LiteSlave.bsv\", line 327, column 18: (R0002)\n  Conflict-free rules RL_s_config_1_axiWriteSpecial_1 and\n  RL_s_config_1_axiWriteSpecial called conflicting methods port1__read and\n  port1__write of module instance s_config_writeSlave_out_rv.\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_checkActivityBatch &&
	  IF_operation_1_EQ_1_677_THEN_wrMaster_batch_ta_ETC___d1710 &&
	  lastCycle)
	begin
	  v__h58615 = $time;
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_checkActivityBatch &&
	  IF_operation_1_EQ_1_677_THEN_wrMaster_batch_ta_ETC___d1710 &&
	  lastCycle)
	$write("%c[34m", $signed(32'd27));
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_checkActivityBatch &&
	  IF_operation_1_EQ_1_677_THEN_wrMaster_batch_ta_ETC___d1710 &&
	  lastCycle)
	$write("(%0d) ", v__h58615, "Completed in %d cycles", cycleCount);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_checkActivityBatch &&
	  IF_operation_1_EQ_1_677_THEN_wrMaster_batch_ta_ETC___d1710 &&
	  lastCycle)
	$write("%c[0m", $signed(32'd27));
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_checkActivityBatch &&
	  IF_operation_1_EQ_1_677_THEN_wrMaster_batch_ta_ETC___d1710 &&
	  lastCycle)
	$write("\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_dropReadResponseLatency && rdMaster_out_1_rv[0])
	begin
	  v__h59090 = $time;
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_dropReadResponseLatency && rdMaster_out_1_rv[0])
	$write("%c[34m", $signed(32'd27));
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_dropReadResponseLatency && rdMaster_out_1_rv[0])
	$write("(%0d) ", v__h59090, "Read Latency: %d cycles", latency);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_dropReadResponseLatency && rdMaster_out_1_rv[0])
	$write("%c[0m", $signed(32'd27));
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_dropReadResponseLatency && rdMaster_out_1_rv[0])
	$write("\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_s_config_1_axiWriteSpecialIsHandled_2 &&
	  WILL_FIRE_RL_s_config_1_axiWriteSpecialIsHandled_1)
	$display("Error: \"/home/johannes/Documents/Bluespec/BlueAXI/src/GenericAxi4LiteSlave.bsv\", line 338, column 18: (R0002)\n  Conflict-free rules RL_s_config_1_axiWriteSpecialIsHandled_2 and\n  RL_s_config_1_axiWriteSpecialIsHandled_1 called conflicting methods wset and\n  wset of module instance s_config_writeIsHandled.\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_s_config_1_axiWriteSpecialIsHandled_2 &&
	  WILL_FIRE_RL_s_config_1_axiWriteSpecial_1)
	$display("Error: \"/home/johannes/Documents/Bluespec/BlueAXI/src/GenericAxi4LiteSlave.bsv\", line 338, column 18: (R0002)\n  Conflict-free rules RL_s_config_1_axiWriteSpecialIsHandled_2 and\n  RL_s_config_1_axiWriteSpecial_1 called conflicting methods port0__read and\n  port0__write of module instance s_config_writeSlave_in_rv.\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_s_config_1_axiWriteSpecialIsHandled_2 &&
	  WILL_FIRE_RL_s_config_1_axiWriteSpecialIsHandled)
	$display("Error: \"/home/johannes/Documents/Bluespec/BlueAXI/src/GenericAxi4LiteSlave.bsv\", line 338, column 18: (R0002)\n  Conflict-free rules RL_s_config_1_axiWriteSpecialIsHandled_2 and\n  RL_s_config_1_axiWriteSpecialIsHandled called conflicting methods wset and\n  wset of module instance s_config_writeIsHandled.\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_s_config_1_axiWriteSpecialIsHandled_2 &&
	  WILL_FIRE_RL_s_config_1_axiWriteSpecial)
	$display("Error: \"/home/johannes/Documents/Bluespec/BlueAXI/src/GenericAxi4LiteSlave.bsv\", line 338, column 18: (R0002)\n  Conflict-free rules RL_s_config_1_axiWriteSpecialIsHandled_2 and\n  RL_s_config_1_axiWriteSpecial called conflicting methods port0__read and\n  port0__write of module instance s_config_writeSlave_in_rv.\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_s_config_1_axiWriteSpecialIsHandled_3 &&
	  WILL_FIRE_RL_s_config_1_axiWriteSpecialIsHandled_2)
	$display("Error: \"/home/johannes/Documents/Bluespec/BlueAXI/src/GenericAxi4LiteSlave.bsv\", line 338, column 18: (R0002)\n  Conflict-free rules RL_s_config_1_axiWriteSpecialIsHandled_3 and\n  RL_s_config_1_axiWriteSpecialIsHandled_2 called conflicting methods wset and\n  wset of module instance s_config_writeIsHandled.\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_s_config_1_axiWriteSpecialIsHandled_3 &&
	  WILL_FIRE_RL_s_config_1_axiWriteSpecialIsHandled_1)
	$display("Error: \"/home/johannes/Documents/Bluespec/BlueAXI/src/GenericAxi4LiteSlave.bsv\", line 338, column 18: (R0002)\n  Conflict-free rules RL_s_config_1_axiWriteSpecialIsHandled_3 and\n  RL_s_config_1_axiWriteSpecialIsHandled_1 called conflicting methods wset and\n  wset of module instance s_config_writeIsHandled.\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_s_config_1_axiWriteSpecialIsHandled_3 &&
	  WILL_FIRE_RL_s_config_1_axiWriteSpecial_1)
	$display("Error: \"/home/johannes/Documents/Bluespec/BlueAXI/src/GenericAxi4LiteSlave.bsv\", line 338, column 18: (R0002)\n  Conflict-free rules RL_s_config_1_axiWriteSpecialIsHandled_3 and\n  RL_s_config_1_axiWriteSpecial_1 called conflicting methods port0__read and\n  port0__write of module instance s_config_writeSlave_in_rv.\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_s_config_1_axiWriteSpecialIsHandled_3 &&
	  WILL_FIRE_RL_s_config_1_axiWriteSpecialIsHandled)
	$display("Error: \"/home/johannes/Documents/Bluespec/BlueAXI/src/GenericAxi4LiteSlave.bsv\", line 338, column 18: (R0002)\n  Conflict-free rules RL_s_config_1_axiWriteSpecialIsHandled_3 and\n  RL_s_config_1_axiWriteSpecialIsHandled called conflicting methods wset and\n  wset of module instance s_config_writeIsHandled.\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_s_config_1_axiWriteSpecialIsHandled_3 &&
	  WILL_FIRE_RL_s_config_1_axiWriteSpecial)
	$display("Error: \"/home/johannes/Documents/Bluespec/BlueAXI/src/GenericAxi4LiteSlave.bsv\", line 338, column 18: (R0002)\n  Conflict-free rules RL_s_config_1_axiWriteSpecialIsHandled_3 and\n  RL_s_config_1_axiWriteSpecial called conflicting methods port0__read and\n  port0__write of module instance s_config_writeSlave_in_rv.\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_s_config_1_axiWriteSpecialIsHandled_4 &&
	  WILL_FIRE_RL_s_config_1_axiWriteSpecialIsHandled_3)
	$display("Error: \"/home/johannes/Documents/Bluespec/BlueAXI/src/GenericAxi4LiteSlave.bsv\", line 338, column 18: (R0002)\n  Conflict-free rules RL_s_config_1_axiWriteSpecialIsHandled_4 and\n  RL_s_config_1_axiWriteSpecialIsHandled_3 called conflicting methods wset and\n  wset of module instance s_config_writeIsHandled.\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_s_config_1_axiWriteSpecialIsHandled_4 &&
	  WILL_FIRE_RL_s_config_1_axiWriteSpecialIsHandled_2)
	$display("Error: \"/home/johannes/Documents/Bluespec/BlueAXI/src/GenericAxi4LiteSlave.bsv\", line 338, column 18: (R0002)\n  Conflict-free rules RL_s_config_1_axiWriteSpecialIsHandled_4 and\n  RL_s_config_1_axiWriteSpecialIsHandled_2 called conflicting methods wset and\n  wset of module instance s_config_writeIsHandled.\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_s_config_1_axiWriteSpecialIsHandled_4 &&
	  WILL_FIRE_RL_s_config_1_axiWriteSpecialIsHandled_1)
	$display("Error: \"/home/johannes/Documents/Bluespec/BlueAXI/src/GenericAxi4LiteSlave.bsv\", line 338, column 18: (R0002)\n  Conflict-free rules RL_s_config_1_axiWriteSpecialIsHandled_4 and\n  RL_s_config_1_axiWriteSpecialIsHandled_1 called conflicting methods wset and\n  wset of module instance s_config_writeIsHandled.\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_s_config_1_axiWriteSpecialIsHandled_4 &&
	  WILL_FIRE_RL_s_config_1_axiWriteSpecial_1)
	$display("Error: \"/home/johannes/Documents/Bluespec/BlueAXI/src/GenericAxi4LiteSlave.bsv\", line 338, column 18: (R0002)\n  Conflict-free rules RL_s_config_1_axiWriteSpecialIsHandled_4 and\n  RL_s_config_1_axiWriteSpecial_1 called conflicting methods port0__read and\n  port0__write of module instance s_config_writeSlave_in_rv.\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_s_config_1_axiWriteSpecialIsHandled_4 &&
	  WILL_FIRE_RL_s_config_1_axiWriteSpecialIsHandled)
	$display("Error: \"/home/johannes/Documents/Bluespec/BlueAXI/src/GenericAxi4LiteSlave.bsv\", line 338, column 18: (R0002)\n  Conflict-free rules RL_s_config_1_axiWriteSpecialIsHandled_4 and\n  RL_s_config_1_axiWriteSpecialIsHandled called conflicting methods wset and\n  wset of module instance s_config_writeIsHandled.\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_s_config_1_axiWriteSpecialIsHandled_4 &&
	  WILL_FIRE_RL_s_config_1_axiWriteSpecial)
	$display("Error: \"/home/johannes/Documents/Bluespec/BlueAXI/src/GenericAxi4LiteSlave.bsv\", line 338, column 18: (R0002)\n  Conflict-free rules RL_s_config_1_axiWriteSpecialIsHandled_4 and\n  RL_s_config_1_axiWriteSpecial called conflicting methods port0__read and\n  port0__write of module instance s_config_writeSlave_in_rv.\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_s_config_1_axiWriteSpecialIsHandled_5 &&
	  WILL_FIRE_RL_s_config_1_axiWriteSpecialIsHandled_4)
	$display("Error: \"/home/johannes/Documents/Bluespec/BlueAXI/src/GenericAxi4LiteSlave.bsv\", line 338, column 18: (R0002)\n  Conflict-free rules RL_s_config_1_axiWriteSpecialIsHandled_5 and\n  RL_s_config_1_axiWriteSpecialIsHandled_4 called conflicting methods wset and\n  wset of module instance s_config_writeIsHandled.\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_s_config_1_axiWriteSpecialIsHandled_5 &&
	  WILL_FIRE_RL_s_config_1_axiWriteSpecialIsHandled_3)
	$display("Error: \"/home/johannes/Documents/Bluespec/BlueAXI/src/GenericAxi4LiteSlave.bsv\", line 338, column 18: (R0002)\n  Conflict-free rules RL_s_config_1_axiWriteSpecialIsHandled_5 and\n  RL_s_config_1_axiWriteSpecialIsHandled_3 called conflicting methods wset and\n  wset of module instance s_config_writeIsHandled.\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_s_config_1_axiWriteSpecialIsHandled_5 &&
	  WILL_FIRE_RL_s_config_1_axiWriteSpecialIsHandled_2)
	$display("Error: \"/home/johannes/Documents/Bluespec/BlueAXI/src/GenericAxi4LiteSlave.bsv\", line 338, column 18: (R0002)\n  Conflict-free rules RL_s_config_1_axiWriteSpecialIsHandled_5 and\n  RL_s_config_1_axiWriteSpecialIsHandled_2 called conflicting methods wset and\n  wset of module instance s_config_writeIsHandled.\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_s_config_1_axiWriteSpecialIsHandled_5 &&
	  WILL_FIRE_RL_s_config_1_axiWriteSpecialIsHandled_1)
	$display("Error: \"/home/johannes/Documents/Bluespec/BlueAXI/src/GenericAxi4LiteSlave.bsv\", line 338, column 18: (R0002)\n  Conflict-free rules RL_s_config_1_axiWriteSpecialIsHandled_5 and\n  RL_s_config_1_axiWriteSpecialIsHandled_1 called conflicting methods wset and\n  wset of module instance s_config_writeIsHandled.\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_s_config_1_axiWriteSpecialIsHandled_5 &&
	  WILL_FIRE_RL_s_config_1_axiWriteSpecial_1)
	$display("Error: \"/home/johannes/Documents/Bluespec/BlueAXI/src/GenericAxi4LiteSlave.bsv\", line 338, column 18: (R0002)\n  Conflict-free rules RL_s_config_1_axiWriteSpecialIsHandled_5 and\n  RL_s_config_1_axiWriteSpecial_1 called conflicting methods port0__read and\n  port0__write of module instance s_config_writeSlave_in_rv.\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_s_config_1_axiWriteSpecialIsHandled_5 &&
	  WILL_FIRE_RL_s_config_1_axiWriteSpecialIsHandled)
	$display("Error: \"/home/johannes/Documents/Bluespec/BlueAXI/src/GenericAxi4LiteSlave.bsv\", line 338, column 18: (R0002)\n  Conflict-free rules RL_s_config_1_axiWriteSpecialIsHandled_5 and\n  RL_s_config_1_axiWriteSpecialIsHandled called conflicting methods wset and\n  wset of module instance s_config_writeIsHandled.\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_s_config_1_axiWriteSpecialIsHandled_5 &&
	  WILL_FIRE_RL_s_config_1_axiWriteSpecial)
	$display("Error: \"/home/johannes/Documents/Bluespec/BlueAXI/src/GenericAxi4LiteSlave.bsv\", line 338, column 18: (R0002)\n  Conflict-free rules RL_s_config_1_axiWriteSpecialIsHandled_5 and\n  RL_s_config_1_axiWriteSpecial called conflicting methods port0__read and\n  port0__write of module instance s_config_writeSlave_in_rv.\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_s_config_1_axiWriteSpecialIsHandled_6 &&
	  WILL_FIRE_RL_s_config_1_axiWriteSpecialIsHandled_5)
	$display("Error: \"/home/johannes/Documents/Bluespec/BlueAXI/src/GenericAxi4LiteSlave.bsv\", line 338, column 18: (R0002)\n  Conflict-free rules RL_s_config_1_axiWriteSpecialIsHandled_6 and\n  RL_s_config_1_axiWriteSpecialIsHandled_5 called conflicting methods wset and\n  wset of module instance s_config_writeIsHandled.\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_s_config_1_axiWriteSpecialIsHandled_6 &&
	  WILL_FIRE_RL_s_config_1_axiWriteSpecialIsHandled_4)
	$display("Error: \"/home/johannes/Documents/Bluespec/BlueAXI/src/GenericAxi4LiteSlave.bsv\", line 338, column 18: (R0002)\n  Conflict-free rules RL_s_config_1_axiWriteSpecialIsHandled_6 and\n  RL_s_config_1_axiWriteSpecialIsHandled_4 called conflicting methods wset and\n  wset of module instance s_config_writeIsHandled.\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_s_config_1_axiWriteSpecialIsHandled_6 &&
	  WILL_FIRE_RL_s_config_1_axiWriteSpecialIsHandled_3)
	$display("Error: \"/home/johannes/Documents/Bluespec/BlueAXI/src/GenericAxi4LiteSlave.bsv\", line 338, column 18: (R0002)\n  Conflict-free rules RL_s_config_1_axiWriteSpecialIsHandled_6 and\n  RL_s_config_1_axiWriteSpecialIsHandled_3 called conflicting methods wset and\n  wset of module instance s_config_writeIsHandled.\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_s_config_1_axiWriteSpecialIsHandled_6 &&
	  WILL_FIRE_RL_s_config_1_axiWriteSpecialIsHandled_2)
	$display("Error: \"/home/johannes/Documents/Bluespec/BlueAXI/src/GenericAxi4LiteSlave.bsv\", line 338, column 18: (R0002)\n  Conflict-free rules RL_s_config_1_axiWriteSpecialIsHandled_6 and\n  RL_s_config_1_axiWriteSpecialIsHandled_2 called conflicting methods wset and\n  wset of module instance s_config_writeIsHandled.\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_s_config_1_axiWriteSpecialIsHandled_6 &&
	  WILL_FIRE_RL_s_config_1_axiWriteSpecialIsHandled_1)
	$display("Error: \"/home/johannes/Documents/Bluespec/BlueAXI/src/GenericAxi4LiteSlave.bsv\", line 338, column 18: (R0002)\n  Conflict-free rules RL_s_config_1_axiWriteSpecialIsHandled_6 and\n  RL_s_config_1_axiWriteSpecialIsHandled_1 called conflicting methods wset and\n  wset of module instance s_config_writeIsHandled.\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_s_config_1_axiWriteSpecialIsHandled_6 &&
	  WILL_FIRE_RL_s_config_1_axiWriteSpecial_1)
	$display("Error: \"/home/johannes/Documents/Bluespec/BlueAXI/src/GenericAxi4LiteSlave.bsv\", line 338, column 18: (R0002)\n  Conflict-free rules RL_s_config_1_axiWriteSpecialIsHandled_6 and\n  RL_s_config_1_axiWriteSpecial_1 called conflicting methods port0__read and\n  port0__write of module instance s_config_writeSlave_in_rv.\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_s_config_1_axiWriteSpecialIsHandled_6 &&
	  WILL_FIRE_RL_s_config_1_axiWriteSpecialIsHandled)
	$display("Error: \"/home/johannes/Documents/Bluespec/BlueAXI/src/GenericAxi4LiteSlave.bsv\", line 338, column 18: (R0002)\n  Conflict-free rules RL_s_config_1_axiWriteSpecialIsHandled_6 and\n  RL_s_config_1_axiWriteSpecialIsHandled called conflicting methods wset and\n  wset of module instance s_config_writeIsHandled.\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_s_config_1_axiWriteSpecialIsHandled_6 &&
	  WILL_FIRE_RL_s_config_1_axiWriteSpecial)
	$display("Error: \"/home/johannes/Documents/Bluespec/BlueAXI/src/GenericAxi4LiteSlave.bsv\", line 338, column 18: (R0002)\n  Conflict-free rules RL_s_config_1_axiWriteSpecialIsHandled_6 and\n  RL_s_config_1_axiWriteSpecial called conflicting methods port0__read and\n  port0__write of module instance s_config_writeSlave_in_rv.\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_recvReadResponseCheck && !error &&
	  rdMaster_out_1_rv[2:1] != 2'd2 &&
	  rdMaster_out_1_rv[2:1] != 2'd3 &&
	  rdMaster_out_1_rv[514:3] !=
	  512'hDEAFBEEFDEADBEFFDEADBEFFDEAFBEEFDEADBEFFDEADBEFFDEAFBEEFDEADBEFFDEADBEFFDEAFBEEFDEADBEFFDEADBEFFDEAFBEEFDEADBEFFDEADBEFFDEAFBEEF)
	begin
	  v__h59695 = $time;
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_recvReadResponseCheck && !error &&
	  rdMaster_out_1_rv[2:1] != 2'd2 &&
	  rdMaster_out_1_rv[2:1] != 2'd3 &&
	  rdMaster_out_1_rv[514:3] !=
	  512'hDEAFBEEFDEADBEFFDEADBEFFDEAFBEEFDEADBEFFDEADBEFFDEAFBEEFDEADBEFFDEADBEFFDEAFBEEFDEADBEFFDEADBEFFDEAFBEEFDEADBEFFDEADBEFFDEAFBEEF)
	$write("%c[31m", $signed(32'd27));
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_recvReadResponseCheck && !error &&
	  rdMaster_out_1_rv[2:1] != 2'd2 &&
	  rdMaster_out_1_rv[2:1] != 2'd3 &&
	  rdMaster_out_1_rv[514:3] !=
	  512'hDEAFBEEFDEADBEFFDEADBEFFDEAFBEEFDEADBEFFDEADBEFFDEAFBEEFDEADBEFFDEADBEFFDEAFBEEFDEADBEFFDEADBEFFDEAFBEEFDEADBEFFDEADBEFFDEAFBEEF)
	$write("(%0d) ", v__h59695, "Memory ERROR");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_recvReadResponseCheck && !error &&
	  rdMaster_out_1_rv[2:1] != 2'd2 &&
	  rdMaster_out_1_rv[2:1] != 2'd3 &&
	  rdMaster_out_1_rv[514:3] !=
	  512'hDEAFBEEFDEADBEFFDEADBEFFDEAFBEEFDEADBEFFDEADBEFFDEAFBEEFDEADBEFFDEADBEFFDEAFBEEFDEADBEFFDEADBEFFDEAFBEEFDEADBEFFDEADBEFFDEAFBEEF)
	$write("%c[0m", $signed(32'd27));
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_recvReadResponseCheck && !error &&
	  rdMaster_out_1_rv[2:1] != 2'd2 &&
	  rdMaster_out_1_rv[2:1] != 2'd3 &&
	  rdMaster_out_1_rv[514:3] !=
	  512'hDEAFBEEFDEADBEFFDEADBEFFDEAFBEEFDEADBEFFDEADBEFFDEAFBEEFDEADBEFFDEADBEFFDEAFBEEFDEADBEFFDEADBEFFDEAFBEEFDEADBEFFDEADBEFFDEAFBEEF)
	$write("\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_recvReadResponseCheck && !error &&
	  rdMaster_out_1_rv[2:1] != 2'd2 &&
	  rdMaster_out_1_rv[2:1] != 2'd3 &&
	  rdMaster_out_1_rv[514:3] !=
	  512'hDEAFBEEFDEADBEFFDEADBEFFDEAFBEEFDEADBEFFDEADBEFFDEAFBEEFDEADBEFFDEADBEFFDEAFBEEFDEADBEFFDEADBEFFDEAFBEEFDEADBEFFDEADBEFFDEAFBEEF)
	begin
	  v__h59750 = $time;
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_recvReadResponseCheck && !error &&
	  rdMaster_out_1_rv[2:1] != 2'd2 &&
	  rdMaster_out_1_rv[2:1] != 2'd3 &&
	  rdMaster_out_1_rv[514:3] !=
	  512'hDEAFBEEFDEADBEFFDEADBEFFDEAFBEEFDEADBEFFDEADBEFFDEAFBEEFDEADBEFFDEADBEFFDEAFBEEFDEADBEFFDEADBEFFDEAFBEEFDEADBEFFDEADBEFFDEAFBEEF)
	$write("%c[34m", $signed(32'd27));
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_recvReadResponseCheck && !error &&
	  rdMaster_out_1_rv[2:1] != 2'd2 &&
	  rdMaster_out_1_rv[2:1] != 2'd3 &&
	  rdMaster_out_1_rv[514:3] !=
	  512'hDEAFBEEFDEADBEFFDEADBEFFDEAFBEEFDEADBEFFDEADBEFFDEAFBEEFDEADBEFFDEADBEFFDEAFBEEFDEADBEFFDEADBEFFDEAFBEEFDEADBEFFDEADBEFFDEAFBEEF)
	$write("(%0d) ", v__h59750, "'h%h", rdMaster_out_1_rv[514:3]);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_recvReadResponseCheck && !error &&
	  rdMaster_out_1_rv[2:1] != 2'd2 &&
	  rdMaster_out_1_rv[2:1] != 2'd3 &&
	  rdMaster_out_1_rv[514:3] !=
	  512'hDEAFBEEFDEADBEFFDEADBEFFDEAFBEEFDEADBEFFDEADBEFFDEAFBEEFDEADBEFFDEADBEFFDEAFBEEFDEADBEFFDEADBEFFDEAFBEEFDEADBEFFDEADBEFFDEAFBEEF)
	$write("%c[0m", $signed(32'd27));
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_recvReadResponseCheck && !error &&
	  rdMaster_out_1_rv[2:1] != 2'd2 &&
	  rdMaster_out_1_rv[2:1] != 2'd3 &&
	  rdMaster_out_1_rv[514:3] !=
	  512'hDEAFBEEFDEADBEFFDEADBEFFDEAFBEEFDEADBEFFDEADBEFFDEAFBEEFDEADBEFFDEADBEFFDEAFBEEFDEADBEFFDEADBEFFDEAFBEEFDEADBEFFDEADBEFFDEAFBEEF)
	$write("\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_checkActivityRandom &&
	  NOT_cycleCount_91_ULT_cycles_8_92___d493)
	begin
	  v__h28689 = $time;
	  #0;
	end
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_checkActivityRandom &&
	  NOT_cycleCount_91_ULT_cycles_8_92___d493)
	$write("%c[34m", $signed(32'd27));
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_checkActivityRandom &&
	  NOT_cycleCount_91_ULT_cycles_8_92___d493)
	$write("(%0d) ",
	       v__h28689,
	       "Completed %d write chunks and  %d read chunks in %d cycles",
	       $unsigned(chunks_wr_completed),
	       $unsigned(chunks_rd_completed),
	       cycles);
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_checkActivityRandom &&
	  NOT_cycleCount_91_ULT_cycles_8_92___d493)
	$write("%c[0m", $signed(32'd27));
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_checkActivityRandom &&
	  NOT_cycleCount_91_ULT_cycles_8_92___d493)
	$write("\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_s_config_1_axiWriteSpecial_2 &&
	  WILL_FIRE_RL_s_config_1_axiWriteSpecial_1)
	$display("Error: \"/home/johannes/Documents/Bluespec/BlueAXI/src/GenericAxi4LiteSlave.bsv\", line 327, column 18: (R0002)\n  Conflict-free rules RL_s_config_1_axiWriteSpecial_2 and\n  RL_s_config_1_axiWriteSpecial_1 called conflicting methods port0__read and\n  port0__write of module instance s_config_writeSlave_in_rv.\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_s_config_1_axiWriteSpecial_2 &&
	  WILL_FIRE_RL_s_config_1_axiWriteSpecial_1 &&
	  s_config_writeSlave_in_rv[81:78] == 4'd4 &&
	  s_config_writeSlave_in_rv[87] &&
	  !s_config_writeBusy)
	$display("Error: \"/home/johannes/Documents/Bluespec/BlueAXI/src/GenericAxi4LiteSlave.bsv\", line 327, column 18: (R0002)\n  Conflict-free rules RL_s_config_1_axiWriteSpecial_2 and\n  RL_s_config_1_axiWriteSpecial_1 called conflicting methods port1__read and\n  port1__write of module instance s_config_writeSlave_out_rv.\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_s_config_1_axiWriteSpecial_2 &&
	  WILL_FIRE_RL_s_config_1_axiWriteSpecial)
	$display("Error: \"/home/johannes/Documents/Bluespec/BlueAXI/src/GenericAxi4LiteSlave.bsv\", line 327, column 18: (R0002)\n  Conflict-free rules RL_s_config_1_axiWriteSpecial_2 and\n  RL_s_config_1_axiWriteSpecial called conflicting methods port0__read and\n  port0__write of module instance s_config_writeSlave_in_rv.\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_s_config_1_axiWriteSpecial_2 &&
	  WILL_FIRE_RL_s_config_1_axiWriteSpecial &&
	  s_config_writeSlave_in_rv[81:78] == 4'd4 &&
	  s_config_writeSlave_in_rv[87] &&
	  !s_config_writeBusy)
	$display("Error: \"/home/johannes/Documents/Bluespec/BlueAXI/src/GenericAxi4LiteSlave.bsv\", line 327, column 18: (R0002)\n  Conflict-free rules RL_s_config_1_axiWriteSpecial_2 and\n  RL_s_config_1_axiWriteSpecial called conflicting methods port1__read and\n  port1__write of module instance s_config_writeSlave_out_rv.\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_s_config_1_axiWriteSpecial_3 &&
	  WILL_FIRE_RL_s_config_1_axiWriteSpecial_2)
	$display("Error: \"/home/johannes/Documents/Bluespec/BlueAXI/src/GenericAxi4LiteSlave.bsv\", line 327, column 18: (R0002)\n  Conflict-free rules RL_s_config_1_axiWriteSpecial_3 and\n  RL_s_config_1_axiWriteSpecial_2 called conflicting methods port0__read and\n  port0__write of module instance s_config_writeSlave_in_rv.\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_s_config_1_axiWriteSpecial_3 &&
	  WILL_FIRE_RL_s_config_1_axiWriteSpecial_2 &&
	  s_config_writeSlave_in_rv[81:78] == 4'd6 &&
	  s_config_writeSlave_in_rv[87] &&
	  !s_config_writeBusy)
	$display("Error: \"/home/johannes/Documents/Bluespec/BlueAXI/src/GenericAxi4LiteSlave.bsv\", line 327, column 18: (R0002)\n  Conflict-free rules RL_s_config_1_axiWriteSpecial_3 and\n  RL_s_config_1_axiWriteSpecial_2 called conflicting methods port1__read and\n  port1__write of module instance s_config_writeSlave_out_rv.\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_s_config_1_axiWriteSpecial_3 &&
	  WILL_FIRE_RL_s_config_1_axiWriteSpecial_1)
	$display("Error: \"/home/johannes/Documents/Bluespec/BlueAXI/src/GenericAxi4LiteSlave.bsv\", line 327, column 18: (R0002)\n  Conflict-free rules RL_s_config_1_axiWriteSpecial_3 and\n  RL_s_config_1_axiWriteSpecial_1 called conflicting methods port0__read and\n  port0__write of module instance s_config_writeSlave_in_rv.\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_s_config_1_axiWriteSpecial_3 &&
	  WILL_FIRE_RL_s_config_1_axiWriteSpecial_1 &&
	  s_config_writeSlave_in_rv[81:78] == 4'd6 &&
	  s_config_writeSlave_in_rv[87] &&
	  !s_config_writeBusy)
	$display("Error: \"/home/johannes/Documents/Bluespec/BlueAXI/src/GenericAxi4LiteSlave.bsv\", line 327, column 18: (R0002)\n  Conflict-free rules RL_s_config_1_axiWriteSpecial_3 and\n  RL_s_config_1_axiWriteSpecial_1 called conflicting methods port1__read and\n  port1__write of module instance s_config_writeSlave_out_rv.\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_s_config_1_axiWriteSpecial_3 &&
	  WILL_FIRE_RL_s_config_1_axiWriteSpecial)
	$display("Error: \"/home/johannes/Documents/Bluespec/BlueAXI/src/GenericAxi4LiteSlave.bsv\", line 327, column 18: (R0002)\n  Conflict-free rules RL_s_config_1_axiWriteSpecial_3 and\n  RL_s_config_1_axiWriteSpecial called conflicting methods port0__read and\n  port0__write of module instance s_config_writeSlave_in_rv.\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_s_config_1_axiWriteSpecial_3 &&
	  WILL_FIRE_RL_s_config_1_axiWriteSpecial &&
	  s_config_writeSlave_in_rv[81:78] == 4'd6 &&
	  s_config_writeSlave_in_rv[87] &&
	  !s_config_writeBusy)
	$display("Error: \"/home/johannes/Documents/Bluespec/BlueAXI/src/GenericAxi4LiteSlave.bsv\", line 327, column 18: (R0002)\n  Conflict-free rules RL_s_config_1_axiWriteSpecial_3 and\n  RL_s_config_1_axiWriteSpecial called conflicting methods port1__read and\n  port1__write of module instance s_config_writeSlave_out_rv.\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_s_config_1_axiWriteSpecial_4 &&
	  WILL_FIRE_RL_s_config_1_axiWriteSpecial_3)
	$display("Error: \"/home/johannes/Documents/Bluespec/BlueAXI/src/GenericAxi4LiteSlave.bsv\", line 327, column 18: (R0002)\n  Conflict-free rules RL_s_config_1_axiWriteSpecial_4 and\n  RL_s_config_1_axiWriteSpecial_3 called conflicting methods port0__read and\n  port0__write of module instance s_config_writeSlave_in_rv.\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_s_config_1_axiWriteSpecial_4 &&
	  WILL_FIRE_RL_s_config_1_axiWriteSpecial_3 &&
	  s_config_writeSlave_in_rv[81:78] == 4'd8 &&
	  s_config_writeSlave_in_rv[87] &&
	  !s_config_writeBusy)
	$display("Error: \"/home/johannes/Documents/Bluespec/BlueAXI/src/GenericAxi4LiteSlave.bsv\", line 327, column 18: (R0002)\n  Conflict-free rules RL_s_config_1_axiWriteSpecial_4 and\n  RL_s_config_1_axiWriteSpecial_3 called conflicting methods port1__read and\n  port1__write of module instance s_config_writeSlave_out_rv.\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_s_config_1_axiWriteSpecial_4 &&
	  WILL_FIRE_RL_s_config_1_axiWriteSpecial_2)
	$display("Error: \"/home/johannes/Documents/Bluespec/BlueAXI/src/GenericAxi4LiteSlave.bsv\", line 327, column 18: (R0002)\n  Conflict-free rules RL_s_config_1_axiWriteSpecial_4 and\n  RL_s_config_1_axiWriteSpecial_2 called conflicting methods port0__read and\n  port0__write of module instance s_config_writeSlave_in_rv.\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_s_config_1_axiWriteSpecial_4 &&
	  WILL_FIRE_RL_s_config_1_axiWriteSpecial_2 &&
	  s_config_writeSlave_in_rv[81:78] == 4'd8 &&
	  s_config_writeSlave_in_rv[87] &&
	  !s_config_writeBusy)
	$display("Error: \"/home/johannes/Documents/Bluespec/BlueAXI/src/GenericAxi4LiteSlave.bsv\", line 327, column 18: (R0002)\n  Conflict-free rules RL_s_config_1_axiWriteSpecial_4 and\n  RL_s_config_1_axiWriteSpecial_2 called conflicting methods port1__read and\n  port1__write of module instance s_config_writeSlave_out_rv.\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_s_config_1_axiWriteSpecial_4 &&
	  WILL_FIRE_RL_s_config_1_axiWriteSpecial_1)
	$display("Error: \"/home/johannes/Documents/Bluespec/BlueAXI/src/GenericAxi4LiteSlave.bsv\", line 327, column 18: (R0002)\n  Conflict-free rules RL_s_config_1_axiWriteSpecial_4 and\n  RL_s_config_1_axiWriteSpecial_1 called conflicting methods port0__read and\n  port0__write of module instance s_config_writeSlave_in_rv.\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_s_config_1_axiWriteSpecial_4 &&
	  WILL_FIRE_RL_s_config_1_axiWriteSpecial_1 &&
	  s_config_writeSlave_in_rv[81:78] == 4'd8 &&
	  s_config_writeSlave_in_rv[87] &&
	  !s_config_writeBusy)
	$display("Error: \"/home/johannes/Documents/Bluespec/BlueAXI/src/GenericAxi4LiteSlave.bsv\", line 327, column 18: (R0002)\n  Conflict-free rules RL_s_config_1_axiWriteSpecial_4 and\n  RL_s_config_1_axiWriteSpecial_1 called conflicting methods port1__read and\n  port1__write of module instance s_config_writeSlave_out_rv.\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_s_config_1_axiWriteSpecial_4 &&
	  WILL_FIRE_RL_s_config_1_axiWriteSpecial)
	$display("Error: \"/home/johannes/Documents/Bluespec/BlueAXI/src/GenericAxi4LiteSlave.bsv\", line 327, column 18: (R0002)\n  Conflict-free rules RL_s_config_1_axiWriteSpecial_4 and\n  RL_s_config_1_axiWriteSpecial called conflicting methods port0__read and\n  port0__write of module instance s_config_writeSlave_in_rv.\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_s_config_1_axiWriteSpecial_4 &&
	  WILL_FIRE_RL_s_config_1_axiWriteSpecial &&
	  s_config_writeSlave_in_rv[81:78] == 4'd8 &&
	  s_config_writeSlave_in_rv[87] &&
	  !s_config_writeBusy)
	$display("Error: \"/home/johannes/Documents/Bluespec/BlueAXI/src/GenericAxi4LiteSlave.bsv\", line 327, column 18: (R0002)\n  Conflict-free rules RL_s_config_1_axiWriteSpecial_4 and\n  RL_s_config_1_axiWriteSpecial called conflicting methods port1__read and\n  port1__write of module instance s_config_writeSlave_out_rv.\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_s_config_1_axiWriteSpecial_5 &&
	  WILL_FIRE_RL_s_config_1_axiWriteSpecial_4)
	$display("Error: \"/home/johannes/Documents/Bluespec/BlueAXI/src/GenericAxi4LiteSlave.bsv\", line 327, column 18: (R0002)\n  Conflict-free rules RL_s_config_1_axiWriteSpecial_5 and\n  RL_s_config_1_axiWriteSpecial_4 called conflicting methods port0__read and\n  port0__write of module instance s_config_writeSlave_in_rv.\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_s_config_1_axiWriteSpecial_5 &&
	  WILL_FIRE_RL_s_config_1_axiWriteSpecial_4 &&
	  s_config_writeSlave_in_rv[81:78] == 4'd10 &&
	  s_config_writeSlave_in_rv[87] &&
	  !s_config_writeBusy)
	$display("Error: \"/home/johannes/Documents/Bluespec/BlueAXI/src/GenericAxi4LiteSlave.bsv\", line 327, column 18: (R0002)\n  Conflict-free rules RL_s_config_1_axiWriteSpecial_5 and\n  RL_s_config_1_axiWriteSpecial_4 called conflicting methods port1__read and\n  port1__write of module instance s_config_writeSlave_out_rv.\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_s_config_1_axiWriteSpecial_5 &&
	  WILL_FIRE_RL_s_config_1_axiWriteSpecial_3)
	$display("Error: \"/home/johannes/Documents/Bluespec/BlueAXI/src/GenericAxi4LiteSlave.bsv\", line 327, column 18: (R0002)\n  Conflict-free rules RL_s_config_1_axiWriteSpecial_5 and\n  RL_s_config_1_axiWriteSpecial_3 called conflicting methods port0__read and\n  port0__write of module instance s_config_writeSlave_in_rv.\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_s_config_1_axiWriteSpecial_5 &&
	  WILL_FIRE_RL_s_config_1_axiWriteSpecial_3 &&
	  s_config_writeSlave_in_rv[81:78] == 4'd10 &&
	  s_config_writeSlave_in_rv[87] &&
	  !s_config_writeBusy)
	$display("Error: \"/home/johannes/Documents/Bluespec/BlueAXI/src/GenericAxi4LiteSlave.bsv\", line 327, column 18: (R0002)\n  Conflict-free rules RL_s_config_1_axiWriteSpecial_5 and\n  RL_s_config_1_axiWriteSpecial_3 called conflicting methods port1__read and\n  port1__write of module instance s_config_writeSlave_out_rv.\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_s_config_1_axiWriteSpecial_5 &&
	  WILL_FIRE_RL_s_config_1_axiWriteSpecial_2)
	$display("Error: \"/home/johannes/Documents/Bluespec/BlueAXI/src/GenericAxi4LiteSlave.bsv\", line 327, column 18: (R0002)\n  Conflict-free rules RL_s_config_1_axiWriteSpecial_5 and\n  RL_s_config_1_axiWriteSpecial_2 called conflicting methods port0__read and\n  port0__write of module instance s_config_writeSlave_in_rv.\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_s_config_1_axiWriteSpecial_5 &&
	  WILL_FIRE_RL_s_config_1_axiWriteSpecial_2 &&
	  s_config_writeSlave_in_rv[81:78] == 4'd10 &&
	  s_config_writeSlave_in_rv[87] &&
	  !s_config_writeBusy)
	$display("Error: \"/home/johannes/Documents/Bluespec/BlueAXI/src/GenericAxi4LiteSlave.bsv\", line 327, column 18: (R0002)\n  Conflict-free rules RL_s_config_1_axiWriteSpecial_5 and\n  RL_s_config_1_axiWriteSpecial_2 called conflicting methods port1__read and\n  port1__write of module instance s_config_writeSlave_out_rv.\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_s_config_1_axiWriteSpecial_5 &&
	  WILL_FIRE_RL_s_config_1_axiWriteSpecial_1)
	$display("Error: \"/home/johannes/Documents/Bluespec/BlueAXI/src/GenericAxi4LiteSlave.bsv\", line 327, column 18: (R0002)\n  Conflict-free rules RL_s_config_1_axiWriteSpecial_5 and\n  RL_s_config_1_axiWriteSpecial_1 called conflicting methods port0__read and\n  port0__write of module instance s_config_writeSlave_in_rv.\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_s_config_1_axiWriteSpecial_5 &&
	  WILL_FIRE_RL_s_config_1_axiWriteSpecial_1 &&
	  s_config_writeSlave_in_rv[81:78] == 4'd10 &&
	  s_config_writeSlave_in_rv[87] &&
	  !s_config_writeBusy)
	$display("Error: \"/home/johannes/Documents/Bluespec/BlueAXI/src/GenericAxi4LiteSlave.bsv\", line 327, column 18: (R0002)\n  Conflict-free rules RL_s_config_1_axiWriteSpecial_5 and\n  RL_s_config_1_axiWriteSpecial_1 called conflicting methods port1__read and\n  port1__write of module instance s_config_writeSlave_out_rv.\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_s_config_1_axiWriteSpecial_5 &&
	  WILL_FIRE_RL_s_config_1_axiWriteSpecial)
	$display("Error: \"/home/johannes/Documents/Bluespec/BlueAXI/src/GenericAxi4LiteSlave.bsv\", line 327, column 18: (R0002)\n  Conflict-free rules RL_s_config_1_axiWriteSpecial_5 and\n  RL_s_config_1_axiWriteSpecial called conflicting methods port0__read and\n  port0__write of module instance s_config_writeSlave_in_rv.\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_s_config_1_axiWriteSpecial_5 &&
	  WILL_FIRE_RL_s_config_1_axiWriteSpecial &&
	  s_config_writeSlave_in_rv[81:78] == 4'd10 &&
	  s_config_writeSlave_in_rv[87] &&
	  !s_config_writeBusy)
	$display("Error: \"/home/johannes/Documents/Bluespec/BlueAXI/src/GenericAxi4LiteSlave.bsv\", line 327, column 18: (R0002)\n  Conflict-free rules RL_s_config_1_axiWriteSpecial_5 and\n  RL_s_config_1_axiWriteSpecial called conflicting methods port1__read and\n  port1__write of module instance s_config_writeSlave_out_rv.\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_s_config_1_axiWriteSpecial_6 &&
	  WILL_FIRE_RL_s_config_1_axiWriteSpecial_5)
	$display("Error: \"/home/johannes/Documents/Bluespec/BlueAXI/src/GenericAxi4LiteSlave.bsv\", line 327, column 18: (R0002)\n  Conflict-free rules RL_s_config_1_axiWriteSpecial_6 and\n  RL_s_config_1_axiWriteSpecial_5 called conflicting methods port0__read and\n  port0__write of module instance s_config_writeSlave_in_rv.\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_s_config_1_axiWriteSpecial_6 &&
	  WILL_FIRE_RL_s_config_1_axiWriteSpecial_5 &&
	  s_config_writeSlave_in_rv[81:78] == 4'd12 &&
	  s_config_writeSlave_in_rv[87] &&
	  !s_config_writeBusy)
	$display("Error: \"/home/johannes/Documents/Bluespec/BlueAXI/src/GenericAxi4LiteSlave.bsv\", line 327, column 18: (R0002)\n  Conflict-free rules RL_s_config_1_axiWriteSpecial_6 and\n  RL_s_config_1_axiWriteSpecial_5 called conflicting methods port1__read and\n  port1__write of module instance s_config_writeSlave_out_rv.\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_s_config_1_axiWriteSpecial_6 &&
	  WILL_FIRE_RL_s_config_1_axiWriteSpecial_4)
	$display("Error: \"/home/johannes/Documents/Bluespec/BlueAXI/src/GenericAxi4LiteSlave.bsv\", line 327, column 18: (R0002)\n  Conflict-free rules RL_s_config_1_axiWriteSpecial_6 and\n  RL_s_config_1_axiWriteSpecial_4 called conflicting methods port0__read and\n  port0__write of module instance s_config_writeSlave_in_rv.\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_s_config_1_axiWriteSpecial_6 &&
	  WILL_FIRE_RL_s_config_1_axiWriteSpecial_4 &&
	  s_config_writeSlave_in_rv[81:78] == 4'd12 &&
	  s_config_writeSlave_in_rv[87] &&
	  !s_config_writeBusy)
	$display("Error: \"/home/johannes/Documents/Bluespec/BlueAXI/src/GenericAxi4LiteSlave.bsv\", line 327, column 18: (R0002)\n  Conflict-free rules RL_s_config_1_axiWriteSpecial_6 and\n  RL_s_config_1_axiWriteSpecial_4 called conflicting methods port1__read and\n  port1__write of module instance s_config_writeSlave_out_rv.\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_s_config_1_axiWriteSpecial_6 &&
	  WILL_FIRE_RL_s_config_1_axiWriteSpecial_3)
	$display("Error: \"/home/johannes/Documents/Bluespec/BlueAXI/src/GenericAxi4LiteSlave.bsv\", line 327, column 18: (R0002)\n  Conflict-free rules RL_s_config_1_axiWriteSpecial_6 and\n  RL_s_config_1_axiWriteSpecial_3 called conflicting methods port0__read and\n  port0__write of module instance s_config_writeSlave_in_rv.\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_s_config_1_axiWriteSpecial_6 &&
	  WILL_FIRE_RL_s_config_1_axiWriteSpecial_3 &&
	  s_config_writeSlave_in_rv[81:78] == 4'd12 &&
	  s_config_writeSlave_in_rv[87] &&
	  !s_config_writeBusy)
	$display("Error: \"/home/johannes/Documents/Bluespec/BlueAXI/src/GenericAxi4LiteSlave.bsv\", line 327, column 18: (R0002)\n  Conflict-free rules RL_s_config_1_axiWriteSpecial_6 and\n  RL_s_config_1_axiWriteSpecial_3 called conflicting methods port1__read and\n  port1__write of module instance s_config_writeSlave_out_rv.\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_s_config_1_axiWriteSpecial_6 &&
	  WILL_FIRE_RL_s_config_1_axiWriteSpecial_2)
	$display("Error: \"/home/johannes/Documents/Bluespec/BlueAXI/src/GenericAxi4LiteSlave.bsv\", line 327, column 18: (R0002)\n  Conflict-free rules RL_s_config_1_axiWriteSpecial_6 and\n  RL_s_config_1_axiWriteSpecial_2 called conflicting methods port0__read and\n  port0__write of module instance s_config_writeSlave_in_rv.\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_s_config_1_axiWriteSpecial_6 &&
	  WILL_FIRE_RL_s_config_1_axiWriteSpecial_2 &&
	  s_config_writeSlave_in_rv[81:78] == 4'd12 &&
	  s_config_writeSlave_in_rv[87] &&
	  !s_config_writeBusy)
	$display("Error: \"/home/johannes/Documents/Bluespec/BlueAXI/src/GenericAxi4LiteSlave.bsv\", line 327, column 18: (R0002)\n  Conflict-free rules RL_s_config_1_axiWriteSpecial_6 and\n  RL_s_config_1_axiWriteSpecial_2 called conflicting methods port1__read and\n  port1__write of module instance s_config_writeSlave_out_rv.\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_s_config_1_axiWriteSpecial_6 &&
	  WILL_FIRE_RL_s_config_1_axiWriteSpecial_1)
	$display("Error: \"/home/johannes/Documents/Bluespec/BlueAXI/src/GenericAxi4LiteSlave.bsv\", line 327, column 18: (R0002)\n  Conflict-free rules RL_s_config_1_axiWriteSpecial_6 and\n  RL_s_config_1_axiWriteSpecial_1 called conflicting methods port0__read and\n  port0__write of module instance s_config_writeSlave_in_rv.\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_s_config_1_axiWriteSpecial_6 &&
	  WILL_FIRE_RL_s_config_1_axiWriteSpecial_1 &&
	  s_config_writeSlave_in_rv[81:78] == 4'd12 &&
	  s_config_writeSlave_in_rv[87] &&
	  !s_config_writeBusy)
	$display("Error: \"/home/johannes/Documents/Bluespec/BlueAXI/src/GenericAxi4LiteSlave.bsv\", line 327, column 18: (R0002)\n  Conflict-free rules RL_s_config_1_axiWriteSpecial_6 and\n  RL_s_config_1_axiWriteSpecial_1 called conflicting methods port1__read and\n  port1__write of module instance s_config_writeSlave_out_rv.\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_s_config_1_axiWriteSpecial_6 &&
	  WILL_FIRE_RL_s_config_1_axiWriteSpecial)
	$display("Error: \"/home/johannes/Documents/Bluespec/BlueAXI/src/GenericAxi4LiteSlave.bsv\", line 327, column 18: (R0002)\n  Conflict-free rules RL_s_config_1_axiWriteSpecial_6 and\n  RL_s_config_1_axiWriteSpecial called conflicting methods port0__read and\n  port0__write of module instance s_config_writeSlave_in_rv.\n");
    if (RST_N != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_s_config_1_axiWriteSpecial_6 &&
	  WILL_FIRE_RL_s_config_1_axiWriteSpecial &&
	  s_config_writeSlave_in_rv[81:78] == 4'd12 &&
	  s_config_writeSlave_in_rv[87] &&
	  !s_config_writeBusy)
	$display("Error: \"/home/johannes/Documents/Bluespec/BlueAXI/src/GenericAxi4LiteSlave.bsv\", line 327, column 18: (R0002)\n  Conflict-free rules RL_s_config_1_axiWriteSpecial_6 and\n  RL_s_config_1_axiWriteSpecial called conflicting methods port1__read and\n  port1__write of module instance s_config_writeSlave_out_rv.\n");
  end
  // synopsys translate_on
endmodule  // mkMemoryBenchmark

